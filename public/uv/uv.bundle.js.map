{
  "version": 3,
  "sources": ["../node_modules/events/events.js", "../node_modules/set-cookie-parser/lib/set-cookie.js", "../src/rewrite/html.js", "../node_modules/parse5/dist/common/unicode.js", "../node_modules/parse5/dist/common/error-codes.js", "../node_modules/parse5/dist/tokenizer/preprocessor.js", "../node_modules/parse5/dist/common/token.js", "../node_modules/entities/src/generated/decode-data-html.ts", "../node_modules/entities/src/decode-codepoint.ts", "../node_modules/entities/src/decode.ts", "../node_modules/parse5/dist/common/html.js", "../node_modules/parse5/dist/tokenizer/index.js", "../node_modules/parse5/dist/parser/open-element-stack.js", "../node_modules/parse5/dist/parser/formatting-element-list.js", "../node_modules/parse5/dist/tree-adapters/default.js", "../node_modules/parse5/dist/common/doctype.js", "../node_modules/parse5/dist/common/foreign-content.js", "../node_modules/parse5/dist/parser/index.js", "../node_modules/entities/src/escape.ts", "../node_modules/parse5/dist/serializer/index.js", "../node_modules/parse5/dist/index.js", "../src/rewrite/css.js", "../node_modules/meriyah/dist/meriyah.mjs", "../node_modules/astring/dist/astring.mjs", "../src/rewrite/js.js", "../src/rewrite/index.js", "../src/rewrite/codecs.js", "../src/rewrite/cookie.js", "../src/rewrite/rewrite.html.js", "../src/rewrite/rewrite.script.js", "../node_modules/idb/build/index.js", "../node_modules/@mercuryworkshop/bare-mux/dist/index.mjs"],
  "sourcesContent": ["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "\"use strict\";\n\nvar defaultParseOptions = {\n  decodeValues: true,\n  map: false,\n  silent: false,\n};\n\nfunction isNonEmptyString(str) {\n  return typeof str === \"string\" && !!str.trim();\n}\n\nfunction parseString(setCookieValue, options) {\n  var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n\n  var nameValuePairStr = parts.shift();\n  var parsed = parseNameValuePair(nameValuePairStr);\n  var name = parsed.name;\n  var value = parsed.value;\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  try {\n    value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value\n  } catch (e) {\n    console.error(\n      \"set-cookie-parser encountered an error while decoding a cookie with value '\" +\n        value +\n        \"'. Set options.decodeValues to false to disable this feature.\",\n      e\n    );\n  }\n\n  var cookie = {\n    name: name,\n    value: value,\n  };\n\n  parts.forEach(function (part) {\n    var sides = part.split(\"=\");\n    var key = sides.shift().trimLeft().toLowerCase();\n    var value = sides.join(\"=\");\n    if (key === \"expires\") {\n      cookie.expires = new Date(value);\n    } else if (key === \"max-age\") {\n      cookie.maxAge = parseInt(value, 10);\n    } else if (key === \"secure\") {\n      cookie.secure = true;\n    } else if (key === \"httponly\") {\n      cookie.httpOnly = true;\n    } else if (key === \"samesite\") {\n      cookie.sameSite = value;\n    } else if (key === \"partitioned\") {\n      cookie.partitioned = true;\n    } else {\n      cookie[key] = value;\n    }\n  });\n\n  return cookie;\n}\n\nfunction parseNameValuePair(nameValuePairStr) {\n  // Parses name-value-pair according to rfc6265bis draft\n\n  var name = \"\";\n  var value = \"\";\n  var nameValueArr = nameValuePairStr.split(\"=\");\n  if (nameValueArr.length > 1) {\n    name = nameValueArr.shift();\n    value = nameValueArr.join(\"=\"); // everything after the first =, joined by a \"=\" if there was more than one part\n  } else {\n    value = nameValuePairStr;\n  }\n\n  return { name: name, value: value };\n}\n\nfunction parse(input, options) {\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!input) {\n    if (!options.map) {\n      return [];\n    } else {\n      return {};\n    }\n  }\n\n  if (input.headers) {\n    if (typeof input.headers.getSetCookie === \"function\") {\n      // for fetch responses - they combine headers of the same type in the headers array,\n      // but getSetCookie returns an uncombined array\n      input = input.headers.getSetCookie();\n    } else if (input.headers[\"set-cookie\"]) {\n      // fast-path for node.js (which automatically normalizes header names to lower-case\n      input = input.headers[\"set-cookie\"];\n    } else {\n      // slow-path for other environments - see #25\n      var sch =\n        input.headers[\n          Object.keys(input.headers).find(function (key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })\n        ];\n      // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36\n      if (!sch && input.headers.cookie && !options.silent) {\n        console.warn(\n          \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n        );\n      }\n      input = sch;\n    }\n  }\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  if (!options.map) {\n    return input.filter(isNonEmptyString).map(function (str) {\n      return parseString(str, options);\n    });\n  } else {\n    var cookies = {};\n    return input.filter(isNonEmptyString).reduce(function (cookies, str) {\n      var cookie = parseString(str, options);\n      cookies[cookie.name] = cookie;\n      return cookies;\n    }, cookies);\n  }\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n\n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nfunction splitCookiesString(cookiesString) {\n  if (Array.isArray(cookiesString)) {\n    return cookiesString;\n  }\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos;\n        pos += 1;\n\n        skipWhitespace();\n        nextStart = pos;\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          // we found cookies separator\n          cookiesSeparatorFound = true;\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n\n  return cookiesStrings;\n}\n\nmodule.exports = parse;\nmodule.exports.parse = parse;\nmodule.exports.parseString = parseString;\nmodule.exports.splitCookiesString = splitCookiesString;\n", "import EventEmitter from \"events\";\r\nimport { parse, parseFragment, serialize } from \"parse5\";\r\n\r\n/**\r\n * @typedef {import('./index').default} Ultraviolet\r\n */\r\n\r\nclass HTML extends EventEmitter {\r\n\t/**\r\n\t *\r\n\t * @param {Ultraviolet} ctx\r\n\t */\r\n\tconstructor(ctx) {\r\n\t\tsuper();\r\n\t\tthis.ctx = ctx;\r\n\t\tthis.rewriteUrl = ctx.rewriteUrl;\r\n\t\tthis.sourceUrl = ctx.sourceUrl;\r\n\t}\r\n\trewrite(str, options = {}) {\r\n\t\tif (!str) return str;\r\n\t\treturn this.recast(\r\n\t\t\tstr,\r\n\t\t\t(node) => {\r\n\t\t\t\tif (node.tagName) this.emit(\"element\", node, \"rewrite\");\r\n\t\t\t\tif (node.attr) this.emit(\"attr\", node, \"rewrite\");\r\n\t\t\t\tif (node.nodeName === \"#text\") this.emit(\"text\", node, \"rewrite\");\r\n\t\t\t},\r\n\t\t\toptions\r\n\t\t);\r\n\t}\r\n\tsource(str, options = {}) {\r\n\t\tif (!str) return str;\r\n\t\treturn this.recast(\r\n\t\t\tstr,\r\n\t\t\t(node) => {\r\n\t\t\t\tif (node.tagName) this.emit(\"element\", node, \"source\");\r\n\t\t\t\tif (node.attr) this.emit(\"attr\", node, \"source\");\r\n\t\t\t\tif (node.nodeName === \"#text\") this.emit(\"text\", node, \"source\");\r\n\t\t\t},\r\n\t\t\toptions\r\n\t\t);\r\n\t}\r\n\trecast(str, fn, options = {}) {\r\n\t\ttry {\r\n\t\t\tconst ast = (options.document ? parse : parseFragment)(\r\n\t\t\t\tnew String(str).toString()\r\n\t\t\t);\r\n\t\t\tthis.iterate(ast, fn, options);\r\n\t\t\treturn serialize(ast);\r\n\t\t} catch (e) {\r\n\t\t\treturn str;\r\n\t\t}\r\n\t}\r\n\titerate(ast, fn, fnOptions) {\r\n\t\tif (!ast) return ast;\r\n\r\n\t\tif (ast.tagName) {\r\n\t\t\tconst element = new P5Element(ast, false, fnOptions);\r\n\t\t\tfn(element);\r\n\t\t\tif (ast.attrs) {\r\n\t\t\t\tfor (const attr of ast.attrs) {\r\n\t\t\t\t\tif (!attr.skip) fn(new AttributeEvent(element, attr, fnOptions));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (ast.childNodes) {\r\n\t\t\tfor (const child of ast.childNodes) {\r\n\t\t\t\tif (!child.skip) this.iterate(child, fn, fnOptions);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (ast.nodeName === \"#text\") {\r\n\t\t\tfn(new TextEvent(ast, new P5Element(ast.parentNode), false, fnOptions));\r\n\t\t}\r\n\r\n\t\treturn ast;\r\n\t}\r\n\twrapSrcset(str, meta = this.ctx.meta) {\r\n\t\treturn str\r\n\t\t\t.split(\",\")\r\n\t\t\t.map((src) => {\r\n\t\t\t\tconst parts = src.trimStart().split(\" \");\r\n\t\t\t\tif (parts[0]) parts[0] = this.ctx.rewriteUrl(parts[0], meta);\r\n\t\t\t\treturn parts.join(\" \");\r\n\t\t\t})\r\n\t\t\t.join(\", \");\r\n\t}\r\n\tunwrapSrcset(str, meta = this.ctx.meta) {\r\n\t\treturn str\r\n\t\t\t.split(\",\")\r\n\t\t\t.map((src) => {\r\n\t\t\t\tconst parts = src.trimStart().split(\" \");\r\n\t\t\t\tif (parts[0]) parts[0] = this.ctx.sourceUrl(parts[0], meta);\r\n\t\t\t\treturn parts.join(\" \");\r\n\t\t\t})\r\n\t\t\t.join(\", \");\r\n\t}\r\n\tstatic parse = parse;\r\n\tstatic parseFragment = parseFragment;\r\n\tstatic serialize = serialize;\r\n}\r\n\r\nclass P5Element extends EventEmitter {\r\n\tconstructor(node, stream = false, options = {}) {\r\n\t\tsuper();\r\n\t\tthis.stream = stream;\r\n\t\tthis.node = node;\r\n\t\tthis.options = options;\r\n\t}\r\n\tsetAttribute(name, value) {\r\n\t\tfor (const attr of this.attrs) {\r\n\t\t\tif (attr.name === name) {\r\n\t\t\t\tattr.value = value;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.attrs.push({\r\n\t\t\tname,\r\n\t\t\tvalue,\r\n\t\t});\r\n\t}\r\n\tgetAttribute(name) {\r\n\t\tconst attr = this.attrs.find((attr) => attr.name === name) || {};\r\n\t\treturn attr.value;\r\n\t}\r\n\thasAttribute(name) {\r\n\t\treturn !!this.attrs.find((attr) => attr.name === name);\r\n\t}\r\n\tremoveAttribute(name) {\r\n\t\tconst i = this.attrs.findIndex((attr) => attr.name === name);\r\n\t\tif (typeof i !== \"undefined\") this.attrs.splice(i, 1);\r\n\t}\r\n\tget tagName() {\r\n\t\treturn this.node.tagName;\r\n\t}\r\n\tset tagName(val) {\r\n\t\tthis.node.tagName = val;\r\n\t}\r\n\tget childNodes() {\r\n\t\treturn !this.stream ? this.node.childNodes : null;\r\n\t}\r\n\tget innerHTML() {\r\n\t\treturn !this.stream\r\n\t\t\t? serialize({\r\n\t\t\t\t\tnodeName: \"#document-fragment\",\r\n\t\t\t\t\tchildNodes: this.childNodes,\r\n\t\t\t\t})\r\n\t\t\t: null;\r\n\t}\r\n\tset innerHTML(val) {\r\n\t\tif (!this.stream) this.node.childNodes = parseFragment(val).childNodes;\r\n\t}\r\n\tget outerHTML() {\r\n\t\treturn !this.stream\r\n\t\t\t? serialize({\r\n\t\t\t\t\tnodeName: \"#document-fragment\",\r\n\t\t\t\t\tchildNodes: [this],\r\n\t\t\t\t})\r\n\t\t\t: null;\r\n\t}\r\n\tset outerHTML(val) {\r\n\t\tif (!this.stream)\r\n\t\t\tthis.parentNode.childNodes.splice(\r\n\t\t\t\tthis.parentNode.childNodes.findIndex((node) => node === this.node),\r\n\t\t\t\t1,\r\n\t\t\t\t...parseFragment(val).childNodes\r\n\t\t\t);\r\n\t}\r\n\tget textContent() {\r\n\t\tif (this.stream) return null;\r\n\r\n\t\tlet str = \"\";\r\n\t\tthis.iterate(this.node, (node) => {\r\n\t\t\tif (node.nodeName === \"#text\") str += node.value;\r\n\t\t});\r\n\r\n\t\treturn str;\r\n\t}\r\n\tset textContent(val) {\r\n\t\tif (!this.stream)\r\n\t\t\tthis.node.childNodes = [\r\n\t\t\t\t{\r\n\t\t\t\t\tnodeName: \"#text\",\r\n\t\t\t\t\tvalue: val,\r\n\t\t\t\t\tparentNode: this.node,\r\n\t\t\t\t},\r\n\t\t\t];\r\n\t}\r\n\tget nodeName() {\r\n\t\treturn this.node.nodeName;\r\n\t}\r\n\tget parentNode() {\r\n\t\treturn this.node.parentNode ? new P5Element(this.node.parentNode) : null;\r\n\t}\r\n\tget attrs() {\r\n\t\treturn this.node.attrs;\r\n\t}\r\n\tget namespaceURI() {\r\n\t\treturn this.node.namespaceURI;\r\n\t}\r\n}\r\n\r\nclass AttributeEvent {\r\n\tconstructor(node, attr, options = {}) {\r\n\t\tthis.attr = attr;\r\n\t\tthis.attrs = node.attrs;\r\n\t\tthis.node = node;\r\n\t\tthis.options = options;\r\n\t}\r\n\tdelete() {\r\n\t\tconst i = this.attrs.findIndex((attr) => attr === this.attr);\r\n\r\n\t\tthis.attrs.splice(i, 1);\r\n\r\n\t\tObject.defineProperty(this, \"deleted\", {\r\n\t\t\tget: () => true,\r\n\t\t});\r\n\r\n\t\treturn true;\r\n\t}\r\n\tget name() {\r\n\t\treturn this.attr.name;\r\n\t}\r\n\r\n\tset name(val) {\r\n\t\tthis.attr.name = val;\r\n\t}\r\n\tget value() {\r\n\t\treturn this.attr.value;\r\n\t}\r\n\r\n\tset value(val) {\r\n\t\tthis.attr.value = val;\r\n\t}\r\n\tget deleted() {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nclass TextEvent {\r\n\tconstructor(node, element, stream = false, options = {}) {\r\n\t\tthis.stream = stream;\r\n\t\tthis.node = node;\r\n\t\tthis.element = element;\r\n\t\tthis.options = options;\r\n\t}\r\n\tget nodeName() {\r\n\t\treturn this.node.nodeName;\r\n\t}\r\n\tget parentNode() {\r\n\t\treturn this.element;\r\n\t}\r\n\tget value() {\r\n\t\treturn this.stream ? this.node.text : this.node.value;\r\n\t}\r\n\tset value(val) {\r\n\t\tif (this.stream) this.node.text = val;\r\n\t\telse this.node.value = val;\r\n\t}\r\n}\r\n\r\nexport default HTML;\r\n", "const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n", "export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n", "import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n", "export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n", "// Generated using scripts/write-decode-map.ts\n\nexport const htmlDecodeTree: Uint16Array = /* #__PURE__ */ new Uint16Array(\n    // prettier-ignore\n    /* #__PURE__ */ \"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n        .split(\"\")\n        .map((c) => c.charCodeAt(0)),\n);\n", "// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\n\nconst decodeMap = new Map([\n    [0, 65_533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint: (...codePoints: number[]) => string =\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, n/no-unsupported-features/es-builtins\n    String.fromCodePoint ??\n    function (codePoint: number): string {\n        let output = \"\";\n\n        if (codePoint > 0xff_ff) {\n            codePoint -= 0x1_00_00;\n            output += String.fromCharCode(\n                ((codePoint >>> 10) & 0x3_ff) | 0xd8_00,\n            );\n            codePoint = 0xdc_00 | (codePoint & 0x3_ff);\n        }\n\n        output += String.fromCharCode(codePoint);\n        return output;\n    };\n\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint: number): number {\n    if (\n        (codePoint >= 0xd8_00 && codePoint <= 0xdf_ff) ||\n        codePoint > 0x10_ff_ff\n    ) {\n        return 0xff_fd;\n    }\n\n    return decodeMap.get(codePoint) ?? codePoint;\n}\n\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport function decodeCodePoint(codePoint: number): string {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n", "import { htmlDecodeTree } from \"./generated/decode-data-html.js\";\nimport { xmlDecodeTree } from \"./generated/decode-data-xml.js\";\nimport { replaceCodePoint, fromCodePoint } from \"./decode-codepoint.js\";\n\nconst enum CharCodes {\n    NUM = 35, // \"#\"\n    SEMI = 59, // \";\"\n    EQUALS = 61, // \"=\"\n    ZERO = 48, // \"0\"\n    NINE = 57, // \"9\"\n    LOWER_A = 97, // \"a\"\n    LOWER_F = 102, // \"f\"\n    LOWER_X = 120, // \"x\"\n    LOWER_Z = 122, // \"z\"\n    UPPER_A = 65, // \"A\"\n    UPPER_F = 70, // \"F\"\n    UPPER_Z = 90, // \"Z\"\n}\n\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b10_0000;\n\nexport enum BinTrieFlags {\n    VALUE_LENGTH = 0b1100_0000_0000_0000,\n    BRANCH_LENGTH = 0b0011_1111_1000_0000,\n    JUMP_TABLE = 0b0000_0000_0111_1111,\n}\n\nfunction isNumber(code: number): boolean {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\n\nfunction isHexadecimalCharacter(code: number): boolean {\n    return (\n        (code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F)\n    );\n}\n\nfunction isAsciiAlphaNumeric(code: number): boolean {\n    return (\n        (code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code)\n    );\n}\n\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code: number): boolean {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\n\nconst enum EntityDecoderState {\n    EntityStart,\n    NumericStart,\n    NumericDecimal,\n    NumericHex,\n    NamedEntity,\n}\n\nexport enum DecodingMode {\n    /** Entities in text nodes that can end with any character. */\n    Legacy = 0,\n    /** Only allow entities terminated with a semicolon. */\n    Strict = 1,\n    /** Entities in attributes have limitations on ending characters. */\n    Attribute = 2,\n}\n\n/**\n * Producers for character reference errors as defined in the HTML spec.\n */\nexport interface EntityErrorProducer {\n    missingSemicolonAfterCharacterReference(): void;\n    absenceOfDigitsInNumericCharacterReference(\n        consumedCharacters: number,\n    ): void;\n    validateNumericCharacterReference(code: number): void;\n}\n\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n        /** The tree used to decode entities. */\n        private readonly decodeTree: Uint16Array,\n        /**\n         * The function that is called when a codepoint is decoded.\n         *\n         * For multi-byte named entities, this will be called multiple times,\n         * with the second codepoint, and the same `consumed` value.\n         *\n         * @param codepoint The decoded codepoint.\n         * @param consumed The number of bytes consumed by the decoder.\n         */\n        private readonly emitCodePoint: (cp: number, consumed: number) => void,\n        /** An object that is used to produce errors. */\n        private readonly errors?: EntityErrorProducer | undefined,\n    ) {}\n\n    /** The current state of the decoder. */\n    private state = EntityDecoderState.EntityStart;\n    /** Characters that were consumed while parsing an entity. */\n    private consumed = 1;\n    /**\n     * The result of the entity.\n     *\n     * Either the result index of a numeric entity, or the codepoint of a\n     * numeric entity.\n     */\n    private result = 0;\n\n    /** The current index in the decode tree. */\n    private treeIndex = 0;\n    /** The number of characters that were consumed in excess. */\n    private excess = 1;\n    /** The mode in which the decoder is operating. */\n    private decodeMode = DecodingMode.Strict;\n\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode: DecodingMode): void {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(input: string, offset: number): number {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (input.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(input, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(input, offset);\n            }\n\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(input, offset);\n            }\n\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(input, offset);\n            }\n\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(input, offset);\n            }\n\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(input, offset);\n            }\n        }\n    }\n\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNumericStart(input: string, offset: number): number {\n        if (offset >= input.length) {\n            return -1;\n        }\n\n        if ((input.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(input, offset + 1);\n        }\n\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(input, offset);\n    }\n\n    private addToNumericResult(\n        input: string,\n        start: number,\n        end: number,\n        base: number,\n    ): void {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                Number.parseInt(input.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNumericHex(input: string, offset: number): number {\n        const startIndex = offset;\n\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            } else {\n                this.addToNumericResult(input, startIndex, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n\n        this.addToNumericResult(input, startIndex, offset, 16);\n\n        return -1;\n    }\n\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNumericDecimal(input: string, offset: number): number {\n        const startIndex = offset;\n\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            } else {\n                this.addToNumericResult(input, startIndex, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n\n        this.addToNumericResult(input, startIndex, offset, 10);\n\n        return -1;\n    }\n\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    private emitNumericEntity(lastCp: number, expectedLength: number): number {\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            this.errors?.absenceOfDigitsInNumericCharacterReference(\n                this.consumed,\n            );\n            return 0;\n        }\n\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        } else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n\n        return this.consumed;\n    }\n\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNamedEntity(input: string, offset: number): number {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n\n        for (; offset < input.length; offset++, this.excess++) {\n            const char = input.charCodeAt(offset);\n\n            this.treeIndex = determineBranch(\n                decodeTree,\n                current,\n                this.treeIndex + Math.max(1, valueLength),\n                char,\n            );\n\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(\n                        this.treeIndex,\n                        valueLength,\n                        this.consumed + this.excess,\n                    );\n                }\n\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    private emitNotTerminatedNamedEntity(): number {\n        const { result, decodeTree } = this;\n\n        const valueLength =\n            (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        this.errors?.missingSemicolonAfterCharacterReference();\n\n        return this.consumed;\n    }\n\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    private emitNamedEntityData(\n        result: number,\n        valueLength: number,\n        consumed: number,\n    ): number {\n        const { decodeTree } = this;\n\n        this.emitCodePoint(\n            valueLength === 1\n                ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n                : decodeTree[result + 1],\n            consumed,\n        );\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n\n        return consumed;\n    }\n\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end(): number {\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                this.errors?.absenceOfDigitsInNumericCharacterReference(\n                    this.consumed,\n                );\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree: Uint16Array) {\n    let returnValue = \"\";\n    const decoder = new EntityDecoder(\n        decodeTree,\n        (data) => (returnValue += fromCodePoint(data)),\n    );\n\n    return function decodeWithTrie(\n        input: string,\n        decodeMode: DecodingMode,\n    ): string {\n        let lastIndex = 0;\n        let offset = 0;\n\n        while ((offset = input.indexOf(\"&\", offset)) >= 0) {\n            returnValue += input.slice(lastIndex, offset);\n\n            decoder.startEntity(decodeMode);\n\n            const length = decoder.write(\n                input,\n                // Skip the \"&\"\n                offset + 1,\n            );\n\n            if (length < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n\n            lastIndex = offset + length;\n            // If `length` is 0, skip the current `&` and continue.\n            offset = length === 0 ? lastIndex + 1 : lastIndex;\n        }\n\n        const result = returnValue + input.slice(lastIndex);\n\n        // Make sure we don't keep a reference to the final string.\n        returnValue = \"\";\n\n        return result;\n    };\n}\n\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(\n    decodeTree: Uint16Array,\n    current: number,\n    nodeIndex: number,\n    char: number,\n): number {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIndex : -1;\n    }\n\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIndex + value] - 1;\n    }\n\n    // Case 3: Multiple branches encoded in dictionary\n\n    // Binary search for the character.\n    let lo = nodeIndex;\n    let hi = lo + branchCount - 1;\n\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midValue = decodeTree[mid];\n\n        if (midValue < char) {\n            lo = mid + 1;\n        } else if (midValue > char) {\n            hi = mid - 1;\n        } else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n\n    return -1;\n}\n\nconst htmlDecoder = /* #__PURE__ */ getDecoder(htmlDecodeTree);\nconst xmlDecoder = /* #__PURE__ */ getDecoder(xmlDecodeTree);\n\n/**\n * Decodes an HTML string.\n *\n * @param htmlString The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(\n    htmlString: string,\n    mode: DecodingMode = DecodingMode.Legacy,\n): string {\n    return htmlDecoder(htmlString, mode);\n}\n\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param htmlAttribute The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(htmlAttribute: string): string {\n    return htmlDecoder(htmlAttribute, DecodingMode.Attribute);\n}\n\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param htmlString The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(htmlString: string): string {\n    return htmlDecoder(htmlString, DecodingMode.Strict);\n}\n\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param xmlString The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(xmlString: string): string {\n    return xmlDecoder(xmlString, DecodingMode.Strict);\n}\n\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree } from \"./generated/decode-data-html.js\";\nexport { xmlDecodeTree } from \"./generated/decode-data-xml.js\";\n\nexport {\n    decodeCodePoint,\n    replaceCodePoint,\n    fromCodePoint,\n} from \"./decode-codepoint.js\";\n", "/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n", "import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/decode';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === $.NULL) {\n        return ERR.nullCharacterReference;\n    }\n    else if (code > 1114111) {\n        return ERR.characterReferenceOutsideUnicodeRange;\n    }\n    else if (isSurrogate(code)) {\n        return ERR.surrogateCharacterReference;\n    }\n    else if (isUndefinedCodePoint(code)) {\n        return ERR.noncharacterCharacterReference;\n    }\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n        return ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError\n            ? {\n                missingSemicolonAfterCharacterReference: () => {\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n                },\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n                },\n                validateNumericCharacterReference: (code) => {\n                    const error = getErrorForNumericCharacterReference(code);\n                    if (error)\n                        this._err(error, 1);\n                },\n            }\n            : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n            else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference();\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            }\n            else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state =\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\n                    ? State.AMBIGUOUS_AMPERSAND\n                    : this.returnState;\n        }\n        else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n", "import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    $.APPLET,\n    $.CAPTION,\n    $.HTML,\n    $.MARQUEE,\n    $.OBJECT,\n    $.TABLE,\n    $.TD,\n    $.TEMPLATE,\n    $.TH,\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        if (this.current && this.currentTagId !== undefined) {\n            this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n        }\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(Math.max(targetIdx, 0));\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (tn === tagName)\n                        return true;\n                    if (htmlScope.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (NUMBERED_HEADERS.has(tn))\n                        return true;\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.OPTION:\n                case $.OPTGROUP: {\n                    break;\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== undefined &&\n            this.currentTagId !== exclusionId &&\n            IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n", "//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex !== -1) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx === -1) {\n            this.entries.length = 0;\n        }\n        else {\n            this.entries.splice(0, markerIdx + 1);\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n", "import { DOCUMENT_MODE } from '../common/html.js';\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    createTextNode(value) {\n        return {\n            nodeName: '#text',\n            value,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n", "import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n", "import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n", "import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || (current && this.treeAdapter.getNamespaceURI(current) === NS.HTML);\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode =\n            !isHTML && current !== undefined && tid !== undefined && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent !== null && parent !== void 0 ? parent : this.document, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                currentTagId !== undefined &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex === -1 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return (this.fosterParentingEnabled &&\n            this.openElements.currentTagId !== undefined &&\n            this._isElementCausesFosterParenting(this.openElements.currentTagId));\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(Math.max(idx, 0));\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (p.openElements.currentTagId !== undefined && NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (p.openElements.currentTagId !== undefined && TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        p.openElements.currentTagId !== undefined &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n", "export const xmlReplacer: RegExp = /[\"$&'<>\\u0080-\\uFFFF]/g;\n\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint: (c: string, index: number) => number =\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    String.prototype.codePointAt == null\n        ? (c: string, index: number): number =>\n              (c.charCodeAt(index) & 0xfc_00) === 0xd8_00\n                  ? (c.charCodeAt(index) - 0xd8_00) * 0x4_00 +\n                    c.charCodeAt(index + 1) -\n                    0xdc_00 +\n                    0x1_00_00\n                  : c.charCodeAt(index)\n        : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n          (input: string, index: number): number => input.codePointAt(index)!;\n\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(input: string): string {\n    let returnValue = \"\";\n    let lastIndex = 0;\n    let match;\n\n    while ((match = xmlReplacer.exec(input)) !== null) {\n        const { index } = match;\n        const char = input.charCodeAt(index);\n        const next = xmlCodeMap.get(char);\n\n        if (next === undefined) {\n            returnValue += `${input.substring(lastIndex, index)}&#x${getCodePoint(\n                input,\n                index,\n            ).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIndex = xmlReplacer.lastIndex += Number(\n                (char & 0xfc_00) === 0xd8_00,\n            );\n        } else {\n            returnValue += input.substring(lastIndex, index) + next;\n            lastIndex = index + 1;\n        }\n    }\n\n    return returnValue + input.substr(lastIndex);\n}\n\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape: typeof encodeXML = encodeXML;\n\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(\n    regex: RegExp,\n    map: Map<number, string>,\n): (data: string) => string {\n    return function escape(data: string): string {\n        let match;\n        let lastIndex = 0;\n        let result = \"\";\n\n        while ((match = regex.exec(data))) {\n            if (lastIndex !== match.index) {\n                result += data.substring(lastIndex, match.index);\n            }\n\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0))!;\n\n            // Every match will be of length 1\n            lastIndex = match.index + 1;\n        }\n\n        return result + data.substring(lastIndex);\n    };\n}\n\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8: (data: string) => string = /* #__PURE__ */ getEscaper(\n    /[\"&'<>]/g,\n    xmlCodeMap,\n);\n\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute: (data: string) => string =\n    /* #__PURE__ */ getEscaper(\n        /[\"&\\u00A0]/g,\n        new Map([\n            [34, \"&quot;\"],\n            [38, \"&amp;\"],\n            [160, \"&nbsp;\"],\n        ]),\n    );\n\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText: (data: string) => string = /* #__PURE__ */ getEscaper(\n    /[&<>\\u00A0]/g,\n    new Map([\n        [38, \"&amp;\"],\n        [60, \"&lt;\"],\n        [62, \"&gt;\"],\n        [160, \"&nbsp;\"],\n    ]),\n);\n", "import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/escape';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (attr.namespace) {\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        }\n        else {\n            html += attr.name;\n        }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n", "import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\nexport * as html from './common/html.js';\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n", "import EventEmitter from \"events\";\r\n\r\nclass CSS extends EventEmitter {\r\n\tconstructor(ctx) {\r\n\t\tsuper();\r\n\t\tthis.ctx = ctx;\r\n\t\tthis.meta = ctx.meta;\r\n\t}\r\n\trewrite(str, options) {\r\n\t\treturn this.recast(str, options, \"rewrite\");\r\n\t}\r\n\tsource(str, options) {\r\n\t\treturn this.recast(str, options, \"source\");\r\n\t}\r\n\trecast(str, options, type) {\r\n\t\t// regex from vk6 (https://github.com/ading2210)\r\n\t\tconst urlRegex = /url\\(['\"]?(.+?)['\"]?\\)/gm;\r\n\t\tconst Atruleregex =\r\n\t\t\t/@import\\s+(url\\s*?\\(.{0,9999}?\\)|['\"].{0,9999}?['\"]|.{0,9999}?)($|\\s|;)/gm;\r\n\t\tstr = new String(str).toString();\r\n\t\tstr = str.replace(urlRegex, (match, url) => {\r\n\t\t\tconst encodedUrl =\r\n\t\t\t\ttype === \"rewrite\" ? this.ctx.rewriteUrl(url) : this.ctx.sourceUrl(url);\r\n\r\n\t\t\treturn match.replace(url, encodedUrl);\r\n\t\t});\r\n\t\tstr = str.replace(Atruleregex, (match, importStatement) => {\r\n\t\t\treturn match.replace(\r\n\t\t\t\timportStatement,\r\n\t\t\t\timportStatement.replace(\r\n\t\t\t\t\t/^(url\\(['\"]?|['\"]|)(.+?)(['\"]|['\"]?\\)|)$/gm,\r\n\t\t\t\t\t(match, firstQuote, url, endQuote) => {\r\n\t\t\t\t\t\tif (firstQuote.startsWith(\"url\")) {\r\n\t\t\t\t\t\t\treturn match;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst encodedUrl =\r\n\t\t\t\t\t\t\ttype === \"rewrite\"\r\n\t\t\t\t\t\t\t\t? this.ctx.rewriteUrl(url)\r\n\t\t\t\t\t\t\t\t: this.ctx.sourceUrl(url);\r\n\r\n\t\t\t\t\t\treturn `${firstQuote}${encodedUrl}${endQuote}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn str;\r\n\t}\r\n}\r\n\r\nexport default CSS;\r\n", "const unicodeLookup = ((compressed, lookup) => {\n    const result = new Uint32Array(69632);\n    let index = 0;\n    let subIndex = 0;\n    while (index < 2571) {\n        const inst = compressed[index++];\n        if (inst < 0) {\n            subIndex -= inst;\n        }\n        else {\n            let code = compressed[index++];\n            if (inst & 2)\n                code = lookup[code];\n            if (inst & 1) {\n                result.fill(code, subIndex, subIndex += compressed[index++]);\n            }\n            else {\n                result[subIndex++] = code;\n            }\n        }\n    }\n    return result;\n})([-1, 2, 26, 2, 27, 2, 5, -1, 0, 77595648, 3, 44, 2, 3, 0, 14, 2, 63, 2, 64, 3, 0, 3, 0, 3168796671, 0, 4294956992, 2, 1, 2, 0, 2, 41, 3, 0, 4, 0, 4294966523, 3, 0, 4, 2, 16, 2, 65, 2, 0, 0, 4294836735, 0, 3221225471, 0, 4294901942, 2, 66, 0, 134152192, 3, 0, 2, 0, 4294951935, 3, 0, 2, 0, 2683305983, 0, 2684354047, 2, 18, 2, 0, 0, 4294961151, 3, 0, 2, 2, 19, 2, 0, 0, 608174079, 2, 0, 2, 60, 2, 7, 2, 6, 0, 4286611199, 3, 0, 2, 2, 1, 3, 0, 3, 0, 4294901711, 2, 40, 0, 4089839103, 0, 2961209759, 0, 1342439375, 0, 4294543342, 0, 3547201023, 0, 1577204103, 0, 4194240, 0, 4294688750, 2, 2, 0, 80831, 0, 4261478351, 0, 4294549486, 2, 2, 0, 2967484831, 0, 196559, 0, 3594373100, 0, 3288319768, 0, 8469959, 0, 65472, 2, 3, 0, 4093640191, 0, 660618719, 0, 65487, 0, 4294828015, 0, 4092591615, 0, 1616920031, 0, 982991, 2, 3, 2, 0, 0, 2163244511, 0, 4227923919, 0, 4236247022, 2, 71, 0, 4284449919, 0, 851904, 2, 4, 2, 12, 0, 67076095, -1, 2, 72, 0, 1073741743, 0, 4093607775, -1, 0, 50331649, 0, 3265266687, 2, 33, 0, 4294844415, 0, 4278190047, 2, 20, 2, 137, -1, 3, 0, 2, 2, 23, 2, 0, 2, 10, 2, 0, 2, 15, 2, 22, 3, 0, 10, 2, 74, 2, 0, 2, 75, 2, 76, 2, 77, 2, 0, 2, 78, 2, 0, 2, 11, 0, 261632, 2, 25, 3, 0, 2, 2, 13, 2, 4, 3, 0, 18, 2, 79, 2, 5, 3, 0, 2, 2, 80, 0, 2151677951, 2, 29, 2, 9, 0, 909311, 3, 0, 2, 0, 814743551, 2, 49, 0, 67090432, 3, 0, 2, 2, 42, 2, 0, 2, 6, 2, 0, 2, 30, 2, 8, 0, 268374015, 2, 110, 2, 51, 2, 0, 2, 81, 0, 134153215, -1, 2, 7, 2, 0, 2, 8, 0, 2684354559, 0, 67044351, 0, 3221160064, 2, 17, -1, 3, 0, 2, 2, 53, 0, 1046528, 3, 0, 3, 2, 9, 2, 0, 2, 54, 0, 4294960127, 2, 10, 2, 6, 2, 11, 0, 4294377472, 2, 12, 3, 0, 16, 2, 13, 2, 0, 2, 82, 2, 10, 2, 0, 2, 83, 2, 84, 2, 85, 0, 12288, 2, 55, 0, 1048577, 2, 86, 2, 14, -1, 2, 14, 0, 131042, 2, 87, 2, 88, 2, 89, 2, 0, 2, 34, -83, 3, 0, 7, 0, 1046559, 2, 0, 2, 15, 2, 0, 0, 2147516671, 2, 21, 3, 90, 2, 2, 0, -16, 2, 91, 0, 524222462, 2, 4, 2, 0, 0, 4269801471, 2, 4, 3, 0, 2, 2, 28, 2, 16, 3, 0, 2, 2, 17, 2, 0, -1, 2, 18, -16, 3, 0, 206, -2, 3, 0, 692, 2, 73, -1, 2, 18, 2, 10, 3, 0, 8, 2, 93, 2, 133, 2, 0, 0, 3220242431, 3, 0, 3, 2, 19, 2, 94, 2, 95, 3, 0, 2, 2, 96, 2, 0, 2, 97, 2, 46, 2, 0, 0, 4351, 2, 0, 2, 9, 3, 0, 2, 0, 67043391, 0, 3909091327, 2, 0, 2, 24, 2, 9, 2, 20, 3, 0, 2, 0, 67076097, 2, 8, 2, 0, 2, 21, 0, 67059711, 0, 4236247039, 3, 0, 2, 0, 939524103, 0, 8191999, 2, 101, 2, 102, 2, 22, 2, 23, 3, 0, 3, 0, 67057663, 3, 0, 349, 2, 103, 2, 104, 2, 7, -264, 3, 0, 11, 2, 24, 3, 0, 2, 2, 32, -1, 0, 3774349439, 2, 105, 2, 106, 3, 0, 2, 2, 19, 2, 107, 3, 0, 10, 2, 10, 2, 18, 2, 0, 2, 47, 2, 0, 2, 31, 2, 108, 2, 25, 0, 1638399, 0, 57344, 2, 109, 3, 0, 3, 2, 20, 2, 26, 2, 27, 2, 5, 2, 28, 2, 0, 2, 8, 2, 111, -1, 2, 112, 2, 113, 2, 114, -1, 3, 0, 3, 2, 12, -2, 2, 0, 2, 29, -3, 0, 536870912, -4, 2, 20, 2, 0, 2, 36, 0, 1, 2, 0, 2, 67, 2, 6, 2, 12, 2, 10, 2, 0, 2, 115, -1, 3, 0, 4, 2, 10, 2, 23, 2, 116, 2, 7, 2, 0, 2, 117, 2, 0, 2, 118, 2, 119, 2, 120, 2, 0, 2, 9, 3, 0, 9, 2, 21, 2, 30, 2, 31, 2, 121, 2, 122, -2, 2, 123, 2, 124, 2, 30, 2, 21, 2, 8, -2, 2, 125, 2, 30, 2, 32, -2, 2, 0, 2, 39, -2, 0, 4277137519, 0, 2269118463, -1, 3, 20, 2, -1, 2, 33, 2, 38, 2, 0, 3, 30, 2, 2, 35, 2, 19, -3, 3, 0, 2, 2, 34, -1, 2, 0, 2, 35, 2, 0, 2, 35, 2, 0, 2, 48, 2, 0, 0, 4294950463, 2, 37, -7, 2, 0, 0, 203775, 2, 57, 0, 4026531840, 2, 20, 2, 43, 2, 36, 2, 18, 2, 37, 2, 18, 2, 126, 2, 21, 3, 0, 2, 2, 38, 0, 2151677888, 2, 0, 2, 12, 0, 4294901764, 2, 144, 2, 0, 2, 58, 2, 56, 0, 5242879, 3, 0, 2, 0, 402644511, -1, 2, 128, 2, 39, 0, 3, -1, 2, 129, 2, 130, 2, 0, 0, 67045375, 2, 40, 0, 4226678271, 0, 3766565279, 0, 2039759, 2, 132, 2, 41, 0, 1046437, 0, 6, 3, 0, 2, 0, 3288270847, 0, 3, 3, 0, 2, 0, 67043519, -5, 2, 0, 0, 4282384383, 0, 1056964609, -1, 3, 0, 2, 0, 67043345, -1, 2, 0, 2, 42, 2, 23, 2, 50, 2, 11, 2, 61, 2, 38, -5, 2, 0, 2, 12, -3, 3, 0, 2, 0, 2147484671, 2, 134, 0, 4190109695, 2, 52, -2, 2, 135, 0, 4244635647, 0, 27, 2, 0, 2, 8, 2, 43, 2, 0, 2, 68, 2, 18, 2, 0, 2, 42, -6, 2, 0, 2, 45, 2, 59, 2, 44, 2, 45, 2, 46, 2, 47, 0, 8388351, -2, 2, 136, 0, 3028287487, 2, 48, 2, 138, 0, 33259519, 2, 49, -9, 2, 21, 0, 4294836223, 0, 3355443199, 0, 134152199, -2, 2, 69, -2, 3, 0, 28, 2, 32, -3, 3, 0, 3, 2, 17, 3, 0, 6, 2, 50, -81, 2, 18, 3, 0, 2, 2, 36, 3, 0, 33, 2, 25, 2, 30, 3, 0, 124, 2, 12, 3, 0, 18, 2, 38, -213, 2, 0, 2, 32, -54, 3, 0, 17, 2, 42, 2, 8, 2, 23, 2, 0, 2, 8, 2, 23, 2, 51, 2, 0, 2, 21, 2, 52, 2, 139, 2, 25, -13, 2, 0, 2, 53, -6, 3, 0, 2, -4, 3, 0, 2, 0, 4294936575, 2, 0, 0, 4294934783, -2, 0, 196635, 3, 0, 191, 2, 54, 3, 0, 38, 2, 30, 2, 55, 2, 34, -278, 2, 140, 3, 0, 9, 2, 141, 2, 142, 2, 56, 3, 0, 11, 2, 7, -72, 3, 0, 3, 2, 143, 0, 1677656575, -130, 2, 26, -16, 2, 0, 2, 24, 2, 38, -16, 0, 4161266656, 0, 4071, 0, 15360, -4, 2, 57, -13, 3, 0, 2, 2, 58, 2, 0, 2, 145, 2, 146, 2, 62, 2, 0, 2, 147, 2, 148, 2, 149, 3, 0, 10, 2, 150, 2, 151, 2, 22, 3, 58, 2, 3, 152, 2, 3, 59, 2, 0, 4294954999, 2, 0, -16, 2, 0, 2, 92, 2, 0, 0, 2105343, 0, 4160749584, 0, 65534, -34, 2, 8, 2, 154, -6, 0, 4194303871, 0, 4294903771, 2, 0, 2, 60, 2, 100, -3, 2, 0, 0, 1073684479, 0, 17407, -9, 2, 18, 2, 17, 2, 0, 2, 32, -14, 2, 18, 2, 32, -6, 2, 18, 2, 12, -15, 2, 155, 3, 0, 6, 0, 8323103, -1, 3, 0, 2, 2, 61, -37, 2, 62, 2, 156, 2, 157, 2, 158, 2, 159, 2, 160, -105, 2, 26, -32, 3, 0, 1335, -1, 3, 0, 129, 2, 32, 3, 0, 6, 2, 10, 3, 0, 180, 2, 161, 3, 0, 233, 2, 162, 3, 0, 18, 2, 10, -77, 3, 0, 16, 2, 10, -47, 3, 0, 154, 2, 6, 3, 0, 130, 2, 25, -22250, 3, 0, 7, 2, 25, -6130, 3, 5, 2, -1, 0, 69207040, 3, 44, 2, 3, 0, 14, 2, 63, 2, 64, -3, 0, 3168731136, 0, 4294956864, 2, 1, 2, 0, 2, 41, 3, 0, 4, 0, 4294966275, 3, 0, 4, 2, 16, 2, 65, 2, 0, 2, 34, -1, 2, 18, 2, 66, -1, 2, 0, 0, 2047, 0, 4294885376, 3, 0, 2, 0, 3145727, 0, 2617294944, 0, 4294770688, 2, 25, 2, 67, 3, 0, 2, 0, 131135, 2, 98, 0, 70256639, 0, 71303167, 0, 272, 2, 42, 2, 6, 0, 32511, 2, 0, 2, 49, -1, 2, 99, 2, 68, 0, 4278255616, 0, 4294836227, 0, 4294549473, 0, 600178175, 0, 2952806400, 0, 268632067, 0, 4294543328, 0, 57540095, 0, 1577058304, 0, 1835008, 0, 4294688736, 2, 70, 2, 69, 0, 33554435, 2, 131, 2, 70, 0, 2952790016, 0, 131075, 0, 3594373096, 0, 67094296, 2, 69, -1, 0, 4294828000, 0, 603979263, 0, 654311424, 0, 3, 0, 4294828001, 0, 602930687, 0, 1610612736, 0, 393219, 0, 4294828016, 0, 671088639, 0, 2154840064, 0, 4227858435, 0, 4236247008, 2, 71, 2, 38, -1, 2, 4, 0, 917503, 2, 38, -1, 2, 72, 0, 537788335, 0, 4026531935, -1, 0, 1, -1, 2, 33, 2, 73, 0, 7936, -3, 2, 0, 0, 2147485695, 0, 1010761728, 0, 4292984930, 0, 16387, 2, 0, 2, 15, 2, 22, 3, 0, 10, 2, 74, 2, 0, 2, 75, 2, 76, 2, 77, 2, 0, 2, 78, 2, 0, 2, 12, -1, 2, 25, 3, 0, 2, 2, 13, 2, 4, 3, 0, 18, 2, 79, 2, 5, 3, 0, 2, 2, 80, 0, 2147745791, 3, 19, 2, 0, 122879, 2, 0, 2, 9, 0, 276824064, -2, 3, 0, 2, 2, 42, 2, 0, 0, 4294903295, 2, 0, 2, 30, 2, 8, -1, 2, 18, 2, 51, 2, 0, 2, 81, 2, 49, -1, 2, 21, 2, 0, 2, 29, -2, 0, 128, -2, 2, 28, 2, 9, 0, 8160, -1, 2, 127, 0, 4227907585, 2, 0, 2, 37, 2, 0, 2, 50, 0, 4227915776, 2, 10, 2, 6, 2, 11, -1, 0, 74440192, 3, 0, 6, -2, 3, 0, 8, 2, 13, 2, 0, 2, 82, 2, 10, 2, 0, 2, 83, 2, 84, 2, 85, -3, 2, 86, 2, 14, -3, 2, 87, 2, 88, 2, 89, 2, 0, 2, 34, -83, 3, 0, 7, 0, 817183, 2, 0, 2, 15, 2, 0, 0, 33023, 2, 21, 3, 90, 2, -17, 2, 91, 0, 524157950, 2, 4, 2, 0, 2, 92, 2, 4, 2, 0, 2, 22, 2, 28, 2, 16, 3, 0, 2, 2, 17, 2, 0, -1, 2, 18, -16, 3, 0, 206, -2, 3, 0, 692, 2, 73, -1, 2, 18, 2, 10, 3, 0, 8, 2, 93, 0, 3072, 2, 0, 0, 2147516415, 2, 10, 3, 0, 2, 2, 25, 2, 94, 2, 95, 3, 0, 2, 2, 96, 2, 0, 2, 97, 2, 46, 0, 4294965179, 0, 7, 2, 0, 2, 9, 2, 95, 2, 9, -1, 0, 1761345536, 2, 98, 0, 4294901823, 2, 38, 2, 20, 2, 99, 2, 35, 2, 100, 0, 2080440287, 2, 0, 2, 34, 2, 153, 0, 3296722943, 2, 0, 0, 1046675455, 0, 939524101, 0, 1837055, 2, 101, 2, 102, 2, 22, 2, 23, 3, 0, 3, 0, 7, 3, 0, 349, 2, 103, 2, 104, 2, 7, -264, 3, 0, 11, 2, 24, 3, 0, 2, 2, 32, -1, 0, 2700607615, 2, 105, 2, 106, 3, 0, 2, 2, 19, 2, 107, 3, 0, 10, 2, 10, 2, 18, 2, 0, 2, 47, 2, 0, 2, 31, 2, 108, -3, 2, 109, 3, 0, 3, 2, 20, -1, 3, 5, 2, 2, 110, 2, 0, 2, 8, 2, 111, -1, 2, 112, 2, 113, 2, 114, -1, 3, 0, 3, 2, 12, -2, 2, 0, 2, 29, -8, 2, 20, 2, 0, 2, 36, -1, 2, 0, 2, 67, 2, 6, 2, 30, 2, 10, 2, 0, 2, 115, -1, 3, 0, 4, 2, 10, 2, 18, 2, 116, 2, 7, 2, 0, 2, 117, 2, 0, 2, 118, 2, 119, 2, 120, 2, 0, 2, 9, 3, 0, 9, 2, 21, 2, 30, 2, 31, 2, 121, 2, 122, -2, 2, 123, 2, 124, 2, 30, 2, 21, 2, 8, -2, 2, 125, 2, 30, 2, 32, -2, 2, 0, 2, 39, -2, 0, 4277075969, 2, 30, -1, 3, 20, 2, -1, 2, 33, 2, 126, 2, 0, 3, 30, 2, 2, 35, 2, 19, -3, 3, 0, 2, 2, 34, -1, 2, 0, 2, 35, 2, 0, 2, 35, 2, 0, 2, 50, 2, 98, 0, 4294934591, 2, 37, -7, 2, 0, 0, 197631, 2, 57, -1, 2, 20, 2, 43, 2, 37, 2, 18, 0, 3, 2, 18, 2, 126, 2, 21, 2, 127, 2, 54, -1, 0, 2490368, 2, 127, 2, 25, 2, 18, 2, 34, 2, 127, 2, 38, 0, 4294901904, 0, 4718591, 2, 127, 2, 35, 0, 335544350, -1, 2, 128, 0, 2147487743, 0, 1, -1, 2, 129, 2, 130, 2, 8, -1, 2, 131, 2, 70, 0, 3758161920, 0, 3, 2, 132, 0, 12582911, 0, 655360, -1, 2, 0, 2, 29, 0, 2147485568, 0, 3, 2, 0, 2, 25, 0, 176, -5, 2, 0, 2, 17, 0, 251658240, -1, 2, 0, 2, 25, 0, 16, -1, 2, 0, 0, 16779263, -2, 2, 12, -1, 2, 38, -5, 2, 0, 2, 133, -3, 3, 0, 2, 2, 55, 2, 134, 0, 2147549183, 0, 2, -2, 2, 135, 2, 36, 0, 10, 0, 4294965249, 0, 67633151, 0, 4026597376, 2, 0, 0, 536871935, 2, 18, 2, 0, 2, 42, -6, 2, 0, 0, 1, 2, 59, 2, 17, 0, 1, 2, 46, 2, 25, -3, 2, 136, 2, 36, 2, 137, 2, 138, 0, 16778239, -10, 2, 35, 0, 4294836212, 2, 9, -3, 2, 69, -2, 3, 0, 28, 2, 32, -3, 3, 0, 3, 2, 17, 3, 0, 6, 2, 50, -81, 2, 18, 3, 0, 2, 2, 36, 3, 0, 33, 2, 25, 0, 126, 3, 0, 124, 2, 12, 3, 0, 18, 2, 38, -213, 2, 10, -55, 3, 0, 17, 2, 42, 2, 8, 2, 18, 2, 0, 2, 8, 2, 18, 2, 60, 2, 0, 2, 25, 2, 50, 2, 139, 2, 25, -13, 2, 0, 2, 73, -6, 3, 0, 2, -4, 3, 0, 2, 0, 67583, -1, 2, 107, -2, 0, 11, 3, 0, 191, 2, 54, 3, 0, 38, 2, 30, 2, 55, 2, 34, -278, 2, 140, 3, 0, 9, 2, 141, 2, 142, 2, 56, 3, 0, 11, 2, 7, -72, 3, 0, 3, 2, 143, 2, 144, -187, 3, 0, 2, 2, 58, 2, 0, 2, 145, 2, 146, 2, 62, 2, 0, 2, 147, 2, 148, 2, 149, 3, 0, 10, 2, 150, 2, 151, 2, 22, 3, 58, 2, 3, 152, 2, 3, 59, 2, 2, 153, -57, 2, 8, 2, 154, -7, 2, 18, 2, 0, 2, 60, -4, 2, 0, 0, 1065361407, 0, 16384, -9, 2, 18, 2, 60, 2, 0, 2, 133, -14, 2, 18, 2, 133, -6, 2, 18, 0, 81919, -15, 2, 155, 3, 0, 6, 2, 126, -1, 3, 0, 2, 0, 2063, -37, 2, 62, 2, 156, 2, 157, 2, 158, 2, 159, 2, 160, -138, 3, 0, 1335, -1, 3, 0, 129, 2, 32, 3, 0, 6, 2, 10, 3, 0, 180, 2, 161, 3, 0, 233, 2, 162, 3, 0, 18, 2, 10, -77, 3, 0, 16, 2, 10, -47, 3, 0, 154, 2, 6, 3, 0, 130, 2, 25, -28386], [4294967295, 4294967291, 4092460543, 4294828031, 4294967294, 134217726, 4294903807, 268435455, 2147483647, 1048575, 1073741823, 3892314111, 134217727, 1061158911, 536805376, 4294910143, 4294901759, 32767, 4294901760, 262143, 536870911, 8388607, 4160749567, 4294902783, 4294918143, 65535, 67043328, 2281701374, 4294967264, 2097151, 4194303, 255, 67108863, 4294967039, 511, 524287, 131071, 63, 127, 3238002687, 4294549487, 4290772991, 33554431, 4294901888, 4286578687, 67043329, 4294705152, 4294770687, 67043583, 1023, 15, 2047999, 67043343, 67051519, 16777215, 2147483648, 4294902000, 28, 4292870143, 4294966783, 16383, 67047423, 4294967279, 262083, 20511, 41943039, 493567, 4294959104, 603979775, 65536, 602799615, 805044223, 4294965206, 8191, 1031749119, 4294917631, 2134769663, 4286578493, 4282253311, 4294942719, 33540095, 4294905855, 2868854591, 1608515583, 265232348, 534519807, 2147614720, 1060109444, 4093640016, 17376, 2139062143, 224, 4169138175, 4294909951, 4286578688, 4294967292, 4294965759, 535511039, 4294966272, 4294967280, 32768, 8289918, 4294934399, 4294901775, 4294965375, 1602223615, 4294967259, 4294443008, 268369920, 4292804608, 4294967232, 486341884, 4294963199, 3087007615, 1073692671, 4128527, 4279238655, 4294902015, 4160684047, 4290246655, 469499899, 4294967231, 134086655, 4294966591, 2445279231, 3670015, 31, 4294967288, 4294705151, 3221208447, 4294902271, 4294549472, 4294921215, 4095, 4285526655, 4294966527, 4294966143, 64, 4294966719, 3774873592, 1877934080, 262151, 2555904, 536807423, 67043839, 3758096383, 3959414372, 3755993023, 2080374783, 4294835295, 4294967103, 4160749565, 4294934527, 4087, 2016, 2147446655, 184024726, 2862017156, 1593309078, 268434431, 268434414, 4294901763, 4294901761]);\nconst isIDContinue = (code) => (unicodeLookup[(code >>> 5) + 0] >>> code & 31 & 1) !== 0;\nconst isIDStart = (code) => (unicodeLookup[(code >>> 5) + 34816] >>> code & 31 & 1) !== 0;\n\nfunction advanceChar(parser) {\n    parser.column++;\n    return (parser.currentChar = parser.source.charCodeAt(++parser.index));\n}\nfunction consumePossibleSurrogatePair(parser) {\n    const hi = parser.currentChar;\n    if ((hi & 0xfc00) !== 55296)\n        return 0;\n    const lo = parser.source.charCodeAt(parser.index + 1);\n    if ((lo & 0xfc00) !== 56320)\n        return 0;\n    return 65536 + ((hi & 0x3ff) << 10) + (lo & 0x3ff);\n}\nfunction consumeLineFeed(parser, state) {\n    parser.currentChar = parser.source.charCodeAt(++parser.index);\n    parser.flags |= 1;\n    if ((state & 4) === 0) {\n        parser.column = 0;\n        parser.line++;\n    }\n}\nfunction scanNewLine(parser) {\n    parser.flags |= 1;\n    parser.currentChar = parser.source.charCodeAt(++parser.index);\n    parser.column = 0;\n    parser.line++;\n}\nfunction isExoticECMAScriptWhitespace(ch) {\n    return (ch === 160 ||\n        ch === 65279 ||\n        ch === 133 ||\n        ch === 5760 ||\n        (ch >= 8192 && ch <= 8203) ||\n        ch === 8239 ||\n        ch === 8287 ||\n        ch === 12288 ||\n        ch === 8201 ||\n        ch === 65519);\n}\nfunction toHex(code) {\n    return code < 65 ? code - 48 : (code - 65 + 10) & 0xf;\n}\nfunction convertTokenType(t) {\n    switch (t) {\n        case 134283266:\n            return 'NumericLiteral';\n        case 134283267:\n            return 'StringLiteral';\n        case 86021:\n        case 86022:\n            return 'BooleanLiteral';\n        case 86023:\n            return 'NullLiteral';\n        case 65540:\n            return 'RegularExpression';\n        case 67174408:\n        case 67174409:\n        case 131:\n            return 'TemplateLiteral';\n        default:\n            if ((t & 143360) === 143360)\n                return 'Identifier';\n            if ((t & 4096) === 4096)\n                return 'Keyword';\n            return 'Punctuator';\n    }\n}\n\nconst CharTypes = [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    8 | 1024,\n    0,\n    0,\n    8 | 2048,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    8192,\n    0,\n    1 | 2,\n    0,\n    0,\n    8192,\n    0,\n    0,\n    0,\n    256,\n    0,\n    256 | 32768,\n    0,\n    0,\n    2 | 16 | 128 | 32 | 64,\n    2 | 16 | 128 | 32 | 64,\n    2 | 16 | 32 | 64,\n    2 | 16 | 32 | 64,\n    2 | 16 | 32 | 64,\n    2 | 16 | 32 | 64,\n    2 | 16 | 32 | 64,\n    2 | 16 | 32 | 64,\n    2 | 16 | 512 | 64,\n    2 | 16 | 512 | 64,\n    0,\n    0,\n    16384,\n    0,\n    0,\n    0,\n    0,\n    1 | 2 | 64,\n    1 | 2 | 64,\n    1 | 2 | 64,\n    1 | 2 | 64,\n    1 | 2 | 64,\n    1 | 2 | 64,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    0,\n    1,\n    0,\n    0,\n    1 | 2 | 4096,\n    0,\n    1 | 2 | 4 | 64,\n    1 | 2 | 4 | 64,\n    1 | 2 | 4 | 64,\n    1 | 2 | 4 | 64,\n    1 | 2 | 4 | 64,\n    1 | 2 | 4 | 64,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    16384,\n    0,\n    0,\n    0,\n    0\n];\nconst isIdStart = [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0\n];\nconst isIdPart = [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0\n];\nfunction isIdentifierStart(code) {\n    return code <= 0x7F\n        ? isIdStart[code] > 0\n        : isIDStart(code);\n}\nfunction isIdentifierPart(code) {\n    return code <= 0x7F\n        ? isIdPart[code] > 0\n        : isIDContinue(code) || (code === 8204 || code === 8205);\n}\n\nconst CommentTypes = ['SingleLine', 'MultiLine', 'HTMLOpen', 'HTMLClose', 'HashbangComment'];\nfunction skipHashBang(parser) {\n    const { source } = parser;\n    if (parser.currentChar === 35 && source.charCodeAt(parser.index + 1) === 33) {\n        advanceChar(parser);\n        advanceChar(parser);\n        skipSingleLineComment(parser, source, 0, 4, parser.tokenStart);\n    }\n}\nfunction skipSingleHTMLComment(parser, source, state, context, type, start) {\n    if (context & 2)\n        parser.report(0);\n    return skipSingleLineComment(parser, source, state, type, start);\n}\nfunction skipSingleLineComment(parser, source, state, type, start) {\n    const { index } = parser;\n    parser.tokenIndex = parser.index;\n    parser.tokenLine = parser.line;\n    parser.tokenColumn = parser.column;\n    while (parser.index < parser.end) {\n        if (CharTypes[parser.currentChar] & 8) {\n            const isCR = parser.currentChar === 13;\n            scanNewLine(parser);\n            if (isCR && parser.index < parser.end && parser.currentChar === 10)\n                parser.currentChar = source.charCodeAt(++parser.index);\n            break;\n        }\n        else if ((parser.currentChar ^ 8232) <= 1) {\n            scanNewLine(parser);\n            break;\n        }\n        advanceChar(parser);\n        parser.tokenIndex = parser.index;\n        parser.tokenLine = parser.line;\n        parser.tokenColumn = parser.column;\n    }\n    if (parser.options.onComment) {\n        const loc = {\n            start: {\n                line: start.line,\n                column: start.column,\n            },\n            end: {\n                line: parser.tokenLine,\n                column: parser.tokenColumn,\n            },\n        };\n        parser.options.onComment(CommentTypes[type & 0xff], source.slice(index, parser.tokenIndex), start.index, parser.tokenIndex, loc);\n    }\n    return state | 1;\n}\nfunction skipMultiLineComment(parser, source, state) {\n    const { index } = parser;\n    while (parser.index < parser.end) {\n        if (parser.currentChar < 0x2b) {\n            let skippedOneAsterisk = false;\n            while (parser.currentChar === 42) {\n                if (!skippedOneAsterisk) {\n                    state &= -5;\n                    skippedOneAsterisk = true;\n                }\n                if (advanceChar(parser) === 47) {\n                    advanceChar(parser);\n                    if (parser.options.onComment) {\n                        const loc = {\n                            start: {\n                                line: parser.tokenLine,\n                                column: parser.tokenColumn,\n                            },\n                            end: {\n                                line: parser.line,\n                                column: parser.column,\n                            },\n                        };\n                        parser.options.onComment(CommentTypes[1 & 0xff], source.slice(index, parser.index - 2), index - 2, parser.index, loc);\n                    }\n                    parser.tokenIndex = parser.index;\n                    parser.tokenLine = parser.line;\n                    parser.tokenColumn = parser.column;\n                    return state;\n                }\n            }\n            if (skippedOneAsterisk) {\n                continue;\n            }\n            if (CharTypes[parser.currentChar] & 8) {\n                if (parser.currentChar === 13) {\n                    state |= 1 | 4;\n                    scanNewLine(parser);\n                }\n                else {\n                    consumeLineFeed(parser, state);\n                    state = (state & -5) | 1;\n                }\n            }\n            else {\n                advanceChar(parser);\n            }\n        }\n        else if ((parser.currentChar ^ 8232) <= 1) {\n            state = (state & -5) | 1;\n            scanNewLine(parser);\n        }\n        else {\n            state &= -5;\n            advanceChar(parser);\n        }\n    }\n    parser.report(18);\n}\n\nvar RegexState;\n(function (RegexState) {\n    RegexState[RegexState[\"Empty\"] = 0] = \"Empty\";\n    RegexState[RegexState[\"Escape\"] = 1] = \"Escape\";\n    RegexState[RegexState[\"Class\"] = 2] = \"Class\";\n})(RegexState || (RegexState = {}));\nvar RegexFlags;\n(function (RegexFlags) {\n    RegexFlags[RegexFlags[\"Empty\"] = 0] = \"Empty\";\n    RegexFlags[RegexFlags[\"IgnoreCase\"] = 1] = \"IgnoreCase\";\n    RegexFlags[RegexFlags[\"Global\"] = 2] = \"Global\";\n    RegexFlags[RegexFlags[\"Multiline\"] = 4] = \"Multiline\";\n    RegexFlags[RegexFlags[\"Unicode\"] = 16] = \"Unicode\";\n    RegexFlags[RegexFlags[\"Sticky\"] = 8] = \"Sticky\";\n    RegexFlags[RegexFlags[\"DotAll\"] = 32] = \"DotAll\";\n    RegexFlags[RegexFlags[\"Indices\"] = 64] = \"Indices\";\n    RegexFlags[RegexFlags[\"UnicodeSets\"] = 128] = \"UnicodeSets\";\n})(RegexFlags || (RegexFlags = {}));\nfunction scanRegularExpression(parser) {\n    const bodyStart = parser.index;\n    let preparseState = RegexState.Empty;\n    loop: while (true) {\n        const ch = parser.currentChar;\n        advanceChar(parser);\n        if (preparseState & RegexState.Escape) {\n            preparseState &= ~RegexState.Escape;\n        }\n        else {\n            switch (ch) {\n                case 47:\n                    if (!preparseState)\n                        break loop;\n                    else\n                        break;\n                case 92:\n                    preparseState |= RegexState.Escape;\n                    break;\n                case 91:\n                    preparseState |= RegexState.Class;\n                    break;\n                case 93:\n                    preparseState &= RegexState.Escape;\n                    break;\n            }\n        }\n        if (ch === 13 ||\n            ch === 10 ||\n            ch === 8232 ||\n            ch === 8233) {\n            parser.report(34);\n        }\n        if (parser.index >= parser.source.length) {\n            return parser.report(34);\n        }\n    }\n    const bodyEnd = parser.index - 1;\n    let mask = RegexFlags.Empty;\n    let char = parser.currentChar;\n    const { index: flagStart } = parser;\n    while (isIdentifierPart(char)) {\n        switch (char) {\n            case 103:\n                if (mask & RegexFlags.Global)\n                    parser.report(36, 'g');\n                mask |= RegexFlags.Global;\n                break;\n            case 105:\n                if (mask & RegexFlags.IgnoreCase)\n                    parser.report(36, 'i');\n                mask |= RegexFlags.IgnoreCase;\n                break;\n            case 109:\n                if (mask & RegexFlags.Multiline)\n                    parser.report(36, 'm');\n                mask |= RegexFlags.Multiline;\n                break;\n            case 117:\n                if (mask & RegexFlags.Unicode)\n                    parser.report(36, 'u');\n                if (mask & RegexFlags.UnicodeSets)\n                    parser.report(36, 'vu');\n                mask |= RegexFlags.Unicode;\n                break;\n            case 118:\n                if (mask & RegexFlags.Unicode)\n                    parser.report(36, 'uv');\n                if (mask & RegexFlags.UnicodeSets)\n                    parser.report(36, 'v');\n                mask |= RegexFlags.UnicodeSets;\n                break;\n            case 121:\n                if (mask & RegexFlags.Sticky)\n                    parser.report(36, 'y');\n                mask |= RegexFlags.Sticky;\n                break;\n            case 115:\n                if (mask & RegexFlags.DotAll)\n                    parser.report(36, 's');\n                mask |= RegexFlags.DotAll;\n                break;\n            case 100:\n                if (mask & RegexFlags.Indices)\n                    parser.report(36, 'd');\n                mask |= RegexFlags.Indices;\n                break;\n            default:\n                parser.report(35);\n        }\n        char = advanceChar(parser);\n    }\n    const flags = parser.source.slice(flagStart, parser.index);\n    const pattern = parser.source.slice(bodyStart, bodyEnd);\n    parser.tokenRegExp = { pattern, flags };\n    if (parser.options.raw)\n        parser.tokenRaw = parser.source.slice(parser.tokenIndex, parser.index);\n    parser.tokenValue = validate(parser, pattern, flags);\n    return 65540;\n}\nfunction validate(parser, pattern, flags) {\n    try {\n        return new RegExp(pattern, flags);\n    }\n    catch {\n        try {\n            new RegExp(pattern, flags);\n            return null;\n        }\n        catch {\n            parser.report(34);\n        }\n    }\n}\n\nfunction scanString(parser, context, quote) {\n    const { index: start } = parser;\n    let ret = '';\n    let char = advanceChar(parser);\n    let marker = parser.index;\n    while ((CharTypes[char] & 8) === 0) {\n        if (char === quote) {\n            ret += parser.source.slice(marker, parser.index);\n            advanceChar(parser);\n            if (parser.options.raw)\n                parser.tokenRaw = parser.source.slice(start, parser.index);\n            parser.tokenValue = ret;\n            return 134283267;\n        }\n        if ((char & 8) === 8 && char === 92) {\n            ret += parser.source.slice(marker, parser.index);\n            char = advanceChar(parser);\n            if (char < 0x7f || char === 8232 || char === 8233) {\n                const code = parseEscape(parser, context, char);\n                if (code >= 0)\n                    ret += String.fromCodePoint(code);\n                else\n                    handleStringError(parser, code, 0);\n            }\n            else {\n                ret += String.fromCodePoint(char);\n            }\n            marker = parser.index + 1;\n        }\n        else if (char === 8232 || char === 8233) {\n            parser.column = -1;\n            parser.line++;\n        }\n        if (parser.index >= parser.end)\n            parser.report(16);\n        char = advanceChar(parser);\n    }\n    parser.report(16);\n}\nfunction parseEscape(parser, context, first, isTemplate = 0) {\n    switch (first) {\n        case 98:\n            return 8;\n        case 102:\n            return 12;\n        case 114:\n            return 13;\n        case 110:\n            return 10;\n        case 116:\n            return 9;\n        case 118:\n            return 11;\n        case 13: {\n            if (parser.index < parser.end) {\n                const nextChar = parser.source.charCodeAt(parser.index + 1);\n                if (nextChar === 10) {\n                    parser.index = parser.index + 1;\n                    parser.currentChar = nextChar;\n                }\n            }\n        }\n        case 10:\n        case 8232:\n        case 8233:\n            parser.column = -1;\n            parser.line++;\n            return -1;\n        case 48:\n        case 49:\n        case 50:\n        case 51: {\n            let code = first - 48;\n            let index = parser.index + 1;\n            let column = parser.column + 1;\n            if (index < parser.end) {\n                const next = parser.source.charCodeAt(index);\n                if ((CharTypes[next] & 32) === 0) {\n                    if (code !== 0 || CharTypes[next] & 512) {\n                        if (context & 1 || isTemplate)\n                            return -2;\n                        parser.flags |= 64;\n                    }\n                }\n                else if (context & 1 || isTemplate) {\n                    return -2;\n                }\n                else {\n                    parser.currentChar = next;\n                    code = (code << 3) | (next - 48);\n                    index++;\n                    column++;\n                    if (index < parser.end) {\n                        const next = parser.source.charCodeAt(index);\n                        if (CharTypes[next] & 32) {\n                            parser.currentChar = next;\n                            code = (code << 3) | (next - 48);\n                            index++;\n                            column++;\n                        }\n                    }\n                    parser.flags |= 64;\n                }\n                parser.index = index - 1;\n                parser.column = column - 1;\n            }\n            return code;\n        }\n        case 52:\n        case 53:\n        case 54:\n        case 55: {\n            if (isTemplate || context & 1)\n                return -2;\n            let code = first - 48;\n            const index = parser.index + 1;\n            const column = parser.column + 1;\n            if (index < parser.end) {\n                const next = parser.source.charCodeAt(index);\n                if (CharTypes[next] & 32) {\n                    code = (code << 3) | (next - 48);\n                    parser.currentChar = next;\n                    parser.index = index;\n                    parser.column = column;\n                }\n            }\n            parser.flags |= 64;\n            return code;\n        }\n        case 120: {\n            const ch1 = advanceChar(parser);\n            if ((CharTypes[ch1] & 64) === 0)\n                return -4;\n            const hi = toHex(ch1);\n            const ch2 = advanceChar(parser);\n            if ((CharTypes[ch2] & 64) === 0)\n                return -4;\n            const lo = toHex(ch2);\n            return (hi << 4) | lo;\n        }\n        case 117: {\n            const ch = advanceChar(parser);\n            if (parser.currentChar === 123) {\n                let code = 0;\n                while ((CharTypes[advanceChar(parser)] & 64) !== 0) {\n                    code = (code << 4) | toHex(parser.currentChar);\n                    if (code > 1114111)\n                        return -5;\n                }\n                if (parser.currentChar < 1 || parser.currentChar !== 125) {\n                    return -4;\n                }\n                return code;\n            }\n            else {\n                if ((CharTypes[ch] & 64) === 0)\n                    return -4;\n                const ch2 = parser.source.charCodeAt(parser.index + 1);\n                if ((CharTypes[ch2] & 64) === 0)\n                    return -4;\n                const ch3 = parser.source.charCodeAt(parser.index + 2);\n                if ((CharTypes[ch3] & 64) === 0)\n                    return -4;\n                const ch4 = parser.source.charCodeAt(parser.index + 3);\n                if ((CharTypes[ch4] & 64) === 0)\n                    return -4;\n                parser.index += 3;\n                parser.column += 3;\n                parser.currentChar = parser.source.charCodeAt(parser.index);\n                return (toHex(ch) << 12) | (toHex(ch2) << 8) | (toHex(ch3) << 4) | toHex(ch4);\n            }\n        }\n        case 56:\n        case 57:\n            if (isTemplate || !parser.options.webcompat || context & 1)\n                return -3;\n            parser.flags |= 4096;\n        default:\n            return first;\n    }\n}\nfunction handleStringError(parser, code, isTemplate) {\n    switch (code) {\n        case -1:\n            return;\n        case -2:\n            parser.report(isTemplate ? 2 : 1);\n        case -3:\n            parser.report(isTemplate ? 3 : 14);\n        case -4:\n            parser.report(7);\n        case -5:\n            parser.report(104);\n    }\n}\n\nfunction scanTemplate(parser, context) {\n    const { index: start } = parser;\n    let token = 67174409;\n    let ret = '';\n    let char = advanceChar(parser);\n    while (char !== 96) {\n        if (char === 36 && parser.source.charCodeAt(parser.index + 1) === 123) {\n            advanceChar(parser);\n            token = 67174408;\n            break;\n        }\n        else if (char === 92) {\n            char = advanceChar(parser);\n            if (char > 0x7e) {\n                ret += String.fromCodePoint(char);\n            }\n            else {\n                const { index, line, column } = parser;\n                const code = parseEscape(parser, context | 1, char, 1);\n                if (code >= 0) {\n                    ret += String.fromCodePoint(code);\n                }\n                else if (code !== -1 && context & 64) {\n                    parser.index = index;\n                    parser.line = line;\n                    parser.column = column;\n                    ret = null;\n                    char = scanBadTemplate(parser, char);\n                    if (char < 0)\n                        token = 67174408;\n                    break;\n                }\n                else {\n                    handleStringError(parser, code, 1);\n                }\n            }\n        }\n        else if (parser.index < parser.end) {\n            if (char === 13 && parser.source.charCodeAt(parser.index) === 10) {\n                ret += String.fromCodePoint(char);\n                parser.currentChar = parser.source.charCodeAt(++parser.index);\n            }\n            if (((char & 83) < 3 && char === 10) || (char ^ 8232) <= 1) {\n                parser.column = -1;\n                parser.line++;\n            }\n            ret += String.fromCodePoint(char);\n        }\n        if (parser.index >= parser.end)\n            parser.report(17);\n        char = advanceChar(parser);\n    }\n    advanceChar(parser);\n    parser.tokenValue = ret;\n    parser.tokenRaw = parser.source.slice(start + 1, parser.index - (token === 67174409 ? 1 : 2));\n    return token;\n}\nfunction scanBadTemplate(parser, ch) {\n    while (ch !== 96) {\n        switch (ch) {\n            case 36: {\n                const index = parser.index + 1;\n                if (index < parser.end && parser.source.charCodeAt(index) === 123) {\n                    parser.index = index;\n                    parser.column++;\n                    return -ch;\n                }\n                break;\n            }\n            case 10:\n            case 8232:\n            case 8233:\n                parser.column = -1;\n                parser.line++;\n        }\n        if (parser.index >= parser.end)\n            parser.report(17);\n        ch = advanceChar(parser);\n    }\n    return ch;\n}\nfunction scanTemplateTail(parser, context) {\n    if (parser.index >= parser.end)\n        parser.report(0);\n    parser.index--;\n    parser.column--;\n    return scanTemplate(parser, context);\n}\n\nconst errorMessages = {\n    [0]: 'Unexpected token',\n    [30]: \"Unexpected token: '%0'\",\n    [1]: 'Octal escape sequences are not allowed in strict mode',\n    [2]: 'Octal escape sequences are not allowed in template strings',\n    [3]: '\\\\8 and \\\\9 are not allowed in template strings',\n    [4]: 'Private identifier #%0 is not defined',\n    [5]: 'Illegal Unicode escape sequence',\n    [6]: 'Invalid code point %0',\n    [7]: 'Invalid hexadecimal escape sequence',\n    [9]: 'Octal literals are not allowed in strict mode',\n    [8]: 'Decimal integer literals with a leading zero are forbidden in strict mode',\n    [10]: 'Expected number in radix %0',\n    [151]: 'Invalid left-hand side assignment to a destructible right-hand side',\n    [11]: 'Non-number found after exponent indicator',\n    [12]: 'Invalid BigIntLiteral',\n    [13]: 'No identifiers allowed directly after numeric literal',\n    [14]: 'Escapes \\\\8 or \\\\9 are not syntactically valid escapes',\n    [15]: 'Escapes \\\\8 or \\\\9 are not allowed in strict mode',\n    [16]: 'Unterminated string literal',\n    [17]: 'Unterminated template literal',\n    [18]: 'Multiline comment was not closed properly',\n    [19]: 'The identifier contained dynamic unicode escape that was not closed',\n    [20]: \"Illegal character '%0'\",\n    [21]: 'Missing hexadecimal digits',\n    [22]: 'Invalid implicit octal',\n    [23]: 'Invalid line break in string literal',\n    [24]: 'Only unicode escapes are legal in identifier names',\n    [25]: \"Expected '%0'\",\n    [26]: 'Invalid left-hand side in assignment',\n    [27]: 'Invalid left-hand side in async arrow',\n    [28]: 'Calls to super must be in the \"constructor\" method of a class expression or class declaration that has a superclass',\n    [29]: 'Member access on super must be in a method',\n    [31]: 'Await expression not allowed in formal parameter',\n    [32]: 'Yield expression not allowed in formal parameter',\n    [95]: \"Unexpected token: 'escaped keyword'\",\n    [33]: 'Unary expressions as the left operand of an exponentiation expression must be disambiguated with parentheses',\n    [123]: 'Async functions can only be declared at the top level or inside a block',\n    [34]: 'Unterminated regular expression',\n    [35]: 'Unexpected regular expression flag',\n    [36]: \"Duplicate regular expression flag '%0'\",\n    [37]: '%0 functions must have exactly %1 argument%2',\n    [38]: 'Setter function argument must not be a rest parameter',\n    [39]: '%0 declaration must have a name in this context',\n    [40]: 'Function name may not contain any reserved words or be eval or arguments in strict mode',\n    [41]: 'The rest operator is missing an argument',\n    [42]: 'A getter cannot be a generator',\n    [43]: 'A setter cannot be a generator',\n    [44]: 'A computed property name must be followed by a colon or paren',\n    [134]: 'Object literal keys that are strings or numbers must be a method or have a colon',\n    [46]: 'Found `* async x(){}` but this should be `async * x(){}`',\n    [45]: 'Getters and setters can not be generators',\n    [47]: \"'%0' can not be generator method\",\n    [48]: \"No line break is allowed after '=>'\",\n    [49]: 'The left-hand side of the arrow can only be destructed through assignment',\n    [50]: 'The binding declaration is not destructible',\n    [51]: 'Async arrow can not be followed by new expression',\n    [52]: \"Classes may not have a static property named 'prototype'\",\n    [53]: 'Class constructor may not be a %0',\n    [54]: 'Duplicate constructor method in class',\n    [55]: 'Invalid increment/decrement operand',\n    [56]: 'Invalid use of `new` keyword on an increment/decrement expression',\n    [57]: '`=>` is an invalid assignment target',\n    [58]: 'Rest element may not have a trailing comma',\n    [59]: 'Missing initializer in %0 declaration',\n    [60]: \"'for-%0' loop head declarations can not have an initializer\",\n    [61]: 'Invalid left-hand side in for-%0 loop: Must have a single binding',\n    [62]: 'Invalid shorthand property initializer',\n    [63]: 'Property name __proto__ appears more than once in object literal',\n    [64]: 'Let is disallowed as a lexically bound name',\n    [65]: \"Invalid use of '%0' inside new expression\",\n    [66]: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n    [67]: 'Identifier \"let\" disallowed as left-hand side expression in strict mode',\n    [68]: 'Illegal continue statement',\n    [69]: 'Illegal break statement',\n    [70]: 'Cannot have `let[...]` as a var name in strict mode',\n    [71]: 'Invalid destructuring assignment target',\n    [72]: 'Rest parameter may not have a default initializer',\n    [73]: 'The rest argument must the be last parameter',\n    [74]: 'Invalid rest argument',\n    [76]: 'In strict mode code, functions can only be declared at top level or inside a block',\n    [77]: 'In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement',\n    [78]: 'Without web compatibility enabled functions can not be declared at top level, inside a block, or as the body of an if statement',\n    [79]: \"Class declaration can't appear in single-statement context\",\n    [80]: 'Invalid left-hand side in for-%0',\n    [81]: 'Invalid assignment in for-%0',\n    [82]: 'for await (... of ...) is only valid in async functions and async generators',\n    [83]: 'The first token after the template expression should be a continuation of the template',\n    [85]: '`let` declaration not allowed here and `let` cannot be a regular var name in strict mode',\n    [84]: '`let \\n [` is a restricted production at the start of a statement',\n    [86]: 'Catch clause requires exactly one parameter, not more (and no trailing comma)',\n    [87]: 'Catch clause parameter does not support default values',\n    [88]: 'Missing catch or finally after try',\n    [89]: 'More than one default clause in switch statement',\n    [90]: 'Illegal newline after throw',\n    [91]: 'Strict mode code may not include a with statement',\n    [92]: 'Illegal return statement',\n    [93]: 'The left hand side of the for-header binding declaration is not destructible',\n    [94]: 'new.target only allowed within functions or static blocks',\n    [96]: \"'#' not followed by identifier\",\n    [102]: 'Invalid keyword',\n    [101]: \"Can not use 'let' as a class name\",\n    [100]: \"'A lexical declaration can't define a 'let' binding\",\n    [99]: 'Can not use `let` as variable name in strict mode',\n    [97]: \"'%0' may not be used as an identifier in this context\",\n    [98]: 'Await is only valid in async functions',\n    [103]: 'The %0 keyword can only be used with the module goal',\n    [104]: 'Unicode codepoint must not be greater than 0x10FFFF',\n    [105]: '%0 source must be string',\n    [106]: 'Only a identifier or string can be used to indicate alias',\n    [107]: \"Only '*' or '{...}' can be imported after default\",\n    [108]: 'Trailing decorator may be followed by method',\n    [109]: \"Decorators can't be used with a constructor\",\n    [110]: 'Can not use `await` as identifier in module or async func',\n    [111]: 'Can not use `await` as identifier in module',\n    [112]: 'HTML comments are only allowed with web compatibility (Annex B)',\n    [113]: \"The identifier 'let' must not be in expression position in strict mode\",\n    [114]: 'Cannot assign to `eval` and `arguments` in strict mode',\n    [115]: \"The left-hand side of a for-of loop may not start with 'let'\",\n    [116]: 'Block body arrows can not be immediately invoked without a group',\n    [117]: 'Block body arrows can not be immediately accessed without a group',\n    [118]: 'Unexpected strict mode reserved word',\n    [119]: 'Unexpected eval or arguments in strict mode',\n    [120]: 'Decorators must not be followed by a semicolon',\n    [121]: 'Calling delete on expression not allowed in strict mode',\n    [122]: 'Pattern can not have a tail',\n    [124]: 'Can not have a `yield` expression on the left side of a ternary',\n    [125]: 'An arrow function can not have a postfix update operator',\n    [126]: 'Invalid object literal key character after generator star',\n    [127]: 'Private fields can not be deleted',\n    [129]: 'Classes may not have a field called constructor',\n    [128]: 'Classes may not have a private element named constructor',\n    [130]: 'A class field initializer or static block may not contain arguments',\n    [131]: 'Generators can only be declared at the top level or inside a block',\n    [132]: 'Async methods are a restricted production and cannot have a newline following it',\n    [133]: 'Unexpected character after object literal property name',\n    [135]: 'Invalid key token',\n    [136]: \"Label '%0' has already been declared\",\n    [137]: 'continue statement must be nested within an iteration statement',\n    [138]: \"Undefined label '%0'\",\n    [139]: 'Trailing comma is disallowed inside import(...) arguments',\n    [140]: 'Invalid binding in JSON import',\n    [141]: 'import() requires exactly one argument',\n    [142]: 'Cannot use new with import(...)',\n    [143]: '... is not allowed in import()',\n    [144]: \"Expected '=>'\",\n    [145]: \"Duplicate binding '%0'\",\n    [146]: 'Duplicate private identifier #%0',\n    [147]: \"Cannot export a duplicate name '%0'\",\n    [150]: 'Duplicate %0 for-binding',\n    [148]: \"Exported binding '%0' needs to refer to a top-level declared variable\",\n    [149]: 'Unexpected private field',\n    [153]: 'Numeric separators are not allowed at the end of numeric literals',\n    [152]: 'Only one underscore is allowed as numeric separator',\n    [154]: 'JSX value should be either an expression or a quoted JSX text',\n    [155]: 'Expected corresponding JSX closing tag for %0',\n    [156]: 'Adjacent JSX elements must be wrapped in an enclosing tag',\n    [157]: \"JSX attributes must only be assigned a non-empty 'expression'\",\n    [158]: \"'%0' has already been declared\",\n    [159]: \"'%0' shadowed a catch clause binding\",\n    [160]: 'Dot property must be an identifier',\n    [161]: 'Encountered invalid input after spread/rest argument',\n    [162]: 'Catch without try',\n    [163]: 'Finally without try',\n    [164]: 'Expected corresponding closing tag for JSX fragment',\n    [165]: 'Coalescing and logical operators used together in the same expression must be disambiguated with parentheses',\n    [166]: 'Invalid tagged template on optional chain',\n    [167]: 'Invalid optional chain from super property',\n    [168]: 'Invalid optional chain from new expression',\n    [169]: 'Cannot use \"import.meta\" outside a module',\n    [170]: 'Leading decorators must be attached to a class declaration',\n    [171]: 'An export name cannot include a lone surrogate, found %0',\n    [172]: 'A string literal cannot be used as an exported binding without `from`',\n    [173]: \"Private fields can't be accessed on super\",\n    [174]: \"The only valid meta property for import is 'import.meta'\",\n    [175]: \"'import.meta' must not contain escaped characters\",\n    [176]: 'cannot use \"await\" as identifier inside an async function',\n    [177]: 'cannot use \"await\" in static blocks',\n};\nclass ParseError extends SyntaxError {\n    start;\n    end;\n    range;\n    loc;\n    description;\n    constructor(start, end, type, ...params) {\n        const description = errorMessages[type].replace(/%(\\d+)/g, (_, i) => params[i]);\n        const message = '[' + start.line + ':' + start.column + '-' + end.line + ':' + end.column + ']: ' + description;\n        super(message);\n        this.start = start.index;\n        this.end = end.index;\n        this.range = [start.index, end.index];\n        this.loc = {\n            start: { line: start.line, column: start.column },\n            end: { line: end.line, column: end.column },\n        };\n        this.description = description;\n    }\n}\n\nfunction scanNumber(parser, context, kind) {\n    let char = parser.currentChar;\n    let value = 0;\n    let digit = 9;\n    let atStart = kind & 64 ? 0 : 1;\n    let digits = 0;\n    let allowSeparator = 0;\n    if (kind & 64) {\n        value = '.' + scanDecimalDigitsOrSeparator(parser, char);\n        char = parser.currentChar;\n        if (char === 110)\n            parser.report(12);\n    }\n    else {\n        if (char === 48) {\n            char = advanceChar(parser);\n            if ((char | 32) === 120) {\n                kind = 8 | 128;\n                char = advanceChar(parser);\n                while (CharTypes[char] & (64 | 4096)) {\n                    if (char === 95) {\n                        if (!allowSeparator)\n                            parser.report(152);\n                        allowSeparator = 0;\n                        char = advanceChar(parser);\n                        continue;\n                    }\n                    allowSeparator = 1;\n                    value = value * 0x10 + toHex(char);\n                    digits++;\n                    char = advanceChar(parser);\n                }\n                if (digits === 0 || !allowSeparator) {\n                    parser.report(digits === 0 ? 21 : 153);\n                }\n            }\n            else if ((char | 32) === 111) {\n                kind = 4 | 128;\n                char = advanceChar(parser);\n                while (CharTypes[char] & (32 | 4096)) {\n                    if (char === 95) {\n                        if (!allowSeparator) {\n                            parser.report(152);\n                        }\n                        allowSeparator = 0;\n                        char = advanceChar(parser);\n                        continue;\n                    }\n                    allowSeparator = 1;\n                    value = value * 8 + (char - 48);\n                    digits++;\n                    char = advanceChar(parser);\n                }\n                if (digits === 0 || !allowSeparator) {\n                    parser.report(digits === 0 ? 0 : 153);\n                }\n            }\n            else if ((char | 32) === 98) {\n                kind = 2 | 128;\n                char = advanceChar(parser);\n                while (CharTypes[char] & (128 | 4096)) {\n                    if (char === 95) {\n                        if (!allowSeparator) {\n                            parser.report(152);\n                        }\n                        allowSeparator = 0;\n                        char = advanceChar(parser);\n                        continue;\n                    }\n                    allowSeparator = 1;\n                    value = value * 2 + (char - 48);\n                    digits++;\n                    char = advanceChar(parser);\n                }\n                if (digits === 0 || !allowSeparator) {\n                    parser.report(digits === 0 ? 0 : 153);\n                }\n            }\n            else if (CharTypes[char] & 32) {\n                if (context & 1)\n                    parser.report(1);\n                kind = 1;\n                while (CharTypes[char] & 16) {\n                    if (CharTypes[char] & 512) {\n                        kind = 32;\n                        atStart = 0;\n                        break;\n                    }\n                    value = value * 8 + (char - 48);\n                    char = advanceChar(parser);\n                }\n            }\n            else if (CharTypes[char] & 512) {\n                if (context & 1)\n                    parser.report(1);\n                parser.flags |= 64;\n                kind = 32;\n            }\n            else if (char === 95) {\n                parser.report(0);\n            }\n        }\n        if (kind & 48) {\n            if (atStart) {\n                while (digit >= 0 && CharTypes[char] & (16 | 4096)) {\n                    if (char === 95) {\n                        char = advanceChar(parser);\n                        if (char === 95 || kind & 32) {\n                            throw new ParseError(parser.currentLocation, { index: parser.index + 1, line: parser.line, column: parser.column }, 152);\n                        }\n                        allowSeparator = 1;\n                        continue;\n                    }\n                    allowSeparator = 0;\n                    value = 10 * value + (char - 48);\n                    char = advanceChar(parser);\n                    --digit;\n                }\n                if (allowSeparator) {\n                    throw new ParseError(parser.currentLocation, { index: parser.index + 1, line: parser.line, column: parser.column }, 153);\n                }\n                if (digit >= 0 && !isIdentifierStart(char) && char !== 46) {\n                    parser.tokenValue = value;\n                    if (parser.options.raw)\n                        parser.tokenRaw = parser.source.slice(parser.tokenIndex, parser.index);\n                    return 134283266;\n                }\n            }\n            value += scanDecimalDigitsOrSeparator(parser, char);\n            char = parser.currentChar;\n            if (char === 46) {\n                if (advanceChar(parser) === 95)\n                    parser.report(0);\n                kind = 64;\n                value += '.' + scanDecimalDigitsOrSeparator(parser, parser.currentChar);\n                char = parser.currentChar;\n            }\n        }\n    }\n    const end = parser.index;\n    let isBigInt = 0;\n    if (char === 110 && kind & 128) {\n        isBigInt = 1;\n        char = advanceChar(parser);\n    }\n    else {\n        if ((char | 32) === 101) {\n            char = advanceChar(parser);\n            if (CharTypes[char] & 256)\n                char = advanceChar(parser);\n            const { index } = parser;\n            if ((CharTypes[char] & 16) === 0)\n                parser.report(11);\n            value += parser.source.substring(end, index) + scanDecimalDigitsOrSeparator(parser, char);\n            char = parser.currentChar;\n        }\n    }\n    if ((parser.index < parser.end && CharTypes[char] & 16) || isIdentifierStart(char)) {\n        parser.report(13);\n    }\n    if (isBigInt) {\n        parser.tokenRaw = parser.source.slice(parser.tokenIndex, parser.index);\n        parser.tokenValue = BigInt(parser.tokenRaw.slice(0, -1).replaceAll('_', ''));\n        return 134283388;\n    }\n    parser.tokenValue =\n        kind & (1 | 2 | 8 | 4)\n            ? value\n            : kind & 32\n                ? parseFloat(parser.source.substring(parser.tokenIndex, parser.index))\n                : +value;\n    if (parser.options.raw)\n        parser.tokenRaw = parser.source.slice(parser.tokenIndex, parser.index);\n    return 134283266;\n}\nfunction scanDecimalDigitsOrSeparator(parser, char) {\n    let allowSeparator = 0;\n    let start = parser.index;\n    let ret = '';\n    while (CharTypes[char] & (16 | 4096)) {\n        if (char === 95) {\n            const { index } = parser;\n            char = advanceChar(parser);\n            if (char === 95) {\n                throw new ParseError(parser.currentLocation, { index: parser.index + 1, line: parser.line, column: parser.column }, 152);\n            }\n            allowSeparator = 1;\n            ret += parser.source.substring(start, index);\n            start = parser.index;\n            continue;\n        }\n        allowSeparator = 0;\n        char = advanceChar(parser);\n    }\n    if (allowSeparator) {\n        throw new ParseError(parser.currentLocation, { index: parser.index + 1, line: parser.line, column: parser.column }, 153);\n    }\n    return ret + parser.source.substring(start, parser.index);\n}\n\nconst KeywordDescTable = [\n    'end of source',\n    'identifier', 'number', 'string', 'regular expression',\n    'false', 'true', 'null',\n    'template continuation', 'template tail',\n    '=>', '(', '{', '.', '...', '}', ')', ';', ',', '[', ']', ':', '?', '\\'', '\"',\n    '++', '--',\n    '=', '<<=', '>>=', '>>>=', '**=', '+=', '-=', '*=', '/=', '%=', '^=', '|=',\n    '&=', '||=', '&&=', '??=',\n    'typeof', 'delete', 'void', '!', '~', '+', '-', 'in', 'instanceof', '*', '%', '/', '**', '&&',\n    '||', '===', '!==', '==', '!=', '<=', '>=', '<', '>', '<<', '>>', '>>>', '&', '|', '^',\n    'var', 'let', 'const',\n    'break', 'case', 'catch', 'class', 'continue', 'debugger', 'default', 'do', 'else', 'export',\n    'extends', 'finally', 'for', 'function', 'if', 'import', 'new', 'return', 'super', 'switch',\n    'this', 'throw', 'try', 'while', 'with',\n    'implements', 'interface', 'package', 'private', 'protected', 'public', 'static', 'yield',\n    'as', 'async', 'await', 'constructor', 'get', 'set', 'accessor', 'from', 'of',\n    'enum', 'eval', 'arguments', 'escaped keyword', 'escaped future reserved keyword', 'reserved if strict', '#',\n    'BigIntLiteral', '??', '?.', 'WhiteSpace', 'Illegal', 'LineTerminator', 'PrivateField',\n    'Template', '@', 'target', 'meta', 'LineFeed', 'Escaped', 'JSXText'\n];\nconst descKeywordTable = {\n    this: 86111,\n    function: 86104,\n    if: 20569,\n    return: 20572,\n    var: 86088,\n    else: 20563,\n    for: 20567,\n    new: 86107,\n    in: 8673330,\n    typeof: 16863275,\n    while: 20578,\n    case: 20556,\n    break: 20555,\n    try: 20577,\n    catch: 20557,\n    delete: 16863276,\n    throw: 86112,\n    switch: 86110,\n    continue: 20559,\n    default: 20561,\n    instanceof: 8411187,\n    do: 20562,\n    void: 16863277,\n    finally: 20566,\n    async: 209005,\n    await: 209006,\n    class: 86094,\n    const: 86090,\n    constructor: 12399,\n    debugger: 20560,\n    export: 20564,\n    extends: 20565,\n    false: 86021,\n    from: 209011,\n    get: 209008,\n    implements: 36964,\n    import: 86106,\n    interface: 36965,\n    let: 241737,\n    null: 86023,\n    of: 471156,\n    package: 36966,\n    private: 36967,\n    protected: 36968,\n    public: 36969,\n    set: 209009,\n    static: 36970,\n    super: 86109,\n    true: 86022,\n    with: 20579,\n    yield: 241771,\n    enum: 86133,\n    eval: 537079926,\n    as: 77932,\n    arguments: 537079927,\n    target: 209029,\n    meta: 209030,\n    accessor: 12402,\n};\n\nfunction matchOrInsertSemicolon(parser, context) {\n    if ((parser.flags & 1) === 0 && (parser.getToken() & 1048576) !== 1048576) {\n        parser.report(30, KeywordDescTable[parser.getToken() & 255]);\n    }\n    if (!consumeOpt(parser, context, 1074790417)) {\n        parser.options.onInsertedSemicolon?.(parser.startIndex);\n    }\n}\nfunction isValidStrictMode(parser, index, tokenIndex, tokenValue) {\n    if (index - tokenIndex < 13 && tokenValue === 'use strict') {\n        if ((parser.getToken() & 1048576) === 1048576 || parser.flags & 1) {\n            return 1;\n        }\n    }\n    return 0;\n}\nfunction optionalBit(parser, context, t) {\n    if (parser.getToken() !== t)\n        return 0;\n    nextToken(parser, context);\n    return 1;\n}\nfunction consumeOpt(parser, context, t) {\n    if (parser.getToken() !== t)\n        return false;\n    nextToken(parser, context);\n    return true;\n}\nfunction consume(parser, context, t) {\n    if (parser.getToken() !== t)\n        parser.report(25, KeywordDescTable[t & 255]);\n    nextToken(parser, context);\n}\nfunction reinterpretToPattern(parser, node) {\n    switch (node.type) {\n        case 'ArrayExpression': {\n            node.type = 'ArrayPattern';\n            const { elements } = node;\n            for (let i = 0, n = elements.length; i < n; ++i) {\n                const element = elements[i];\n                if (element)\n                    reinterpretToPattern(parser, element);\n            }\n            return;\n        }\n        case 'ObjectExpression': {\n            node.type = 'ObjectPattern';\n            const { properties } = node;\n            for (let i = 0, n = properties.length; i < n; ++i) {\n                reinterpretToPattern(parser, properties[i]);\n            }\n            return;\n        }\n        case 'AssignmentExpression':\n            node.type = 'AssignmentPattern';\n            if (node.operator !== '=')\n                parser.report(71);\n            delete node.operator;\n            reinterpretToPattern(parser, node.left);\n            return;\n        case 'Property':\n            reinterpretToPattern(parser, node.value);\n            return;\n        case 'SpreadElement':\n            node.type = 'RestElement';\n            reinterpretToPattern(parser, node.argument);\n    }\n}\nfunction validateBindingIdentifier(parser, context, kind, t, skipEvalArgCheck) {\n    if (context & 1) {\n        if ((t & 36864) === 36864) {\n            parser.report(118);\n        }\n        if (!skipEvalArgCheck && (t & 537079808) === 537079808) {\n            parser.report(119);\n        }\n    }\n    if ((t & 20480) === 20480 || t === -2147483528) {\n        parser.report(102);\n    }\n    if (kind & (8 | 16) && (t & 255) === (241737 & 255)) {\n        parser.report(100);\n    }\n    if (context & (2048 | 2) && t === 209006) {\n        parser.report(110);\n    }\n    if (context & (1024 | 1) && t === 241771) {\n        parser.report(97, 'yield');\n    }\n}\nfunction validateFunctionName(parser, context, t) {\n    if (context & 1) {\n        if ((t & 36864) === 36864) {\n            parser.report(118);\n        }\n        if ((t & 537079808) === 537079808) {\n            parser.report(119);\n        }\n        if (t === -2147483527) {\n            parser.report(95);\n        }\n        if (t === -2147483528) {\n            parser.report(95);\n        }\n    }\n    if ((t & 20480) === 20480) {\n        parser.report(102);\n    }\n    if (context & (2048 | 2) && t === 209006) {\n        parser.report(110);\n    }\n    if (context & (1024 | 1) && t === 241771) {\n        parser.report(97, 'yield');\n    }\n}\nfunction isStrictReservedWord(parser, context, t) {\n    if (t === 209006) {\n        if (context & (2048 | 2))\n            parser.report(110);\n        parser.destructible |= 128;\n    }\n    if (t === 241771 && context & 1024)\n        parser.report(97, 'yield');\n    return ((t & 20480) === 20480 ||\n        (t & 36864) === 36864 ||\n        t == -2147483527);\n}\nfunction isPropertyWithPrivateFieldKey(expr) {\n    return !expr.property ? false : expr.property.type === 'PrivateIdentifier';\n}\nfunction isValidLabel(parser, labels, name, isIterationStatement) {\n    while (labels) {\n        if (labels['$' + name]) {\n            if (isIterationStatement)\n                parser.report(137);\n            return 1;\n        }\n        if (isIterationStatement && labels.loop)\n            isIterationStatement = 0;\n        labels = labels['$'];\n    }\n    return 0;\n}\nfunction validateAndDeclareLabel(parser, labels, name) {\n    let set = labels;\n    while (set) {\n        if (set['$' + name])\n            parser.report(136, name);\n        set = set['$'];\n    }\n    labels['$' + name] = 1;\n}\nfunction isEqualTagName(elementName) {\n    switch (elementName.type) {\n        case 'JSXIdentifier':\n            return elementName.name;\n        case 'JSXNamespacedName':\n            return elementName.namespace + ':' + elementName.name;\n        case 'JSXMemberExpression':\n            return isEqualTagName(elementName.object) + '.' + isEqualTagName(elementName.property);\n    }\n}\nfunction isValidIdentifier(context, t) {\n    if (context & (1 | 1024)) {\n        if (context & 2 && t === 209006)\n            return false;\n        if (context & 1024 && t === 241771)\n            return false;\n        return (t & 12288) === 12288;\n    }\n    return (t & 12288) === 12288 || (t & 36864) === 36864;\n}\nfunction classifyIdentifier(parser, context, t) {\n    if ((t & 537079808) === 537079808) {\n        if (context & 1)\n            parser.report(119);\n        parser.flags |= 512;\n    }\n    if (!isValidIdentifier(context, t))\n        parser.report(0);\n}\nfunction getOwnProperty(object, key) {\n    return Object.hasOwn(object, key) ? object[key] : undefined;\n}\n\nfunction scanIdentifier(parser, context, isValidAsKeyword) {\n    while (isIdPart[advanceChar(parser)])\n        ;\n    parser.tokenValue = parser.source.slice(parser.tokenIndex, parser.index);\n    return parser.currentChar !== 92 && parser.currentChar <= 0x7e\n        ? (getOwnProperty(descKeywordTable, parser.tokenValue) ?? 208897)\n        : scanIdentifierSlowCase(parser, context, 0, isValidAsKeyword);\n}\nfunction scanUnicodeIdentifier(parser, context) {\n    const cookedChar = scanIdentifierUnicodeEscape(parser);\n    if (!isIdentifierStart(cookedChar))\n        parser.report(5);\n    parser.tokenValue = String.fromCodePoint(cookedChar);\n    return scanIdentifierSlowCase(parser, context, 1, CharTypes[cookedChar] & 4);\n}\nfunction scanIdentifierSlowCase(parser, context, hasEscape, isValidAsKeyword) {\n    let start = parser.index;\n    while (parser.index < parser.end) {\n        if (parser.currentChar === 92) {\n            parser.tokenValue += parser.source.slice(start, parser.index);\n            hasEscape = 1;\n            const code = scanIdentifierUnicodeEscape(parser);\n            if (!isIdentifierPart(code))\n                parser.report(5);\n            isValidAsKeyword = isValidAsKeyword && CharTypes[code] & 4;\n            parser.tokenValue += String.fromCodePoint(code);\n            start = parser.index;\n        }\n        else {\n            const merged = consumePossibleSurrogatePair(parser);\n            if (merged > 0) {\n                if (!isIdentifierPart(merged)) {\n                    parser.report(20, String.fromCodePoint(merged));\n                }\n                parser.currentChar = merged;\n                parser.index++;\n                parser.column++;\n            }\n            else if (!isIdentifierPart(parser.currentChar)) {\n                break;\n            }\n            advanceChar(parser);\n        }\n    }\n    if (parser.index <= parser.end) {\n        parser.tokenValue += parser.source.slice(start, parser.index);\n    }\n    const { length } = parser.tokenValue;\n    if (isValidAsKeyword && length >= 2 && length <= 11) {\n        const token = getOwnProperty(descKeywordTable, parser.tokenValue);\n        if (token === void 0)\n            return 208897 | (hasEscape ? -2147483648 : 0);\n        if (!hasEscape)\n            return token;\n        if (token === 209006) {\n            if ((context & (2 | 2048)) === 0) {\n                return token | -2147483648;\n            }\n            return -2147483528;\n        }\n        if (context & 1) {\n            if (token === 36970) {\n                return -2147483527;\n            }\n            if ((token & 36864) === 36864) {\n                return -2147483527;\n            }\n            if ((token & 20480) === 20480) {\n                if (context & 262144 && (context & 8) === 0) {\n                    return token | -2147483648;\n                }\n                else {\n                    return -2147483528;\n                }\n            }\n            return 209018 | -2147483648;\n        }\n        if (context & 262144 &&\n            (context & 8) === 0 &&\n            (token & 20480) === 20480) {\n            return token | -2147483648;\n        }\n        if (token === 241771) {\n            return context & 262144\n                ? 209018 | -2147483648\n                : context & 1024\n                    ? -2147483528\n                    : token | -2147483648;\n        }\n        if (token === 209005) {\n            return 209018 | -2147483648;\n        }\n        if ((token & 36864) === 36864) {\n            return token | 12288 | -2147483648;\n        }\n        return -2147483528;\n    }\n    return 208897 | (hasEscape ? -2147483648 : 0);\n}\nfunction scanPrivateIdentifier(parser) {\n    let char = advanceChar(parser);\n    if (char === 92)\n        return 130;\n    const merged = consumePossibleSurrogatePair(parser);\n    if (merged)\n        char = merged;\n    if (!isIdentifierStart(char))\n        parser.report(96);\n    return 130;\n}\nfunction scanIdentifierUnicodeEscape(parser) {\n    if (parser.source.charCodeAt(parser.index + 1) !== 117) {\n        parser.report(5);\n    }\n    parser.currentChar = parser.source.charCodeAt((parser.index += 2));\n    parser.column += 2;\n    return scanUnicodeEscape(parser);\n}\nfunction scanUnicodeEscape(parser) {\n    let codePoint = 0;\n    const char = parser.currentChar;\n    if (char === 123) {\n        const begin = parser.index - 2;\n        while (CharTypes[advanceChar(parser)] & 64) {\n            codePoint = (codePoint << 4) | toHex(parser.currentChar);\n            if (codePoint > 1114111)\n                throw new ParseError({ index: begin, line: parser.line, column: parser.column }, parser.currentLocation, 104);\n        }\n        if (parser.currentChar !== 125) {\n            throw new ParseError({ index: begin, line: parser.line, column: parser.column }, parser.currentLocation, 7);\n        }\n        advanceChar(parser);\n        return codePoint;\n    }\n    if ((CharTypes[char] & 64) === 0)\n        parser.report(7);\n    const char2 = parser.source.charCodeAt(parser.index + 1);\n    if ((CharTypes[char2] & 64) === 0)\n        parser.report(7);\n    const char3 = parser.source.charCodeAt(parser.index + 2);\n    if ((CharTypes[char3] & 64) === 0)\n        parser.report(7);\n    const char4 = parser.source.charCodeAt(parser.index + 3);\n    if ((CharTypes[char4] & 64) === 0)\n        parser.report(7);\n    codePoint = (toHex(char) << 12) | (toHex(char2) << 8) | (toHex(char3) << 4) | toHex(char4);\n    parser.currentChar = parser.source.charCodeAt((parser.index += 4));\n    parser.column += 4;\n    return codePoint;\n}\n\nconst TokenLookup = [\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    127,\n    135,\n    127,\n    127,\n    129,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    127,\n    16842798,\n    134283267,\n    130,\n    208897,\n    8391477,\n    8390213,\n    134283267,\n    67174411,\n    16,\n    8391476,\n    25233968,\n    18,\n    25233969,\n    67108877,\n    8457014,\n    134283266,\n    134283266,\n    134283266,\n    134283266,\n    134283266,\n    134283266,\n    134283266,\n    134283266,\n    134283266,\n    134283266,\n    21,\n    1074790417,\n    8456256,\n    1077936155,\n    8390721,\n    22,\n    132,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    69271571,\n    136,\n    20,\n    8389959,\n    208897,\n    131,\n    4096,\n    4096,\n    4096,\n    4096,\n    4096,\n    4096,\n    4096,\n    208897,\n    4096,\n    208897,\n    208897,\n    4096,\n    208897,\n    4096,\n    208897,\n    4096,\n    208897,\n    4096,\n    4096,\n    4096,\n    208897,\n    4096,\n    4096,\n    208897,\n    4096,\n    4096,\n    2162700,\n    8389702,\n    1074790415,\n    16842799,\n    128,\n];\nfunction nextToken(parser, context) {\n    parser.flags = (parser.flags | 1) ^ 1;\n    parser.startIndex = parser.index;\n    parser.startColumn = parser.column;\n    parser.startLine = parser.line;\n    parser.setToken(scanSingleToken(parser, context, 0));\n}\nfunction scanSingleToken(parser, context, state) {\n    const isStartOfLine = parser.index === 0;\n    const { source } = parser;\n    let start = parser.currentLocation;\n    while (parser.index < parser.end) {\n        parser.tokenIndex = parser.index;\n        parser.tokenColumn = parser.column;\n        parser.tokenLine = parser.line;\n        let char = parser.currentChar;\n        if (char <= 0x7e) {\n            const token = TokenLookup[char];\n            switch (token) {\n                case 67174411:\n                case 16:\n                case 2162700:\n                case 1074790415:\n                case 69271571:\n                case 20:\n                case 21:\n                case 1074790417:\n                case 18:\n                case 16842799:\n                case 132:\n                case 128:\n                    advanceChar(parser);\n                    return token;\n                case 208897:\n                    return scanIdentifier(parser, context, 0);\n                case 4096:\n                    return scanIdentifier(parser, context, 1);\n                case 134283266:\n                    return scanNumber(parser, context, 16 | 128);\n                case 134283267:\n                    return scanString(parser, context, char);\n                case 131:\n                    return scanTemplate(parser, context);\n                case 136:\n                    return scanUnicodeIdentifier(parser, context);\n                case 130:\n                    return scanPrivateIdentifier(parser);\n                case 127:\n                    advanceChar(parser);\n                    break;\n                case 129:\n                    state |= 1 | 4;\n                    scanNewLine(parser);\n                    break;\n                case 135:\n                    consumeLineFeed(parser, state);\n                    state = (state & -5) | 1;\n                    break;\n                case 8456256: {\n                    const ch = advanceChar(parser);\n                    if (parser.index < parser.end) {\n                        if (ch === 60) {\n                            if (parser.index < parser.end && advanceChar(parser) === 61) {\n                                advanceChar(parser);\n                                return 4194332;\n                            }\n                            return 8390978;\n                        }\n                        else if (ch === 61) {\n                            advanceChar(parser);\n                            return 8390718;\n                        }\n                        if (ch === 33) {\n                            const index = parser.index + 1;\n                            if (index + 1 < parser.end &&\n                                source.charCodeAt(index) === 45 &&\n                                source.charCodeAt(index + 1) == 45) {\n                                parser.column += 3;\n                                parser.currentChar = source.charCodeAt((parser.index += 3));\n                                state = skipSingleHTMLComment(parser, source, state, context, 2, parser.tokenStart);\n                                start = parser.tokenStart;\n                                continue;\n                            }\n                            return 8456256;\n                        }\n                    }\n                    return 8456256;\n                }\n                case 1077936155: {\n                    advanceChar(parser);\n                    const ch = parser.currentChar;\n                    if (ch === 61) {\n                        if (advanceChar(parser) === 61) {\n                            advanceChar(parser);\n                            return 8390458;\n                        }\n                        return 8390460;\n                    }\n                    if (ch === 62) {\n                        advanceChar(parser);\n                        return 10;\n                    }\n                    return 1077936155;\n                }\n                case 16842798:\n                    if (advanceChar(parser) !== 61) {\n                        return 16842798;\n                    }\n                    if (advanceChar(parser) !== 61) {\n                        return 8390461;\n                    }\n                    advanceChar(parser);\n                    return 8390459;\n                case 8391477:\n                    if (advanceChar(parser) !== 61)\n                        return 8391477;\n                    advanceChar(parser);\n                    return 4194340;\n                case 8391476: {\n                    advanceChar(parser);\n                    if (parser.index >= parser.end)\n                        return 8391476;\n                    const ch = parser.currentChar;\n                    if (ch === 61) {\n                        advanceChar(parser);\n                        return 4194338;\n                    }\n                    if (ch !== 42)\n                        return 8391476;\n                    if (advanceChar(parser) !== 61)\n                        return 8391735;\n                    advanceChar(parser);\n                    return 4194335;\n                }\n                case 8389959:\n                    if (advanceChar(parser) !== 61)\n                        return 8389959;\n                    advanceChar(parser);\n                    return 4194341;\n                case 25233968: {\n                    advanceChar(parser);\n                    const ch = parser.currentChar;\n                    if (ch === 43) {\n                        advanceChar(parser);\n                        return 33619993;\n                    }\n                    if (ch === 61) {\n                        advanceChar(parser);\n                        return 4194336;\n                    }\n                    return 25233968;\n                }\n                case 25233969: {\n                    advanceChar(parser);\n                    const ch = parser.currentChar;\n                    if (ch === 45) {\n                        advanceChar(parser);\n                        if ((state & 1 || isStartOfLine) && parser.currentChar === 62) {\n                            if (!parser.options.webcompat)\n                                parser.report(112);\n                            advanceChar(parser);\n                            state = skipSingleHTMLComment(parser, source, state, context, 3, start);\n                            start = parser.tokenStart;\n                            continue;\n                        }\n                        return 33619994;\n                    }\n                    if (ch === 61) {\n                        advanceChar(parser);\n                        return 4194337;\n                    }\n                    return 25233969;\n                }\n                case 8457014: {\n                    advanceChar(parser);\n                    if (parser.index < parser.end) {\n                        const ch = parser.currentChar;\n                        if (ch === 47) {\n                            advanceChar(parser);\n                            state = skipSingleLineComment(parser, source, state, 0, parser.tokenStart);\n                            start = parser.tokenStart;\n                            continue;\n                        }\n                        if (ch === 42) {\n                            advanceChar(parser);\n                            state = skipMultiLineComment(parser, source, state);\n                            start = parser.tokenStart;\n                            continue;\n                        }\n                        if (context & 32) {\n                            return scanRegularExpression(parser);\n                        }\n                        if (ch === 61) {\n                            advanceChar(parser);\n                            return 4259875;\n                        }\n                    }\n                    return 8457014;\n                }\n                case 67108877: {\n                    const next = advanceChar(parser);\n                    if (next >= 48 && next <= 57)\n                        return scanNumber(parser, context, 64 | 16);\n                    if (next === 46) {\n                        const index = parser.index + 1;\n                        if (index < parser.end && source.charCodeAt(index) === 46) {\n                            parser.column += 2;\n                            parser.currentChar = source.charCodeAt((parser.index += 2));\n                            return 14;\n                        }\n                    }\n                    return 67108877;\n                }\n                case 8389702: {\n                    advanceChar(parser);\n                    const ch = parser.currentChar;\n                    if (ch === 124) {\n                        advanceChar(parser);\n                        if (parser.currentChar === 61) {\n                            advanceChar(parser);\n                            return 4194344;\n                        }\n                        return 8913465;\n                    }\n                    if (ch === 61) {\n                        advanceChar(parser);\n                        return 4194342;\n                    }\n                    return 8389702;\n                }\n                case 8390721: {\n                    advanceChar(parser);\n                    const ch = parser.currentChar;\n                    if (ch === 61) {\n                        advanceChar(parser);\n                        return 8390719;\n                    }\n                    if (ch !== 62)\n                        return 8390721;\n                    advanceChar(parser);\n                    if (parser.index < parser.end) {\n                        const ch = parser.currentChar;\n                        if (ch === 62) {\n                            if (advanceChar(parser) === 61) {\n                                advanceChar(parser);\n                                return 4194334;\n                            }\n                            return 8390980;\n                        }\n                        if (ch === 61) {\n                            advanceChar(parser);\n                            return 4194333;\n                        }\n                    }\n                    return 8390979;\n                }\n                case 8390213: {\n                    advanceChar(parser);\n                    const ch = parser.currentChar;\n                    if (ch === 38) {\n                        advanceChar(parser);\n                        if (parser.currentChar === 61) {\n                            advanceChar(parser);\n                            return 4194345;\n                        }\n                        return 8913720;\n                    }\n                    if (ch === 61) {\n                        advanceChar(parser);\n                        return 4194343;\n                    }\n                    return 8390213;\n                }\n                case 22: {\n                    let ch = advanceChar(parser);\n                    if (ch === 63) {\n                        advanceChar(parser);\n                        if (parser.currentChar === 61) {\n                            advanceChar(parser);\n                            return 4194346;\n                        }\n                        return 276824445;\n                    }\n                    if (ch === 46) {\n                        const index = parser.index + 1;\n                        if (index < parser.end) {\n                            ch = source.charCodeAt(index);\n                            if (!(ch >= 48 && ch <= 57)) {\n                                advanceChar(parser);\n                                return 67108990;\n                            }\n                        }\n                    }\n                    return 22;\n                }\n            }\n        }\n        else {\n            if ((char ^ 8232) <= 1) {\n                state = (state & -5) | 1;\n                scanNewLine(parser);\n                continue;\n            }\n            const merged = consumePossibleSurrogatePair(parser);\n            if (merged > 0)\n                char = merged;\n            if (isIDStart(char)) {\n                parser.tokenValue = '';\n                return scanIdentifierSlowCase(parser, context, 0, 0);\n            }\n            if (isExoticECMAScriptWhitespace(char)) {\n                advanceChar(parser);\n                continue;\n            }\n            parser.report(20, String.fromCodePoint(char));\n        }\n    }\n    return 1048576;\n}\n\nconst entities = {\n    AElig: '\\u00C6',\n    AMP: '\\u0026',\n    Aacute: '\\u00C1',\n    Abreve: '\\u0102',\n    Acirc: '\\u00C2',\n    Acy: '\\u0410',\n    Afr: '\\uD835\\uDD04',\n    Agrave: '\\u00C0',\n    Alpha: '\\u0391',\n    Amacr: '\\u0100',\n    And: '\\u2A53',\n    Aogon: '\\u0104',\n    Aopf: '\\uD835\\uDD38',\n    ApplyFunction: '\\u2061',\n    Aring: '\\u00C5',\n    Ascr: '\\uD835\\uDC9C',\n    Assign: '\\u2254',\n    Atilde: '\\u00C3',\n    Auml: '\\u00C4',\n    Backslash: '\\u2216',\n    Barv: '\\u2AE7',\n    Barwed: '\\u2306',\n    Bcy: '\\u0411',\n    Because: '\\u2235',\n    Bernoullis: '\\u212C',\n    Beta: '\\u0392',\n    Bfr: '\\uD835\\uDD05',\n    Bopf: '\\uD835\\uDD39',\n    Breve: '\\u02D8',\n    Bscr: '\\u212C',\n    Bumpeq: '\\u224E',\n    CHcy: '\\u0427',\n    COPY: '\\u00A9',\n    Cacute: '\\u0106',\n    Cap: '\\u22D2',\n    CapitalDifferentialD: '\\u2145',\n    Cayleys: '\\u212D',\n    Ccaron: '\\u010C',\n    Ccedil: '\\u00C7',\n    Ccirc: '\\u0108',\n    Cconint: '\\u2230',\n    Cdot: '\\u010A',\n    Cedilla: '\\u00B8',\n    CenterDot: '\\u00B7',\n    Cfr: '\\u212D',\n    Chi: '\\u03A7',\n    CircleDot: '\\u2299',\n    CircleMinus: '\\u2296',\n    CirclePlus: '\\u2295',\n    CircleTimes: '\\u2297',\n    ClockwiseContourIntegral: '\\u2232',\n    CloseCurlyDoubleQuote: '\\u201D',\n    CloseCurlyQuote: '\\u2019',\n    Colon: '\\u2237',\n    Colone: '\\u2A74',\n    Congruent: '\\u2261',\n    Conint: '\\u222F',\n    ContourIntegral: '\\u222E',\n    Copf: '\\u2102',\n    Coproduct: '\\u2210',\n    CounterClockwiseContourIntegral: '\\u2233',\n    Cross: '\\u2A2F',\n    Cscr: '\\uD835\\uDC9E',\n    Cup: '\\u22D3',\n    CupCap: '\\u224D',\n    DD: '\\u2145',\n    DDotrahd: '\\u2911',\n    DJcy: '\\u0402',\n    DScy: '\\u0405',\n    DZcy: '\\u040F',\n    Dagger: '\\u2021',\n    Darr: '\\u21A1',\n    Dashv: '\\u2AE4',\n    Dcaron: '\\u010E',\n    Dcy: '\\u0414',\n    Del: '\\u2207',\n    Delta: '\\u0394',\n    Dfr: '\\uD835\\uDD07',\n    DiacriticalAcute: '\\u00B4',\n    DiacriticalDot: '\\u02D9',\n    DiacriticalDoubleAcute: '\\u02DD',\n    DiacriticalGrave: '\\u0060',\n    DiacriticalTilde: '\\u02DC',\n    Diamond: '\\u22C4',\n    DifferentialD: '\\u2146',\n    Dopf: '\\uD835\\uDD3B',\n    Dot: '\\u00A8',\n    DotDot: '\\u20DC',\n    DotEqual: '\\u2250',\n    DoubleContourIntegral: '\\u222F',\n    DoubleDot: '\\u00A8',\n    DoubleDownArrow: '\\u21D3',\n    DoubleLeftArrow: '\\u21D0',\n    DoubleLeftRightArrow: '\\u21D4',\n    DoubleLeftTee: '\\u2AE4',\n    DoubleLongLeftArrow: '\\u27F8',\n    DoubleLongLeftRightArrow: '\\u27FA',\n    DoubleLongRightArrow: '\\u27F9',\n    DoubleRightArrow: '\\u21D2',\n    DoubleRightTee: '\\u22A8',\n    DoubleUpArrow: '\\u21D1',\n    DoubleUpDownArrow: '\\u21D5',\n    DoubleVerticalBar: '\\u2225',\n    DownArrow: '\\u2193',\n    DownArrowBar: '\\u2913',\n    DownArrowUpArrow: '\\u21F5',\n    DownBreve: '\\u0311',\n    DownLeftRightVector: '\\u2950',\n    DownLeftTeeVector: '\\u295E',\n    DownLeftVector: '\\u21BD',\n    DownLeftVectorBar: '\\u2956',\n    DownRightTeeVector: '\\u295F',\n    DownRightVector: '\\u21C1',\n    DownRightVectorBar: '\\u2957',\n    DownTee: '\\u22A4',\n    DownTeeArrow: '\\u21A7',\n    Downarrow: '\\u21D3',\n    Dscr: '\\uD835\\uDC9F',\n    Dstrok: '\\u0110',\n    ENG: '\\u014A',\n    ETH: '\\u00D0',\n    Eacute: '\\u00C9',\n    Ecaron: '\\u011A',\n    Ecirc: '\\u00CA',\n    Ecy: '\\u042D',\n    Edot: '\\u0116',\n    Efr: '\\uD835\\uDD08',\n    Egrave: '\\u00C8',\n    Element: '\\u2208',\n    Emacr: '\\u0112',\n    EmptySmallSquare: '\\u25FB',\n    EmptyVerySmallSquare: '\\u25AB',\n    Eogon: '\\u0118',\n    Eopf: '\\uD835\\uDD3C',\n    Epsilon: '\\u0395',\n    Equal: '\\u2A75',\n    EqualTilde: '\\u2242',\n    Equilibrium: '\\u21CC',\n    Escr: '\\u2130',\n    Esim: '\\u2A73',\n    Eta: '\\u0397',\n    Euml: '\\u00CB',\n    Exists: '\\u2203',\n    ExponentialE: '\\u2147',\n    Fcy: '\\u0424',\n    Ffr: '\\uD835\\uDD09',\n    FilledSmallSquare: '\\u25FC',\n    FilledVerySmallSquare: '\\u25AA',\n    Fopf: '\\uD835\\uDD3D',\n    ForAll: '\\u2200',\n    Fouriertrf: '\\u2131',\n    Fscr: '\\u2131',\n    GJcy: '\\u0403',\n    GT: '\\u003E',\n    Gamma: '\\u0393',\n    Gammad: '\\u03DC',\n    Gbreve: '\\u011E',\n    Gcedil: '\\u0122',\n    Gcirc: '\\u011C',\n    Gcy: '\\u0413',\n    Gdot: '\\u0120',\n    Gfr: '\\uD835\\uDD0A',\n    Gg: '\\u22D9',\n    Gopf: '\\uD835\\uDD3E',\n    GreaterEqual: '\\u2265',\n    GreaterEqualLess: '\\u22DB',\n    GreaterFullEqual: '\\u2267',\n    GreaterGreater: '\\u2AA2',\n    GreaterLess: '\\u2277',\n    GreaterSlantEqual: '\\u2A7E',\n    GreaterTilde: '\\u2273',\n    Gscr: '\\uD835\\uDCA2',\n    Gt: '\\u226B',\n    HARDcy: '\\u042A',\n    Hacek: '\\u02C7',\n    Hat: '\\u005E',\n    Hcirc: '\\u0124',\n    Hfr: '\\u210C',\n    HilbertSpace: '\\u210B',\n    Hopf: '\\u210D',\n    HorizontalLine: '\\u2500',\n    Hscr: '\\u210B',\n    Hstrok: '\\u0126',\n    HumpDownHump: '\\u224E',\n    HumpEqual: '\\u224F',\n    IEcy: '\\u0415',\n    IJlig: '\\u0132',\n    IOcy: '\\u0401',\n    Iacute: '\\u00CD',\n    Icirc: '\\u00CE',\n    Icy: '\\u0418',\n    Idot: '\\u0130',\n    Ifr: '\\u2111',\n    Igrave: '\\u00CC',\n    Im: '\\u2111',\n    Imacr: '\\u012A',\n    ImaginaryI: '\\u2148',\n    Implies: '\\u21D2',\n    Int: '\\u222C',\n    Integral: '\\u222B',\n    Intersection: '\\u22C2',\n    InvisibleComma: '\\u2063',\n    InvisibleTimes: '\\u2062',\n    Iogon: '\\u012E',\n    Iopf: '\\uD835\\uDD40',\n    Iota: '\\u0399',\n    Iscr: '\\u2110',\n    Itilde: '\\u0128',\n    Iukcy: '\\u0406',\n    Iuml: '\\u00CF',\n    Jcirc: '\\u0134',\n    Jcy: '\\u0419',\n    Jfr: '\\uD835\\uDD0D',\n    Jopf: '\\uD835\\uDD41',\n    Jscr: '\\uD835\\uDCA5',\n    Jsercy: '\\u0408',\n    Jukcy: '\\u0404',\n    KHcy: '\\u0425',\n    KJcy: '\\u040C',\n    Kappa: '\\u039A',\n    Kcedil: '\\u0136',\n    Kcy: '\\u041A',\n    Kfr: '\\uD835\\uDD0E',\n    Kopf: '\\uD835\\uDD42',\n    Kscr: '\\uD835\\uDCA6',\n    LJcy: '\\u0409',\n    LT: '\\u003C',\n    Lacute: '\\u0139',\n    Lambda: '\\u039B',\n    Lang: '\\u27EA',\n    Laplacetrf: '\\u2112',\n    Larr: '\\u219E',\n    Lcaron: '\\u013D',\n    Lcedil: '\\u013B',\n    Lcy: '\\u041B',\n    LeftAngleBracket: '\\u27E8',\n    LeftArrow: '\\u2190',\n    LeftArrowBar: '\\u21E4',\n    LeftArrowRightArrow: '\\u21C6',\n    LeftCeiling: '\\u2308',\n    LeftDoubleBracket: '\\u27E6',\n    LeftDownTeeVector: '\\u2961',\n    LeftDownVector: '\\u21C3',\n    LeftDownVectorBar: '\\u2959',\n    LeftFloor: '\\u230A',\n    LeftRightArrow: '\\u2194',\n    LeftRightVector: '\\u294E',\n    LeftTee: '\\u22A3',\n    LeftTeeArrow: '\\u21A4',\n    LeftTeeVector: '\\u295A',\n    LeftTriangle: '\\u22B2',\n    LeftTriangleBar: '\\u29CF',\n    LeftTriangleEqual: '\\u22B4',\n    LeftUpDownVector: '\\u2951',\n    LeftUpTeeVector: '\\u2960',\n    LeftUpVector: '\\u21BF',\n    LeftUpVectorBar: '\\u2958',\n    LeftVector: '\\u21BC',\n    LeftVectorBar: '\\u2952',\n    Leftarrow: '\\u21D0',\n    Leftrightarrow: '\\u21D4',\n    LessEqualGreater: '\\u22DA',\n    LessFullEqual: '\\u2266',\n    LessGreater: '\\u2276',\n    LessLess: '\\u2AA1',\n    LessSlantEqual: '\\u2A7D',\n    LessTilde: '\\u2272',\n    Lfr: '\\uD835\\uDD0F',\n    Ll: '\\u22D8',\n    Lleftarrow: '\\u21DA',\n    Lmidot: '\\u013F',\n    LongLeftArrow: '\\u27F5',\n    LongLeftRightArrow: '\\u27F7',\n    LongRightArrow: '\\u27F6',\n    Longleftarrow: '\\u27F8',\n    Longleftrightarrow: '\\u27FA',\n    Longrightarrow: '\\u27F9',\n    Lopf: '\\uD835\\uDD43',\n    LowerLeftArrow: '\\u2199',\n    LowerRightArrow: '\\u2198',\n    Lscr: '\\u2112',\n    Lsh: '\\u21B0',\n    Lstrok: '\\u0141',\n    Lt: '\\u226A',\n    Map: '\\u2905',\n    Mcy: '\\u041C',\n    MediumSpace: '\\u205F',\n    Mellintrf: '\\u2133',\n    Mfr: '\\uD835\\uDD10',\n    MinusPlus: '\\u2213',\n    Mopf: '\\uD835\\uDD44',\n    Mscr: '\\u2133',\n    Mu: '\\u039C',\n    NJcy: '\\u040A',\n    Nacute: '\\u0143',\n    Ncaron: '\\u0147',\n    Ncedil: '\\u0145',\n    Ncy: '\\u041D',\n    NegativeMediumSpace: '\\u200B',\n    NegativeThickSpace: '\\u200B',\n    NegativeThinSpace: '\\u200B',\n    NegativeVeryThinSpace: '\\u200B',\n    NestedGreaterGreater: '\\u226B',\n    NestedLessLess: '\\u226A',\n    NewLine: '\\u000A',\n    Nfr: '\\uD835\\uDD11',\n    NoBreak: '\\u2060',\n    NonBreakingSpace: '\\u00A0',\n    Nopf: '\\u2115',\n    Not: '\\u2AEC',\n    NotCongruent: '\\u2262',\n    NotCupCap: '\\u226D',\n    NotDoubleVerticalBar: '\\u2226',\n    NotElement: '\\u2209',\n    NotEqual: '\\u2260',\n    NotEqualTilde: '\\u2242\\u0338',\n    NotExists: '\\u2204',\n    NotGreater: '\\u226F',\n    NotGreaterEqual: '\\u2271',\n    NotGreaterFullEqual: '\\u2267\\u0338',\n    NotGreaterGreater: '\\u226B\\u0338',\n    NotGreaterLess: '\\u2279',\n    NotGreaterSlantEqual: '\\u2A7E\\u0338',\n    NotGreaterTilde: '\\u2275',\n    NotHumpDownHump: '\\u224E\\u0338',\n    NotHumpEqual: '\\u224F\\u0338',\n    NotLeftTriangle: '\\u22EA',\n    NotLeftTriangleBar: '\\u29CF\\u0338',\n    NotLeftTriangleEqual: '\\u22EC',\n    NotLess: '\\u226E',\n    NotLessEqual: '\\u2270',\n    NotLessGreater: '\\u2278',\n    NotLessLess: '\\u226A\\u0338',\n    NotLessSlantEqual: '\\u2A7D\\u0338',\n    NotLessTilde: '\\u2274',\n    NotNestedGreaterGreater: '\\u2AA2\\u0338',\n    NotNestedLessLess: '\\u2AA1\\u0338',\n    NotPrecedes: '\\u2280',\n    NotPrecedesEqual: '\\u2AAF\\u0338',\n    NotPrecedesSlantEqual: '\\u22E0',\n    NotReverseElement: '\\u220C',\n    NotRightTriangle: '\\u22EB',\n    NotRightTriangleBar: '\\u29D0\\u0338',\n    NotRightTriangleEqual: '\\u22ED',\n    NotSquareSubset: '\\u228F\\u0338',\n    NotSquareSubsetEqual: '\\u22E2',\n    NotSquareSuperset: '\\u2290\\u0338',\n    NotSquareSupersetEqual: '\\u22E3',\n    NotSubset: '\\u2282\\u20D2',\n    NotSubsetEqual: '\\u2288',\n    NotSucceeds: '\\u2281',\n    NotSucceedsEqual: '\\u2AB0\\u0338',\n    NotSucceedsSlantEqual: '\\u22E1',\n    NotSucceedsTilde: '\\u227F\\u0338',\n    NotSuperset: '\\u2283\\u20D2',\n    NotSupersetEqual: '\\u2289',\n    NotTilde: '\\u2241',\n    NotTildeEqual: '\\u2244',\n    NotTildeFullEqual: '\\u2247',\n    NotTildeTilde: '\\u2249',\n    NotVerticalBar: '\\u2224',\n    Nscr: '\\uD835\\uDCA9',\n    Ntilde: '\\u00D1',\n    Nu: '\\u039D',\n    OElig: '\\u0152',\n    Oacute: '\\u00D3',\n    Ocirc: '\\u00D4',\n    Ocy: '\\u041E',\n    Odblac: '\\u0150',\n    Ofr: '\\uD835\\uDD12',\n    Ograve: '\\u00D2',\n    Omacr: '\\u014C',\n    Omega: '\\u03A9',\n    Omicron: '\\u039F',\n    Oopf: '\\uD835\\uDD46',\n    OpenCurlyDoubleQuote: '\\u201C',\n    OpenCurlyQuote: '\\u2018',\n    Or: '\\u2A54',\n    Oscr: '\\uD835\\uDCAA',\n    Oslash: '\\u00D8',\n    Otilde: '\\u00D5',\n    Otimes: '\\u2A37',\n    Ouml: '\\u00D6',\n    OverBar: '\\u203E',\n    OverBrace: '\\u23DE',\n    OverBracket: '\\u23B4',\n    OverParenthesis: '\\u23DC',\n    PartialD: '\\u2202',\n    Pcy: '\\u041F',\n    Pfr: '\\uD835\\uDD13',\n    Phi: '\\u03A6',\n    Pi: '\\u03A0',\n    PlusMinus: '\\u00B1',\n    Poincareplane: '\\u210C',\n    Popf: '\\u2119',\n    Pr: '\\u2ABB',\n    Precedes: '\\u227A',\n    PrecedesEqual: '\\u2AAF',\n    PrecedesSlantEqual: '\\u227C',\n    PrecedesTilde: '\\u227E',\n    Prime: '\\u2033',\n    Product: '\\u220F',\n    Proportion: '\\u2237',\n    Proportional: '\\u221D',\n    Pscr: '\\uD835\\uDCAB',\n    Psi: '\\u03A8',\n    QUOT: '\\u0022',\n    Qfr: '\\uD835\\uDD14',\n    Qopf: '\\u211A',\n    Qscr: '\\uD835\\uDCAC',\n    RBarr: '\\u2910',\n    REG: '\\u00AE',\n    Racute: '\\u0154',\n    Rang: '\\u27EB',\n    Rarr: '\\u21A0',\n    Rarrtl: '\\u2916',\n    Rcaron: '\\u0158',\n    Rcedil: '\\u0156',\n    Rcy: '\\u0420',\n    Re: '\\u211C',\n    ReverseElement: '\\u220B',\n    ReverseEquilibrium: '\\u21CB',\n    ReverseUpEquilibrium: '\\u296F',\n    Rfr: '\\u211C',\n    Rho: '\\u03A1',\n    RightAngleBracket: '\\u27E9',\n    RightArrow: '\\u2192',\n    RightArrowBar: '\\u21E5',\n    RightArrowLeftArrow: '\\u21C4',\n    RightCeiling: '\\u2309',\n    RightDoubleBracket: '\\u27E7',\n    RightDownTeeVector: '\\u295D',\n    RightDownVector: '\\u21C2',\n    RightDownVectorBar: '\\u2955',\n    RightFloor: '\\u230B',\n    RightTee: '\\u22A2',\n    RightTeeArrow: '\\u21A6',\n    RightTeeVector: '\\u295B',\n    RightTriangle: '\\u22B3',\n    RightTriangleBar: '\\u29D0',\n    RightTriangleEqual: '\\u22B5',\n    RightUpDownVector: '\\u294F',\n    RightUpTeeVector: '\\u295C',\n    RightUpVector: '\\u21BE',\n    RightUpVectorBar: '\\u2954',\n    RightVector: '\\u21C0',\n    RightVectorBar: '\\u2953',\n    Rightarrow: '\\u21D2',\n    Ropf: '\\u211D',\n    RoundImplies: '\\u2970',\n    Rrightarrow: '\\u21DB',\n    Rscr: '\\u211B',\n    Rsh: '\\u21B1',\n    RuleDelayed: '\\u29F4',\n    SHCHcy: '\\u0429',\n    SHcy: '\\u0428',\n    SOFTcy: '\\u042C',\n    Sacute: '\\u015A',\n    Sc: '\\u2ABC',\n    Scaron: '\\u0160',\n    Scedil: '\\u015E',\n    Scirc: '\\u015C',\n    Scy: '\\u0421',\n    Sfr: '\\uD835\\uDD16',\n    ShortDownArrow: '\\u2193',\n    ShortLeftArrow: '\\u2190',\n    ShortRightArrow: '\\u2192',\n    ShortUpArrow: '\\u2191',\n    Sigma: '\\u03A3',\n    SmallCircle: '\\u2218',\n    Sopf: '\\uD835\\uDD4A',\n    Sqrt: '\\u221A',\n    Square: '\\u25A1',\n    SquareIntersection: '\\u2293',\n    SquareSubset: '\\u228F',\n    SquareSubsetEqual: '\\u2291',\n    SquareSuperset: '\\u2290',\n    SquareSupersetEqual: '\\u2292',\n    SquareUnion: '\\u2294',\n    Sscr: '\\uD835\\uDCAE',\n    Star: '\\u22C6',\n    Sub: '\\u22D0',\n    Subset: '\\u22D0',\n    SubsetEqual: '\\u2286',\n    Succeeds: '\\u227B',\n    SucceedsEqual: '\\u2AB0',\n    SucceedsSlantEqual: '\\u227D',\n    SucceedsTilde: '\\u227F',\n    SuchThat: '\\u220B',\n    Sum: '\\u2211',\n    Sup: '\\u22D1',\n    Superset: '\\u2283',\n    SupersetEqual: '\\u2287',\n    Supset: '\\u22D1',\n    THORN: '\\u00DE',\n    TRADE: '\\u2122',\n    TSHcy: '\\u040B',\n    TScy: '\\u0426',\n    Tab: '\\u0009',\n    Tau: '\\u03A4',\n    Tcaron: '\\u0164',\n    Tcedil: '\\u0162',\n    Tcy: '\\u0422',\n    Tfr: '\\uD835\\uDD17',\n    Therefore: '\\u2234',\n    Theta: '\\u0398',\n    ThickSpace: '\\u205F\\u200A',\n    ThinSpace: '\\u2009',\n    Tilde: '\\u223C',\n    TildeEqual: '\\u2243',\n    TildeFullEqual: '\\u2245',\n    TildeTilde: '\\u2248',\n    Topf: '\\uD835\\uDD4B',\n    TripleDot: '\\u20DB',\n    Tscr: '\\uD835\\uDCAF',\n    Tstrok: '\\u0166',\n    Uacute: '\\u00DA',\n    Uarr: '\\u219F',\n    Uarrocir: '\\u2949',\n    Ubrcy: '\\u040E',\n    Ubreve: '\\u016C',\n    Ucirc: '\\u00DB',\n    Ucy: '\\u0423',\n    Udblac: '\\u0170',\n    Ufr: '\\uD835\\uDD18',\n    Ugrave: '\\u00D9',\n    Umacr: '\\u016A',\n    UnderBar: '\\u005F',\n    UnderBrace: '\\u23DF',\n    UnderBracket: '\\u23B5',\n    UnderParenthesis: '\\u23DD',\n    Union: '\\u22C3',\n    UnionPlus: '\\u228E',\n    Uogon: '\\u0172',\n    Uopf: '\\uD835\\uDD4C',\n    UpArrow: '\\u2191',\n    UpArrowBar: '\\u2912',\n    UpArrowDownArrow: '\\u21C5',\n    UpDownArrow: '\\u2195',\n    UpEquilibrium: '\\u296E',\n    UpTee: '\\u22A5',\n    UpTeeArrow: '\\u21A5',\n    Uparrow: '\\u21D1',\n    Updownarrow: '\\u21D5',\n    UpperLeftArrow: '\\u2196',\n    UpperRightArrow: '\\u2197',\n    Upsi: '\\u03D2',\n    Upsilon: '\\u03A5',\n    Uring: '\\u016E',\n    Uscr: '\\uD835\\uDCB0',\n    Utilde: '\\u0168',\n    Uuml: '\\u00DC',\n    VDash: '\\u22AB',\n    Vbar: '\\u2AEB',\n    Vcy: '\\u0412',\n    Vdash: '\\u22A9',\n    Vdashl: '\\u2AE6',\n    Vee: '\\u22C1',\n    Verbar: '\\u2016',\n    Vert: '\\u2016',\n    VerticalBar: '\\u2223',\n    VerticalLine: '\\u007C',\n    VerticalSeparator: '\\u2758',\n    VerticalTilde: '\\u2240',\n    VeryThinSpace: '\\u200A',\n    Vfr: '\\uD835\\uDD19',\n    Vopf: '\\uD835\\uDD4D',\n    Vscr: '\\uD835\\uDCB1',\n    Vvdash: '\\u22AA',\n    Wcirc: '\\u0174',\n    Wedge: '\\u22C0',\n    Wfr: '\\uD835\\uDD1A',\n    Wopf: '\\uD835\\uDD4E',\n    Wscr: '\\uD835\\uDCB2',\n    Xfr: '\\uD835\\uDD1B',\n    Xi: '\\u039E',\n    Xopf: '\\uD835\\uDD4F',\n    Xscr: '\\uD835\\uDCB3',\n    YAcy: '\\u042F',\n    YIcy: '\\u0407',\n    YUcy: '\\u042E',\n    Yacute: '\\u00DD',\n    Ycirc: '\\u0176',\n    Ycy: '\\u042B',\n    Yfr: '\\uD835\\uDD1C',\n    Yopf: '\\uD835\\uDD50',\n    Yscr: '\\uD835\\uDCB4',\n    Yuml: '\\u0178',\n    ZHcy: '\\u0416',\n    Zacute: '\\u0179',\n    Zcaron: '\\u017D',\n    Zcy: '\\u0417',\n    Zdot: '\\u017B',\n    ZeroWidthSpace: '\\u200B',\n    Zeta: '\\u0396',\n    Zfr: '\\u2128',\n    Zopf: '\\u2124',\n    Zscr: '\\uD835\\uDCB5',\n    aacute: '\\u00E1',\n    abreve: '\\u0103',\n    ac: '\\u223E',\n    acE: '\\u223E\\u0333',\n    acd: '\\u223F',\n    acirc: '\\u00E2',\n    acute: '\\u00B4',\n    acy: '\\u0430',\n    aelig: '\\u00E6',\n    af: '\\u2061',\n    afr: '\\uD835\\uDD1E',\n    agrave: '\\u00E0',\n    alefsym: '\\u2135',\n    aleph: '\\u2135',\n    alpha: '\\u03B1',\n    amacr: '\\u0101',\n    amalg: '\\u2A3F',\n    amp: '\\u0026',\n    and: '\\u2227',\n    andand: '\\u2A55',\n    andd: '\\u2A5C',\n    andslope: '\\u2A58',\n    andv: '\\u2A5A',\n    ang: '\\u2220',\n    ange: '\\u29A4',\n    angle: '\\u2220',\n    angmsd: '\\u2221',\n    angmsdaa: '\\u29A8',\n    angmsdab: '\\u29A9',\n    angmsdac: '\\u29AA',\n    angmsdad: '\\u29AB',\n    angmsdae: '\\u29AC',\n    angmsdaf: '\\u29AD',\n    angmsdag: '\\u29AE',\n    angmsdah: '\\u29AF',\n    angrt: '\\u221F',\n    angrtvb: '\\u22BE',\n    angrtvbd: '\\u299D',\n    angsph: '\\u2222',\n    angst: '\\u00C5',\n    angzarr: '\\u237C',\n    aogon: '\\u0105',\n    aopf: '\\uD835\\uDD52',\n    ap: '\\u2248',\n    apE: '\\u2A70',\n    apacir: '\\u2A6F',\n    ape: '\\u224A',\n    apid: '\\u224B',\n    apos: '\\u0027',\n    approx: '\\u2248',\n    approxeq: '\\u224A',\n    aring: '\\u00E5',\n    ascr: '\\uD835\\uDCB6',\n    ast: '\\u002A',\n    asymp: '\\u2248',\n    asympeq: '\\u224D',\n    atilde: '\\u00E3',\n    auml: '\\u00E4',\n    awconint: '\\u2233',\n    awint: '\\u2A11',\n    bNot: '\\u2AED',\n    backcong: '\\u224C',\n    backepsilon: '\\u03F6',\n    backprime: '\\u2035',\n    backsim: '\\u223D',\n    backsimeq: '\\u22CD',\n    barvee: '\\u22BD',\n    barwed: '\\u2305',\n    barwedge: '\\u2305',\n    bbrk: '\\u23B5',\n    bbrktbrk: '\\u23B6',\n    bcong: '\\u224C',\n    bcy: '\\u0431',\n    bdquo: '\\u201E',\n    becaus: '\\u2235',\n    because: '\\u2235',\n    bemptyv: '\\u29B0',\n    bepsi: '\\u03F6',\n    bernou: '\\u212C',\n    beta: '\\u03B2',\n    beth: '\\u2136',\n    between: '\\u226C',\n    bfr: '\\uD835\\uDD1F',\n    bigcap: '\\u22C2',\n    bigcirc: '\\u25EF',\n    bigcup: '\\u22C3',\n    bigodot: '\\u2A00',\n    bigoplus: '\\u2A01',\n    bigotimes: '\\u2A02',\n    bigsqcup: '\\u2A06',\n    bigstar: '\\u2605',\n    bigtriangledown: '\\u25BD',\n    bigtriangleup: '\\u25B3',\n    biguplus: '\\u2A04',\n    bigvee: '\\u22C1',\n    bigwedge: '\\u22C0',\n    bkarow: '\\u290D',\n    blacklozenge: '\\u29EB',\n    blacksquare: '\\u25AA',\n    blacktriangle: '\\u25B4',\n    blacktriangledown: '\\u25BE',\n    blacktriangleleft: '\\u25C2',\n    blacktriangleright: '\\u25B8',\n    blank: '\\u2423',\n    blk12: '\\u2592',\n    blk14: '\\u2591',\n    blk34: '\\u2593',\n    block: '\\u2588',\n    bne: '\\u003D\\u20E5',\n    bnequiv: '\\u2261\\u20E5',\n    bnot: '\\u2310',\n    bopf: '\\uD835\\uDD53',\n    bot: '\\u22A5',\n    bottom: '\\u22A5',\n    bowtie: '\\u22C8',\n    boxDL: '\\u2557',\n    boxDR: '\\u2554',\n    boxDl: '\\u2556',\n    boxDr: '\\u2553',\n    boxH: '\\u2550',\n    boxHD: '\\u2566',\n    boxHU: '\\u2569',\n    boxHd: '\\u2564',\n    boxHu: '\\u2567',\n    boxUL: '\\u255D',\n    boxUR: '\\u255A',\n    boxUl: '\\u255C',\n    boxUr: '\\u2559',\n    boxV: '\\u2551',\n    boxVH: '\\u256C',\n    boxVL: '\\u2563',\n    boxVR: '\\u2560',\n    boxVh: '\\u256B',\n    boxVl: '\\u2562',\n    boxVr: '\\u255F',\n    boxbox: '\\u29C9',\n    boxdL: '\\u2555',\n    boxdR: '\\u2552',\n    boxdl: '\\u2510',\n    boxdr: '\\u250C',\n    boxh: '\\u2500',\n    boxhD: '\\u2565',\n    boxhU: '\\u2568',\n    boxhd: '\\u252C',\n    boxhu: '\\u2534',\n    boxminus: '\\u229F',\n    boxplus: '\\u229E',\n    boxtimes: '\\u22A0',\n    boxuL: '\\u255B',\n    boxuR: '\\u2558',\n    boxul: '\\u2518',\n    boxur: '\\u2514',\n    boxv: '\\u2502',\n    boxvH: '\\u256A',\n    boxvL: '\\u2561',\n    boxvR: '\\u255E',\n    boxvh: '\\u253C',\n    boxvl: '\\u2524',\n    boxvr: '\\u251C',\n    bprime: '\\u2035',\n    breve: '\\u02D8',\n    brvbar: '\\u00A6',\n    bscr: '\\uD835\\uDCB7',\n    bsemi: '\\u204F',\n    bsim: '\\u223D',\n    bsime: '\\u22CD',\n    bsol: '\\u005C',\n    bsolb: '\\u29C5',\n    bsolhsub: '\\u27C8',\n    bull: '\\u2022',\n    bullet: '\\u2022',\n    bump: '\\u224E',\n    bumpE: '\\u2AAE',\n    bumpe: '\\u224F',\n    bumpeq: '\\u224F',\n    cacute: '\\u0107',\n    cap: '\\u2229',\n    capand: '\\u2A44',\n    capbrcup: '\\u2A49',\n    capcap: '\\u2A4B',\n    capcup: '\\u2A47',\n    capdot: '\\u2A40',\n    caps: '\\u2229\\uFE00',\n    caret: '\\u2041',\n    caron: '\\u02C7',\n    ccaps: '\\u2A4D',\n    ccaron: '\\u010D',\n    ccedil: '\\u00E7',\n    ccirc: '\\u0109',\n    ccups: '\\u2A4C',\n    ccupssm: '\\u2A50',\n    cdot: '\\u010B',\n    cedil: '\\u00B8',\n    cemptyv: '\\u29B2',\n    cent: '\\u00A2',\n    centerdot: '\\u00B7',\n    cfr: '\\uD835\\uDD20',\n    chcy: '\\u0447',\n    check: '\\u2713',\n    checkmark: '\\u2713',\n    chi: '\\u03C7',\n    cir: '\\u25CB',\n    cirE: '\\u29C3',\n    circ: '\\u02C6',\n    circeq: '\\u2257',\n    circlearrowleft: '\\u21BA',\n    circlearrowright: '\\u21BB',\n    circledR: '\\u00AE',\n    circledS: '\\u24C8',\n    circledast: '\\u229B',\n    circledcirc: '\\u229A',\n    circleddash: '\\u229D',\n    cire: '\\u2257',\n    cirfnint: '\\u2A10',\n    cirmid: '\\u2AEF',\n    cirscir: '\\u29C2',\n    clubs: '\\u2663',\n    clubsuit: '\\u2663',\n    colon: '\\u003A',\n    colone: '\\u2254',\n    coloneq: '\\u2254',\n    comma: '\\u002C',\n    commat: '\\u0040',\n    comp: '\\u2201',\n    compfn: '\\u2218',\n    complement: '\\u2201',\n    complexes: '\\u2102',\n    cong: '\\u2245',\n    congdot: '\\u2A6D',\n    conint: '\\u222E',\n    copf: '\\uD835\\uDD54',\n    coprod: '\\u2210',\n    copy: '\\u00A9',\n    copysr: '\\u2117',\n    crarr: '\\u21B5',\n    cross: '\\u2717',\n    cscr: '\\uD835\\uDCB8',\n    csub: '\\u2ACF',\n    csube: '\\u2AD1',\n    csup: '\\u2AD0',\n    csupe: '\\u2AD2',\n    ctdot: '\\u22EF',\n    cudarrl: '\\u2938',\n    cudarrr: '\\u2935',\n    cuepr: '\\u22DE',\n    cuesc: '\\u22DF',\n    cularr: '\\u21B6',\n    cularrp: '\\u293D',\n    cup: '\\u222A',\n    cupbrcap: '\\u2A48',\n    cupcap: '\\u2A46',\n    cupcup: '\\u2A4A',\n    cupdot: '\\u228D',\n    cupor: '\\u2A45',\n    cups: '\\u222A\\uFE00',\n    curarr: '\\u21B7',\n    curarrm: '\\u293C',\n    curlyeqprec: '\\u22DE',\n    curlyeqsucc: '\\u22DF',\n    curlyvee: '\\u22CE',\n    curlywedge: '\\u22CF',\n    curren: '\\u00A4',\n    curvearrowleft: '\\u21B6',\n    curvearrowright: '\\u21B7',\n    cuvee: '\\u22CE',\n    cuwed: '\\u22CF',\n    cwconint: '\\u2232',\n    cwint: '\\u2231',\n    cylcty: '\\u232D',\n    dArr: '\\u21D3',\n    dHar: '\\u2965',\n    dagger: '\\u2020',\n    daleth: '\\u2138',\n    darr: '\\u2193',\n    dash: '\\u2010',\n    dashv: '\\u22A3',\n    dbkarow: '\\u290F',\n    dblac: '\\u02DD',\n    dcaron: '\\u010F',\n    dcy: '\\u0434',\n    dd: '\\u2146',\n    ddagger: '\\u2021',\n    ddarr: '\\u21CA',\n    ddotseq: '\\u2A77',\n    deg: '\\u00B0',\n    delta: '\\u03B4',\n    demptyv: '\\u29B1',\n    dfisht: '\\u297F',\n    dfr: '\\uD835\\uDD21',\n    dharl: '\\u21C3',\n    dharr: '\\u21C2',\n    diam: '\\u22C4',\n    diamond: '\\u22C4',\n    diamondsuit: '\\u2666',\n    diams: '\\u2666',\n    die: '\\u00A8',\n    digamma: '\\u03DD',\n    disin: '\\u22F2',\n    div: '\\u00F7',\n    divide: '\\u00F7',\n    divideontimes: '\\u22C7',\n    divonx: '\\u22C7',\n    djcy: '\\u0452',\n    dlcorn: '\\u231E',\n    dlcrop: '\\u230D',\n    dollar: '\\u0024',\n    dopf: '\\uD835\\uDD55',\n    dot: '\\u02D9',\n    doteq: '\\u2250',\n    doteqdot: '\\u2251',\n    dotminus: '\\u2238',\n    dotplus: '\\u2214',\n    dotsquare: '\\u22A1',\n    doublebarwedge: '\\u2306',\n    downarrow: '\\u2193',\n    downdownarrows: '\\u21CA',\n    downharpoonleft: '\\u21C3',\n    downharpoonright: '\\u21C2',\n    drbkarow: '\\u2910',\n    drcorn: '\\u231F',\n    drcrop: '\\u230C',\n    dscr: '\\uD835\\uDCB9',\n    dscy: '\\u0455',\n    dsol: '\\u29F6',\n    dstrok: '\\u0111',\n    dtdot: '\\u22F1',\n    dtri: '\\u25BF',\n    dtrif: '\\u25BE',\n    duarr: '\\u21F5',\n    duhar: '\\u296F',\n    dwangle: '\\u29A6',\n    dzcy: '\\u045F',\n    dzigrarr: '\\u27FF',\n    eDDot: '\\u2A77',\n    eDot: '\\u2251',\n    eacute: '\\u00E9',\n    easter: '\\u2A6E',\n    ecaron: '\\u011B',\n    ecir: '\\u2256',\n    ecirc: '\\u00EA',\n    ecolon: '\\u2255',\n    ecy: '\\u044D',\n    edot: '\\u0117',\n    ee: '\\u2147',\n    efDot: '\\u2252',\n    efr: '\\uD835\\uDD22',\n    eg: '\\u2A9A',\n    egrave: '\\u00E8',\n    egs: '\\u2A96',\n    egsdot: '\\u2A98',\n    el: '\\u2A99',\n    elinters: '\\u23E7',\n    ell: '\\u2113',\n    els: '\\u2A95',\n    elsdot: '\\u2A97',\n    emacr: '\\u0113',\n    empty: '\\u2205',\n    emptyset: '\\u2205',\n    emptyv: '\\u2205',\n    emsp13: '\\u2004',\n    emsp14: '\\u2005',\n    emsp: '\\u2003',\n    eng: '\\u014B',\n    ensp: '\\u2002',\n    eogon: '\\u0119',\n    eopf: '\\uD835\\uDD56',\n    epar: '\\u22D5',\n    eparsl: '\\u29E3',\n    eplus: '\\u2A71',\n    epsi: '\\u03B5',\n    epsilon: '\\u03B5',\n    epsiv: '\\u03F5',\n    eqcirc: '\\u2256',\n    eqcolon: '\\u2255',\n    eqsim: '\\u2242',\n    eqslantgtr: '\\u2A96',\n    eqslantless: '\\u2A95',\n    equals: '\\u003D',\n    equest: '\\u225F',\n    equiv: '\\u2261',\n    equivDD: '\\u2A78',\n    eqvparsl: '\\u29E5',\n    erDot: '\\u2253',\n    erarr: '\\u2971',\n    escr: '\\u212F',\n    esdot: '\\u2250',\n    esim: '\\u2242',\n    eta: '\\u03B7',\n    eth: '\\u00F0',\n    euml: '\\u00EB',\n    euro: '\\u20AC',\n    excl: '\\u0021',\n    exist: '\\u2203',\n    expectation: '\\u2130',\n    exponentiale: '\\u2147',\n    fallingdotseq: '\\u2252',\n    fcy: '\\u0444',\n    female: '\\u2640',\n    ffilig: '\\uFB03',\n    fflig: '\\uFB00',\n    ffllig: '\\uFB04',\n    ffr: '\\uD835\\uDD23',\n    filig: '\\uFB01',\n    fjlig: '\\u0066\\u006A',\n    flat: '\\u266D',\n    fllig: '\\uFB02',\n    fltns: '\\u25B1',\n    fnof: '\\u0192',\n    fopf: '\\uD835\\uDD57',\n    forall: '\\u2200',\n    fork: '\\u22D4',\n    forkv: '\\u2AD9',\n    fpartint: '\\u2A0D',\n    frac12: '\\u00BD',\n    frac13: '\\u2153',\n    frac14: '\\u00BC',\n    frac15: '\\u2155',\n    frac16: '\\u2159',\n    frac18: '\\u215B',\n    frac23: '\\u2154',\n    frac25: '\\u2156',\n    frac34: '\\u00BE',\n    frac35: '\\u2157',\n    frac38: '\\u215C',\n    frac45: '\\u2158',\n    frac56: '\\u215A',\n    frac58: '\\u215D',\n    frac78: '\\u215E',\n    frasl: '\\u2044',\n    frown: '\\u2322',\n    fscr: '\\uD835\\uDCBB',\n    gE: '\\u2267',\n    gEl: '\\u2A8C',\n    gacute: '\\u01F5',\n    gamma: '\\u03B3',\n    gammad: '\\u03DD',\n    gap: '\\u2A86',\n    gbreve: '\\u011F',\n    gcirc: '\\u011D',\n    gcy: '\\u0433',\n    gdot: '\\u0121',\n    ge: '\\u2265',\n    gel: '\\u22DB',\n    geq: '\\u2265',\n    geqq: '\\u2267',\n    geqslant: '\\u2A7E',\n    ges: '\\u2A7E',\n    gescc: '\\u2AA9',\n    gesdot: '\\u2A80',\n    gesdoto: '\\u2A82',\n    gesdotol: '\\u2A84',\n    gesl: '\\u22DB\\uFE00',\n    gesles: '\\u2A94',\n    gfr: '\\uD835\\uDD24',\n    gg: '\\u226B',\n    ggg: '\\u22D9',\n    gimel: '\\u2137',\n    gjcy: '\\u0453',\n    gl: '\\u2277',\n    glE: '\\u2A92',\n    gla: '\\u2AA5',\n    glj: '\\u2AA4',\n    gnE: '\\u2269',\n    gnap: '\\u2A8A',\n    gnapprox: '\\u2A8A',\n    gne: '\\u2A88',\n    gneq: '\\u2A88',\n    gneqq: '\\u2269',\n    gnsim: '\\u22E7',\n    gopf: '\\uD835\\uDD58',\n    grave: '\\u0060',\n    gscr: '\\u210A',\n    gsim: '\\u2273',\n    gsime: '\\u2A8E',\n    gsiml: '\\u2A90',\n    gt: '\\u003E',\n    gtcc: '\\u2AA7',\n    gtcir: '\\u2A7A',\n    gtdot: '\\u22D7',\n    gtlPar: '\\u2995',\n    gtquest: '\\u2A7C',\n    gtrapprox: '\\u2A86',\n    gtrarr: '\\u2978',\n    gtrdot: '\\u22D7',\n    gtreqless: '\\u22DB',\n    gtreqqless: '\\u2A8C',\n    gtrless: '\\u2277',\n    gtrsim: '\\u2273',\n    gvertneqq: '\\u2269\\uFE00',\n    gvnE: '\\u2269\\uFE00',\n    hArr: '\\u21D4',\n    hairsp: '\\u200A',\n    half: '\\u00BD',\n    hamilt: '\\u210B',\n    hardcy: '\\u044A',\n    harr: '\\u2194',\n    harrcir: '\\u2948',\n    harrw: '\\u21AD',\n    hbar: '\\u210F',\n    hcirc: '\\u0125',\n    hearts: '\\u2665',\n    heartsuit: '\\u2665',\n    hellip: '\\u2026',\n    hercon: '\\u22B9',\n    hfr: '\\uD835\\uDD25',\n    hksearow: '\\u2925',\n    hkswarow: '\\u2926',\n    hoarr: '\\u21FF',\n    homtht: '\\u223B',\n    hookleftarrow: '\\u21A9',\n    hookrightarrow: '\\u21AA',\n    hopf: '\\uD835\\uDD59',\n    horbar: '\\u2015',\n    hscr: '\\uD835\\uDCBD',\n    hslash: '\\u210F',\n    hstrok: '\\u0127',\n    hybull: '\\u2043',\n    hyphen: '\\u2010',\n    iacute: '\\u00ED',\n    ic: '\\u2063',\n    icirc: '\\u00EE',\n    icy: '\\u0438',\n    iecy: '\\u0435',\n    iexcl: '\\u00A1',\n    iff: '\\u21D4',\n    ifr: '\\uD835\\uDD26',\n    igrave: '\\u00EC',\n    ii: '\\u2148',\n    iiiint: '\\u2A0C',\n    iiint: '\\u222D',\n    iinfin: '\\u29DC',\n    iiota: '\\u2129',\n    ijlig: '\\u0133',\n    imacr: '\\u012B',\n    image: '\\u2111',\n    imagline: '\\u2110',\n    imagpart: '\\u2111',\n    imath: '\\u0131',\n    imof: '\\u22B7',\n    imped: '\\u01B5',\n    in: '\\u2208',\n    incare: '\\u2105',\n    infin: '\\u221E',\n    infintie: '\\u29DD',\n    inodot: '\\u0131',\n    int: '\\u222B',\n    intcal: '\\u22BA',\n    integers: '\\u2124',\n    intercal: '\\u22BA',\n    intlarhk: '\\u2A17',\n    intprod: '\\u2A3C',\n    iocy: '\\u0451',\n    iogon: '\\u012F',\n    iopf: '\\uD835\\uDD5A',\n    iota: '\\u03B9',\n    iprod: '\\u2A3C',\n    iquest: '\\u00BF',\n    iscr: '\\uD835\\uDCBE',\n    isin: '\\u2208',\n    isinE: '\\u22F9',\n    isindot: '\\u22F5',\n    isins: '\\u22F4',\n    isinsv: '\\u22F3',\n    isinv: '\\u2208',\n    it: '\\u2062',\n    itilde: '\\u0129',\n    iukcy: '\\u0456',\n    iuml: '\\u00EF',\n    jcirc: '\\u0135',\n    jcy: '\\u0439',\n    jfr: '\\uD835\\uDD27',\n    jmath: '\\u0237',\n    jopf: '\\uD835\\uDD5B',\n    jscr: '\\uD835\\uDCBF',\n    jsercy: '\\u0458',\n    jukcy: '\\u0454',\n    kappa: '\\u03BA',\n    kappav: '\\u03F0',\n    kcedil: '\\u0137',\n    kcy: '\\u043A',\n    kfr: '\\uD835\\uDD28',\n    kgreen: '\\u0138',\n    khcy: '\\u0445',\n    kjcy: '\\u045C',\n    kopf: '\\uD835\\uDD5C',\n    kscr: '\\uD835\\uDCC0',\n    lAarr: '\\u21DA',\n    lArr: '\\u21D0',\n    lAtail: '\\u291B',\n    lBarr: '\\u290E',\n    lE: '\\u2266',\n    lEg: '\\u2A8B',\n    lHar: '\\u2962',\n    lacute: '\\u013A',\n    laemptyv: '\\u29B4',\n    lagran: '\\u2112',\n    lambda: '\\u03BB',\n    lang: '\\u27E8',\n    langd: '\\u2991',\n    langle: '\\u27E8',\n    lap: '\\u2A85',\n    laquo: '\\u00AB',\n    larr: '\\u2190',\n    larrb: '\\u21E4',\n    larrbfs: '\\u291F',\n    larrfs: '\\u291D',\n    larrhk: '\\u21A9',\n    larrlp: '\\u21AB',\n    larrpl: '\\u2939',\n    larrsim: '\\u2973',\n    larrtl: '\\u21A2',\n    lat: '\\u2AAB',\n    latail: '\\u2919',\n    late: '\\u2AAD',\n    lates: '\\u2AAD\\uFE00',\n    lbarr: '\\u290C',\n    lbbrk: '\\u2772',\n    lbrace: '\\u007B',\n    lbrack: '\\u005B',\n    lbrke: '\\u298B',\n    lbrksld: '\\u298F',\n    lbrkslu: '\\u298D',\n    lcaron: '\\u013E',\n    lcedil: '\\u013C',\n    lceil: '\\u2308',\n    lcub: '\\u007B',\n    lcy: '\\u043B',\n    ldca: '\\u2936',\n    ldquo: '\\u201C',\n    ldquor: '\\u201E',\n    ldrdhar: '\\u2967',\n    ldrushar: '\\u294B',\n    ldsh: '\\u21B2',\n    le: '\\u2264',\n    leftarrow: '\\u2190',\n    leftarrowtail: '\\u21A2',\n    leftharpoondown: '\\u21BD',\n    leftharpoonup: '\\u21BC',\n    leftleftarrows: '\\u21C7',\n    leftrightarrow: '\\u2194',\n    leftrightarrows: '\\u21C6',\n    leftrightharpoons: '\\u21CB',\n    leftrightsquigarrow: '\\u21AD',\n    leftthreetimes: '\\u22CB',\n    leg: '\\u22DA',\n    leq: '\\u2264',\n    leqq: '\\u2266',\n    leqslant: '\\u2A7D',\n    les: '\\u2A7D',\n    lescc: '\\u2AA8',\n    lesdot: '\\u2A7F',\n    lesdoto: '\\u2A81',\n    lesdotor: '\\u2A83',\n    lesg: '\\u22DA\\uFE00',\n    lesges: '\\u2A93',\n    lessapprox: '\\u2A85',\n    lessdot: '\\u22D6',\n    lesseqgtr: '\\u22DA',\n    lesseqqgtr: '\\u2A8B',\n    lessgtr: '\\u2276',\n    lesssim: '\\u2272',\n    lfisht: '\\u297C',\n    lfloor: '\\u230A',\n    lfr: '\\uD835\\uDD29',\n    lg: '\\u2276',\n    lgE: '\\u2A91',\n    lhard: '\\u21BD',\n    lharu: '\\u21BC',\n    lharul: '\\u296A',\n    lhblk: '\\u2584',\n    ljcy: '\\u0459',\n    ll: '\\u226A',\n    llarr: '\\u21C7',\n    llcorner: '\\u231E',\n    llhard: '\\u296B',\n    lltri: '\\u25FA',\n    lmidot: '\\u0140',\n    lmoust: '\\u23B0',\n    lmoustache: '\\u23B0',\n    lnE: '\\u2268',\n    lnap: '\\u2A89',\n    lnapprox: '\\u2A89',\n    lne: '\\u2A87',\n    lneq: '\\u2A87',\n    lneqq: '\\u2268',\n    lnsim: '\\u22E6',\n    loang: '\\u27EC',\n    loarr: '\\u21FD',\n    lobrk: '\\u27E6',\n    longleftarrow: '\\u27F5',\n    longleftrightarrow: '\\u27F7',\n    longmapsto: '\\u27FC',\n    longrightarrow: '\\u27F6',\n    looparrowleft: '\\u21AB',\n    looparrowright: '\\u21AC',\n    lopar: '\\u2985',\n    lopf: '\\uD835\\uDD5D',\n    loplus: '\\u2A2D',\n    lotimes: '\\u2A34',\n    lowast: '\\u2217',\n    lowbar: '\\u005F',\n    loz: '\\u25CA',\n    lozenge: '\\u25CA',\n    lozf: '\\u29EB',\n    lpar: '\\u0028',\n    lparlt: '\\u2993',\n    lrarr: '\\u21C6',\n    lrcorner: '\\u231F',\n    lrhar: '\\u21CB',\n    lrhard: '\\u296D',\n    lrm: '\\u200E',\n    lrtri: '\\u22BF',\n    lsaquo: '\\u2039',\n    lscr: '\\uD835\\uDCC1',\n    lsh: '\\u21B0',\n    lsim: '\\u2272',\n    lsime: '\\u2A8D',\n    lsimg: '\\u2A8F',\n    lsqb: '\\u005B',\n    lsquo: '\\u2018',\n    lsquor: '\\u201A',\n    lstrok: '\\u0142',\n    lt: '\\u003C',\n    ltcc: '\\u2AA6',\n    ltcir: '\\u2A79',\n    ltdot: '\\u22D6',\n    lthree: '\\u22CB',\n    ltimes: '\\u22C9',\n    ltlarr: '\\u2976',\n    ltquest: '\\u2A7B',\n    ltrPar: '\\u2996',\n    ltri: '\\u25C3',\n    ltrie: '\\u22B4',\n    ltrif: '\\u25C2',\n    lurdshar: '\\u294A',\n    luruhar: '\\u2966',\n    lvertneqq: '\\u2268\\uFE00',\n    lvnE: '\\u2268\\uFE00',\n    mDDot: '\\u223A',\n    macr: '\\u00AF',\n    male: '\\u2642',\n    malt: '\\u2720',\n    maltese: '\\u2720',\n    map: '\\u21A6',\n    mapsto: '\\u21A6',\n    mapstodown: '\\u21A7',\n    mapstoleft: '\\u21A4',\n    mapstoup: '\\u21A5',\n    marker: '\\u25AE',\n    mcomma: '\\u2A29',\n    mcy: '\\u043C',\n    mdash: '\\u2014',\n    measuredangle: '\\u2221',\n    mfr: '\\uD835\\uDD2A',\n    mho: '\\u2127',\n    micro: '\\u00B5',\n    mid: '\\u2223',\n    midast: '\\u002A',\n    midcir: '\\u2AF0',\n    middot: '\\u00B7',\n    minus: '\\u2212',\n    minusb: '\\u229F',\n    minusd: '\\u2238',\n    minusdu: '\\u2A2A',\n    mlcp: '\\u2ADB',\n    mldr: '\\u2026',\n    mnplus: '\\u2213',\n    models: '\\u22A7',\n    mopf: '\\uD835\\uDD5E',\n    mp: '\\u2213',\n    mscr: '\\uD835\\uDCC2',\n    mstpos: '\\u223E',\n    mu: '\\u03BC',\n    multimap: '\\u22B8',\n    mumap: '\\u22B8',\n    nGg: '\\u22D9\\u0338',\n    nGt: '\\u226B\\u20D2',\n    nGtv: '\\u226B\\u0338',\n    nLeftarrow: '\\u21CD',\n    nLeftrightarrow: '\\u21CE',\n    nLl: '\\u22D8\\u0338',\n    nLt: '\\u226A\\u20D2',\n    nLtv: '\\u226A\\u0338',\n    nRightarrow: '\\u21CF',\n    nVDash: '\\u22AF',\n    nVdash: '\\u22AE',\n    nabla: '\\u2207',\n    nacute: '\\u0144',\n    nang: '\\u2220\\u20D2',\n    nap: '\\u2249',\n    napE: '\\u2A70\\u0338',\n    napid: '\\u224B\\u0338',\n    napos: '\\u0149',\n    napprox: '\\u2249',\n    natur: '\\u266E',\n    natural: '\\u266E',\n    naturals: '\\u2115',\n    nbsp: '\\u00A0',\n    nbump: '\\u224E\\u0338',\n    nbumpe: '\\u224F\\u0338',\n    ncap: '\\u2A43',\n    ncaron: '\\u0148',\n    ncedil: '\\u0146',\n    ncong: '\\u2247',\n    ncongdot: '\\u2A6D\\u0338',\n    ncup: '\\u2A42',\n    ncy: '\\u043D',\n    ndash: '\\u2013',\n    ne: '\\u2260',\n    neArr: '\\u21D7',\n    nearhk: '\\u2924',\n    nearr: '\\u2197',\n    nearrow: '\\u2197',\n    nedot: '\\u2250\\u0338',\n    nequiv: '\\u2262',\n    nesear: '\\u2928',\n    nesim: '\\u2242\\u0338',\n    nexist: '\\u2204',\n    nexists: '\\u2204',\n    nfr: '\\uD835\\uDD2B',\n    ngE: '\\u2267\\u0338',\n    nge: '\\u2271',\n    ngeq: '\\u2271',\n    ngeqq: '\\u2267\\u0338',\n    ngeqslant: '\\u2A7E\\u0338',\n    nges: '\\u2A7E\\u0338',\n    ngsim: '\\u2275',\n    ngt: '\\u226F',\n    ngtr: '\\u226F',\n    nhArr: '\\u21CE',\n    nharr: '\\u21AE',\n    nhpar: '\\u2AF2',\n    ni: '\\u220B',\n    nis: '\\u22FC',\n    nisd: '\\u22FA',\n    niv: '\\u220B',\n    njcy: '\\u045A',\n    nlArr: '\\u21CD',\n    nlE: '\\u2266\\u0338',\n    nlarr: '\\u219A',\n    nldr: '\\u2025',\n    nle: '\\u2270',\n    nleftarrow: '\\u219A',\n    nleftrightarrow: '\\u21AE',\n    nleq: '\\u2270',\n    nleqq: '\\u2266\\u0338',\n    nleqslant: '\\u2A7D\\u0338',\n    nles: '\\u2A7D\\u0338',\n    nless: '\\u226E',\n    nlsim: '\\u2274',\n    nlt: '\\u226E',\n    nltri: '\\u22EA',\n    nltrie: '\\u22EC',\n    nmid: '\\u2224',\n    nopf: '\\uD835\\uDD5F',\n    not: '\\u00AC',\n    notin: '\\u2209',\n    notinE: '\\u22F9\\u0338',\n    notindot: '\\u22F5\\u0338',\n    notinva: '\\u2209',\n    notinvb: '\\u22F7',\n    notinvc: '\\u22F6',\n    notni: '\\u220C',\n    notniva: '\\u220C',\n    notnivb: '\\u22FE',\n    notnivc: '\\u22FD',\n    npar: '\\u2226',\n    nparallel: '\\u2226',\n    nparsl: '\\u2AFD\\u20E5',\n    npart: '\\u2202\\u0338',\n    npolint: '\\u2A14',\n    npr: '\\u2280',\n    nprcue: '\\u22E0',\n    npre: '\\u2AAF\\u0338',\n    nprec: '\\u2280',\n    npreceq: '\\u2AAF\\u0338',\n    nrArr: '\\u21CF',\n    nrarr: '\\u219B',\n    nrarrc: '\\u2933\\u0338',\n    nrarrw: '\\u219D\\u0338',\n    nrightarrow: '\\u219B',\n    nrtri: '\\u22EB',\n    nrtrie: '\\u22ED',\n    nsc: '\\u2281',\n    nsccue: '\\u22E1',\n    nsce: '\\u2AB0\\u0338',\n    nscr: '\\uD835\\uDCC3',\n    nshortmid: '\\u2224',\n    nshortparallel: '\\u2226',\n    nsim: '\\u2241',\n    nsime: '\\u2244',\n    nsimeq: '\\u2244',\n    nsmid: '\\u2224',\n    nspar: '\\u2226',\n    nsqsube: '\\u22E2',\n    nsqsupe: '\\u22E3',\n    nsub: '\\u2284',\n    nsubE: '\\u2AC5\\u0338',\n    nsube: '\\u2288',\n    nsubset: '\\u2282\\u20D2',\n    nsubseteq: '\\u2288',\n    nsubseteqq: '\\u2AC5\\u0338',\n    nsucc: '\\u2281',\n    nsucceq: '\\u2AB0\\u0338',\n    nsup: '\\u2285',\n    nsupE: '\\u2AC6\\u0338',\n    nsupe: '\\u2289',\n    nsupset: '\\u2283\\u20D2',\n    nsupseteq: '\\u2289',\n    nsupseteqq: '\\u2AC6\\u0338',\n    ntgl: '\\u2279',\n    ntilde: '\\u00F1',\n    ntlg: '\\u2278',\n    ntriangleleft: '\\u22EA',\n    ntrianglelefteq: '\\u22EC',\n    ntriangleright: '\\u22EB',\n    ntrianglerighteq: '\\u22ED',\n    nu: '\\u03BD',\n    num: '\\u0023',\n    numero: '\\u2116',\n    numsp: '\\u2007',\n    nvDash: '\\u22AD',\n    nvHarr: '\\u2904',\n    nvap: '\\u224D\\u20D2',\n    nvdash: '\\u22AC',\n    nvge: '\\u2265\\u20D2',\n    nvgt: '\\u003E\\u20D2',\n    nvinfin: '\\u29DE',\n    nvlArr: '\\u2902',\n    nvle: '\\u2264\\u20D2',\n    nvlt: '\\u003C\\u20D2',\n    nvltrie: '\\u22B4\\u20D2',\n    nvrArr: '\\u2903',\n    nvrtrie: '\\u22B5\\u20D2',\n    nvsim: '\\u223C\\u20D2',\n    nwArr: '\\u21D6',\n    nwarhk: '\\u2923',\n    nwarr: '\\u2196',\n    nwarrow: '\\u2196',\n    nwnear: '\\u2927',\n    oS: '\\u24C8',\n    oacute: '\\u00F3',\n    oast: '\\u229B',\n    ocir: '\\u229A',\n    ocirc: '\\u00F4',\n    ocy: '\\u043E',\n    odash: '\\u229D',\n    odblac: '\\u0151',\n    odiv: '\\u2A38',\n    odot: '\\u2299',\n    odsold: '\\u29BC',\n    oelig: '\\u0153',\n    ofcir: '\\u29BF',\n    ofr: '\\uD835\\uDD2C',\n    ogon: '\\u02DB',\n    ograve: '\\u00F2',\n    ogt: '\\u29C1',\n    ohbar: '\\u29B5',\n    ohm: '\\u03A9',\n    oint: '\\u222E',\n    olarr: '\\u21BA',\n    olcir: '\\u29BE',\n    olcross: '\\u29BB',\n    oline: '\\u203E',\n    olt: '\\u29C0',\n    omacr: '\\u014D',\n    omega: '\\u03C9',\n    omicron: '\\u03BF',\n    omid: '\\u29B6',\n    ominus: '\\u2296',\n    oopf: '\\uD835\\uDD60',\n    opar: '\\u29B7',\n    operp: '\\u29B9',\n    oplus: '\\u2295',\n    or: '\\u2228',\n    orarr: '\\u21BB',\n    ord: '\\u2A5D',\n    order: '\\u2134',\n    orderof: '\\u2134',\n    ordf: '\\u00AA',\n    ordm: '\\u00BA',\n    origof: '\\u22B6',\n    oror: '\\u2A56',\n    orslope: '\\u2A57',\n    orv: '\\u2A5B',\n    oscr: '\\u2134',\n    oslash: '\\u00F8',\n    osol: '\\u2298',\n    otilde: '\\u00F5',\n    otimes: '\\u2297',\n    otimesas: '\\u2A36',\n    ouml: '\\u00F6',\n    ovbar: '\\u233D',\n    par: '\\u2225',\n    para: '\\u00B6',\n    parallel: '\\u2225',\n    parsim: '\\u2AF3',\n    parsl: '\\u2AFD',\n    part: '\\u2202',\n    pcy: '\\u043F',\n    percnt: '\\u0025',\n    period: '\\u002E',\n    permil: '\\u2030',\n    perp: '\\u22A5',\n    pertenk: '\\u2031',\n    pfr: '\\uD835\\uDD2D',\n    phi: '\\u03C6',\n    phiv: '\\u03D5',\n    phmmat: '\\u2133',\n    phone: '\\u260E',\n    pi: '\\u03C0',\n    pitchfork: '\\u22D4',\n    piv: '\\u03D6',\n    planck: '\\u210F',\n    planckh: '\\u210E',\n    plankv: '\\u210F',\n    plus: '\\u002B',\n    plusacir: '\\u2A23',\n    plusb: '\\u229E',\n    pluscir: '\\u2A22',\n    plusdo: '\\u2214',\n    plusdu: '\\u2A25',\n    pluse: '\\u2A72',\n    plusmn: '\\u00B1',\n    plussim: '\\u2A26',\n    plustwo: '\\u2A27',\n    pm: '\\u00B1',\n    pointint: '\\u2A15',\n    popf: '\\uD835\\uDD61',\n    pound: '\\u00A3',\n    pr: '\\u227A',\n    prE: '\\u2AB3',\n    prap: '\\u2AB7',\n    prcue: '\\u227C',\n    pre: '\\u2AAF',\n    prec: '\\u227A',\n    precapprox: '\\u2AB7',\n    preccurlyeq: '\\u227C',\n    preceq: '\\u2AAF',\n    precnapprox: '\\u2AB9',\n    precneqq: '\\u2AB5',\n    precnsim: '\\u22E8',\n    precsim: '\\u227E',\n    prime: '\\u2032',\n    primes: '\\u2119',\n    prnE: '\\u2AB5',\n    prnap: '\\u2AB9',\n    prnsim: '\\u22E8',\n    prod: '\\u220F',\n    profalar: '\\u232E',\n    profline: '\\u2312',\n    profsurf: '\\u2313',\n    prop: '\\u221D',\n    propto: '\\u221D',\n    prsim: '\\u227E',\n    prurel: '\\u22B0',\n    pscr: '\\uD835\\uDCC5',\n    psi: '\\u03C8',\n    puncsp: '\\u2008',\n    qfr: '\\uD835\\uDD2E',\n    qint: '\\u2A0C',\n    qopf: '\\uD835\\uDD62',\n    qprime: '\\u2057',\n    qscr: '\\uD835\\uDCC6',\n    quaternions: '\\u210D',\n    quatint: '\\u2A16',\n    quest: '\\u003F',\n    questeq: '\\u225F',\n    quot: '\\u0022',\n    rAarr: '\\u21DB',\n    rArr: '\\u21D2',\n    rAtail: '\\u291C',\n    rBarr: '\\u290F',\n    rHar: '\\u2964',\n    race: '\\u223D\\u0331',\n    racute: '\\u0155',\n    radic: '\\u221A',\n    raemptyv: '\\u29B3',\n    rang: '\\u27E9',\n    rangd: '\\u2992',\n    range: '\\u29A5',\n    rangle: '\\u27E9',\n    raquo: '\\u00BB',\n    rarr: '\\u2192',\n    rarrap: '\\u2975',\n    rarrb: '\\u21E5',\n    rarrbfs: '\\u2920',\n    rarrc: '\\u2933',\n    rarrfs: '\\u291E',\n    rarrhk: '\\u21AA',\n    rarrlp: '\\u21AC',\n    rarrpl: '\\u2945',\n    rarrsim: '\\u2974',\n    rarrtl: '\\u21A3',\n    rarrw: '\\u219D',\n    ratail: '\\u291A',\n    ratio: '\\u2236',\n    rationals: '\\u211A',\n    rbarr: '\\u290D',\n    rbbrk: '\\u2773',\n    rbrace: '\\u007D',\n    rbrack: '\\u005D',\n    rbrke: '\\u298C',\n    rbrksld: '\\u298E',\n    rbrkslu: '\\u2990',\n    rcaron: '\\u0159',\n    rcedil: '\\u0157',\n    rceil: '\\u2309',\n    rcub: '\\u007D',\n    rcy: '\\u0440',\n    rdca: '\\u2937',\n    rdldhar: '\\u2969',\n    rdquo: '\\u201D',\n    rdquor: '\\u201D',\n    rdsh: '\\u21B3',\n    real: '\\u211C',\n    realine: '\\u211B',\n    realpart: '\\u211C',\n    reals: '\\u211D',\n    rect: '\\u25AD',\n    reg: '\\u00AE',\n    rfisht: '\\u297D',\n    rfloor: '\\u230B',\n    rfr: '\\uD835\\uDD2F',\n    rhard: '\\u21C1',\n    rharu: '\\u21C0',\n    rharul: '\\u296C',\n    rho: '\\u03C1',\n    rhov: '\\u03F1',\n    rightarrow: '\\u2192',\n    rightarrowtail: '\\u21A3',\n    rightharpoondown: '\\u21C1',\n    rightharpoonup: '\\u21C0',\n    rightleftarrows: '\\u21C4',\n    rightleftharpoons: '\\u21CC',\n    rightrightarrows: '\\u21C9',\n    rightsquigarrow: '\\u219D',\n    rightthreetimes: '\\u22CC',\n    ring: '\\u02DA',\n    risingdotseq: '\\u2253',\n    rlarr: '\\u21C4',\n    rlhar: '\\u21CC',\n    rlm: '\\u200F',\n    rmoust: '\\u23B1',\n    rmoustache: '\\u23B1',\n    rnmid: '\\u2AEE',\n    roang: '\\u27ED',\n    roarr: '\\u21FE',\n    robrk: '\\u27E7',\n    ropar: '\\u2986',\n    ropf: '\\uD835\\uDD63',\n    roplus: '\\u2A2E',\n    rotimes: '\\u2A35',\n    rpar: '\\u0029',\n    rpargt: '\\u2994',\n    rppolint: '\\u2A12',\n    rrarr: '\\u21C9',\n    rsaquo: '\\u203A',\n    rscr: '\\uD835\\uDCC7',\n    rsh: '\\u21B1',\n    rsqb: '\\u005D',\n    rsquo: '\\u2019',\n    rsquor: '\\u2019',\n    rthree: '\\u22CC',\n    rtimes: '\\u22CA',\n    rtri: '\\u25B9',\n    rtrie: '\\u22B5',\n    rtrif: '\\u25B8',\n    rtriltri: '\\u29CE',\n    ruluhar: '\\u2968',\n    rx: '\\u211E',\n    sacute: '\\u015B',\n    sbquo: '\\u201A',\n    sc: '\\u227B',\n    scE: '\\u2AB4',\n    scap: '\\u2AB8',\n    scaron: '\\u0161',\n    sccue: '\\u227D',\n    sce: '\\u2AB0',\n    scedil: '\\u015F',\n    scirc: '\\u015D',\n    scnE: '\\u2AB6',\n    scnap: '\\u2ABA',\n    scnsim: '\\u22E9',\n    scpolint: '\\u2A13',\n    scsim: '\\u227F',\n    scy: '\\u0441',\n    sdot: '\\u22C5',\n    sdotb: '\\u22A1',\n    sdote: '\\u2A66',\n    seArr: '\\u21D8',\n    searhk: '\\u2925',\n    searr: '\\u2198',\n    searrow: '\\u2198',\n    sect: '\\u00A7',\n    semi: '\\u003B',\n    seswar: '\\u2929',\n    setminus: '\\u2216',\n    setmn: '\\u2216',\n    sext: '\\u2736',\n    sfr: '\\uD835\\uDD30',\n    sfrown: '\\u2322',\n    sharp: '\\u266F',\n    shchcy: '\\u0449',\n    shcy: '\\u0448',\n    shortmid: '\\u2223',\n    shortparallel: '\\u2225',\n    shy: '\\u00AD',\n    sigma: '\\u03C3',\n    sigmaf: '\\u03C2',\n    sigmav: '\\u03C2',\n    sim: '\\u223C',\n    simdot: '\\u2A6A',\n    sime: '\\u2243',\n    simeq: '\\u2243',\n    simg: '\\u2A9E',\n    simgE: '\\u2AA0',\n    siml: '\\u2A9D',\n    simlE: '\\u2A9F',\n    simne: '\\u2246',\n    simplus: '\\u2A24',\n    simrarr: '\\u2972',\n    slarr: '\\u2190',\n    smallsetminus: '\\u2216',\n    smashp: '\\u2A33',\n    smeparsl: '\\u29E4',\n    smid: '\\u2223',\n    smile: '\\u2323',\n    smt: '\\u2AAA',\n    smte: '\\u2AAC',\n    smtes: '\\u2AAC\\uFE00',\n    softcy: '\\u044C',\n    sol: '\\u002F',\n    solb: '\\u29C4',\n    solbar: '\\u233F',\n    sopf: '\\uD835\\uDD64',\n    spades: '\\u2660',\n    spadesuit: '\\u2660',\n    spar: '\\u2225',\n    sqcap: '\\u2293',\n    sqcaps: '\\u2293\\uFE00',\n    sqcup: '\\u2294',\n    sqcups: '\\u2294\\uFE00',\n    sqsub: '\\u228F',\n    sqsube: '\\u2291',\n    sqsubset: '\\u228F',\n    sqsubseteq: '\\u2291',\n    sqsup: '\\u2290',\n    sqsupe: '\\u2292',\n    sqsupset: '\\u2290',\n    sqsupseteq: '\\u2292',\n    squ: '\\u25A1',\n    square: '\\u25A1',\n    squarf: '\\u25AA',\n    squf: '\\u25AA',\n    srarr: '\\u2192',\n    sscr: '\\uD835\\uDCC8',\n    ssetmn: '\\u2216',\n    ssmile: '\\u2323',\n    sstarf: '\\u22C6',\n    star: '\\u2606',\n    starf: '\\u2605',\n    straightepsilon: '\\u03F5',\n    straightphi: '\\u03D5',\n    strns: '\\u00AF',\n    sub: '\\u2282',\n    subE: '\\u2AC5',\n    subdot: '\\u2ABD',\n    sube: '\\u2286',\n    subedot: '\\u2AC3',\n    submult: '\\u2AC1',\n    subnE: '\\u2ACB',\n    subne: '\\u228A',\n    subplus: '\\u2ABF',\n    subrarr: '\\u2979',\n    subset: '\\u2282',\n    subseteq: '\\u2286',\n    subseteqq: '\\u2AC5',\n    subsetneq: '\\u228A',\n    subsetneqq: '\\u2ACB',\n    subsim: '\\u2AC7',\n    subsub: '\\u2AD5',\n    subsup: '\\u2AD3',\n    succ: '\\u227B',\n    succapprox: '\\u2AB8',\n    succcurlyeq: '\\u227D',\n    succeq: '\\u2AB0',\n    succnapprox: '\\u2ABA',\n    succneqq: '\\u2AB6',\n    succnsim: '\\u22E9',\n    succsim: '\\u227F',\n    sum: '\\u2211',\n    sung: '\\u266A',\n    sup1: '\\u00B9',\n    sup2: '\\u00B2',\n    sup3: '\\u00B3',\n    sup: '\\u2283',\n    supE: '\\u2AC6',\n    supdot: '\\u2ABE',\n    supdsub: '\\u2AD8',\n    supe: '\\u2287',\n    supedot: '\\u2AC4',\n    suphsol: '\\u27C9',\n    suphsub: '\\u2AD7',\n    suplarr: '\\u297B',\n    supmult: '\\u2AC2',\n    supnE: '\\u2ACC',\n    supne: '\\u228B',\n    supplus: '\\u2AC0',\n    supset: '\\u2283',\n    supseteq: '\\u2287',\n    supseteqq: '\\u2AC6',\n    supsetneq: '\\u228B',\n    supsetneqq: '\\u2ACC',\n    supsim: '\\u2AC8',\n    supsub: '\\u2AD4',\n    supsup: '\\u2AD6',\n    swArr: '\\u21D9',\n    swarhk: '\\u2926',\n    swarr: '\\u2199',\n    swarrow: '\\u2199',\n    swnwar: '\\u292A',\n    szlig: '\\u00DF',\n    target: '\\u2316',\n    tau: '\\u03C4',\n    tbrk: '\\u23B4',\n    tcaron: '\\u0165',\n    tcedil: '\\u0163',\n    tcy: '\\u0442',\n    tdot: '\\u20DB',\n    telrec: '\\u2315',\n    tfr: '\\uD835\\uDD31',\n    there4: '\\u2234',\n    therefore: '\\u2234',\n    theta: '\\u03B8',\n    thetasym: '\\u03D1',\n    thetav: '\\u03D1',\n    thickapprox: '\\u2248',\n    thicksim: '\\u223C',\n    thinsp: '\\u2009',\n    thkap: '\\u2248',\n    thksim: '\\u223C',\n    thorn: '\\u00FE',\n    tilde: '\\u02DC',\n    times: '\\u00D7',\n    timesb: '\\u22A0',\n    timesbar: '\\u2A31',\n    timesd: '\\u2A30',\n    tint: '\\u222D',\n    toea: '\\u2928',\n    top: '\\u22A4',\n    topbot: '\\u2336',\n    topcir: '\\u2AF1',\n    topf: '\\uD835\\uDD65',\n    topfork: '\\u2ADA',\n    tosa: '\\u2929',\n    tprime: '\\u2034',\n    trade: '\\u2122',\n    triangle: '\\u25B5',\n    triangledown: '\\u25BF',\n    triangleleft: '\\u25C3',\n    trianglelefteq: '\\u22B4',\n    triangleq: '\\u225C',\n    triangleright: '\\u25B9',\n    trianglerighteq: '\\u22B5',\n    tridot: '\\u25EC',\n    trie: '\\u225C',\n    triminus: '\\u2A3A',\n    triplus: '\\u2A39',\n    trisb: '\\u29CD',\n    tritime: '\\u2A3B',\n    trpezium: '\\u23E2',\n    tscr: '\\uD835\\uDCC9',\n    tscy: '\\u0446',\n    tshcy: '\\u045B',\n    tstrok: '\\u0167',\n    twixt: '\\u226C',\n    twoheadleftarrow: '\\u219E',\n    twoheadrightarrow: '\\u21A0',\n    uArr: '\\u21D1',\n    uHar: '\\u2963',\n    uacute: '\\u00FA',\n    uarr: '\\u2191',\n    ubrcy: '\\u045E',\n    ubreve: '\\u016D',\n    ucirc: '\\u00FB',\n    ucy: '\\u0443',\n    udarr: '\\u21C5',\n    udblac: '\\u0171',\n    udhar: '\\u296E',\n    ufisht: '\\u297E',\n    ufr: '\\uD835\\uDD32',\n    ugrave: '\\u00F9',\n    uharl: '\\u21BF',\n    uharr: '\\u21BE',\n    uhblk: '\\u2580',\n    ulcorn: '\\u231C',\n    ulcorner: '\\u231C',\n    ulcrop: '\\u230F',\n    ultri: '\\u25F8',\n    umacr: '\\u016B',\n    uml: '\\u00A8',\n    uogon: '\\u0173',\n    uopf: '\\uD835\\uDD66',\n    uparrow: '\\u2191',\n    updownarrow: '\\u2195',\n    upharpoonleft: '\\u21BF',\n    upharpoonright: '\\u21BE',\n    uplus: '\\u228E',\n    upsi: '\\u03C5',\n    upsih: '\\u03D2',\n    upsilon: '\\u03C5',\n    upuparrows: '\\u21C8',\n    urcorn: '\\u231D',\n    urcorner: '\\u231D',\n    urcrop: '\\u230E',\n    uring: '\\u016F',\n    urtri: '\\u25F9',\n    uscr: '\\uD835\\uDCCA',\n    utdot: '\\u22F0',\n    utilde: '\\u0169',\n    utri: '\\u25B5',\n    utrif: '\\u25B4',\n    uuarr: '\\u21C8',\n    uuml: '\\u00FC',\n    uwangle: '\\u29A7',\n    vArr: '\\u21D5',\n    vBar: '\\u2AE8',\n    vBarv: '\\u2AE9',\n    vDash: '\\u22A8',\n    vangrt: '\\u299C',\n    varepsilon: '\\u03F5',\n    varkappa: '\\u03F0',\n    varnothing: '\\u2205',\n    varphi: '\\u03D5',\n    varpi: '\\u03D6',\n    varpropto: '\\u221D',\n    varr: '\\u2195',\n    varrho: '\\u03F1',\n    varsigma: '\\u03C2',\n    varsubsetneq: '\\u228A\\uFE00',\n    varsubsetneqq: '\\u2ACB\\uFE00',\n    varsupsetneq: '\\u228B\\uFE00',\n    varsupsetneqq: '\\u2ACC\\uFE00',\n    vartheta: '\\u03D1',\n    vartriangleleft: '\\u22B2',\n    vartriangleright: '\\u22B3',\n    vcy: '\\u0432',\n    vdash: '\\u22A2',\n    vee: '\\u2228',\n    veebar: '\\u22BB',\n    veeeq: '\\u225A',\n    vellip: '\\u22EE',\n    verbar: '\\u007C',\n    vert: '\\u007C',\n    vfr: '\\uD835\\uDD33',\n    vltri: '\\u22B2',\n    vnsub: '\\u2282\\u20D2',\n    vnsup: '\\u2283\\u20D2',\n    vopf: '\\uD835\\uDD67',\n    vprop: '\\u221D',\n    vrtri: '\\u22B3',\n    vscr: '\\uD835\\uDCCB',\n    vsubnE: '\\u2ACB\\uFE00',\n    vsubne: '\\u228A\\uFE00',\n    vsupnE: '\\u2ACC\\uFE00',\n    vsupne: '\\u228B\\uFE00',\n    vzigzag: '\\u299A',\n    wcirc: '\\u0175',\n    wedbar: '\\u2A5F',\n    wedge: '\\u2227',\n    wedgeq: '\\u2259',\n    weierp: '\\u2118',\n    wfr: '\\uD835\\uDD34',\n    wopf: '\\uD835\\uDD68',\n    wp: '\\u2118',\n    wr: '\\u2240',\n    wreath: '\\u2240',\n    wscr: '\\uD835\\uDCCC',\n    xcap: '\\u22C2',\n    xcirc: '\\u25EF',\n    xcup: '\\u22C3',\n    xdtri: '\\u25BD',\n    xfr: '\\uD835\\uDD35',\n    xhArr: '\\u27FA',\n    xharr: '\\u27F7',\n    xi: '\\u03BE',\n    xlArr: '\\u27F8',\n    xlarr: '\\u27F5',\n    xmap: '\\u27FC',\n    xnis: '\\u22FB',\n    xodot: '\\u2A00',\n    xopf: '\\uD835\\uDD69',\n    xoplus: '\\u2A01',\n    xotime: '\\u2A02',\n    xrArr: '\\u27F9',\n    xrarr: '\\u27F6',\n    xscr: '\\uD835\\uDCCD',\n    xsqcup: '\\u2A06',\n    xuplus: '\\u2A04',\n    xutri: '\\u25B3',\n    xvee: '\\u22C1',\n    xwedge: '\\u22C0',\n    yacute: '\\u00FD',\n    yacy: '\\u044F',\n    ycirc: '\\u0177',\n    ycy: '\\u044B',\n    yen: '\\u00A5',\n    yfr: '\\uD835\\uDD36',\n    yicy: '\\u0457',\n    yopf: '\\uD835\\uDD6A',\n    yscr: '\\uD835\\uDCCE',\n    yucy: '\\u044E',\n    yuml: '\\u00FF',\n    zacute: '\\u017A',\n    zcaron: '\\u017E',\n    zcy: '\\u0437',\n    zdot: '\\u017C',\n    zeetrf: '\\u2128',\n    zeta: '\\u03B6',\n    zfr: '\\uD835\\uDD37',\n    zhcy: '\\u0436',\n    zigrarr: '\\u21DD',\n    zopf: '\\uD835\\uDD6B',\n    zscr: '\\uD835\\uDCCF',\n    zwj: '\\u200D',\n    zwnj: '\\u200C',\n};\nconst decodeMap = {\n    '0': 65533,\n    '128': 8364,\n    '130': 8218,\n    '131': 402,\n    '132': 8222,\n    '133': 8230,\n    '134': 8224,\n    '135': 8225,\n    '136': 710,\n    '137': 8240,\n    '138': 352,\n    '139': 8249,\n    '140': 338,\n    '142': 381,\n    '145': 8216,\n    '146': 8217,\n    '147': 8220,\n    '148': 8221,\n    '149': 8226,\n    '150': 8211,\n    '151': 8212,\n    '152': 732,\n    '153': 8482,\n    '154': 353,\n    '155': 8250,\n    '156': 339,\n    '158': 382,\n    '159': 376,\n};\nfunction decodeHTMLStrict(text) {\n    return text.replace(/&(?:[a-zA-Z]+|#[xX][\\da-fA-F]+|#\\d+);/g, (key) => {\n        if (key.charAt(1) === '#') {\n            const secondChar = key.charAt(2);\n            const codePoint = secondChar === 'X' || secondChar === 'x' ? parseInt(key.slice(3), 16) : parseInt(key.slice(2), 10);\n            return decodeCodePoint(codePoint);\n        }\n        return getOwnProperty(entities, key.slice(1, -1)) ?? key;\n    });\n}\nfunction decodeCodePoint(codePoint) {\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return '\\uFFFD';\n    }\n    return String.fromCodePoint(getOwnProperty(decodeMap, codePoint) ?? codePoint);\n}\n\nfunction scanJSXAttributeValue(parser, context) {\n    parser.startIndex = parser.tokenIndex = parser.index;\n    parser.startColumn = parser.tokenColumn = parser.column;\n    parser.startLine = parser.tokenLine = parser.line;\n    parser.setToken(CharTypes[parser.currentChar] & 8192\n        ? scanJSXString(parser)\n        : scanSingleToken(parser, context, 0));\n    return parser.getToken();\n}\nfunction scanJSXString(parser) {\n    const quote = parser.currentChar;\n    let char = advanceChar(parser);\n    const start = parser.index;\n    while (char !== quote) {\n        if (parser.index >= parser.end)\n            parser.report(16);\n        char = advanceChar(parser);\n    }\n    if (char !== quote)\n        parser.report(16);\n    parser.tokenValue = parser.source.slice(start, parser.index);\n    advanceChar(parser);\n    if (parser.options.raw)\n        parser.tokenRaw = parser.source.slice(parser.tokenIndex, parser.index);\n    return 134283267;\n}\nfunction nextJSXToken(parser) {\n    parser.startIndex = parser.tokenIndex = parser.index;\n    parser.startColumn = parser.tokenColumn = parser.column;\n    parser.startLine = parser.tokenLine = parser.line;\n    if (parser.index >= parser.end) {\n        parser.setToken(1048576);\n        return;\n    }\n    if (parser.currentChar === 60) {\n        advanceChar(parser);\n        parser.setToken(8456256);\n        return;\n    }\n    if (parser.currentChar === 123) {\n        advanceChar(parser);\n        parser.setToken(2162700);\n        return;\n    }\n    let state = 0;\n    while (parser.index < parser.end) {\n        const type = CharTypes[parser.source.charCodeAt(parser.index)];\n        if (type & 1024) {\n            state |= 1 | 4;\n            scanNewLine(parser);\n        }\n        else if (type & 2048) {\n            consumeLineFeed(parser, state);\n            state = (state & -5) | 1;\n        }\n        else {\n            advanceChar(parser);\n        }\n        if (CharTypes[parser.currentChar] & 16384)\n            break;\n    }\n    if (parser.tokenIndex === parser.index)\n        parser.report(0);\n    const raw = parser.source.slice(parser.tokenIndex, parser.index);\n    if (parser.options.raw)\n        parser.tokenRaw = raw;\n    parser.tokenValue = decodeHTMLStrict(raw);\n    parser.setToken(137);\n}\nfunction rescanJSXIdentifier(parser) {\n    if ((parser.getToken() & 143360) === 143360) {\n        const { index } = parser;\n        let char = parser.currentChar;\n        while (CharTypes[char] & (32768 | 2)) {\n            char = advanceChar(parser);\n        }\n        parser.tokenValue += parser.source.slice(index, parser.index);\n        parser.setToken(208897, true);\n    }\n    return parser.getToken();\n}\n\nclass Scope {\n    parser;\n    type;\n    parent;\n    scopeError;\n    variableBindings = new Map();\n    constructor(parser, type = 2, parent) {\n        this.parser = parser;\n        this.type = type;\n        this.parent = parent;\n    }\n    createChildScope(type) {\n        return new Scope(this.parser, type, this);\n    }\n    addVarOrBlock(context, name, kind, origin) {\n        if (kind & 4) {\n            this.addVarName(context, name, kind);\n        }\n        else {\n            this.addBlockName(context, name, kind, origin);\n        }\n        if (origin & 64) {\n            this.parser.declareUnboundVariable(name);\n        }\n    }\n    addVarName(context, name, kind) {\n        const { parser } = this;\n        let currentScope = this;\n        while (currentScope && (currentScope.type & 128) === 0) {\n            const { variableBindings } = currentScope;\n            const value = variableBindings.get(name);\n            if (value && value & 248) {\n                if (parser.options.webcompat &&\n                    (context & 1) === 0 &&\n                    ((kind & 128 && value & 68) ||\n                        (value & 128 && kind & 68))) ;\n                else {\n                    parser.report(145, name);\n                }\n            }\n            if (currentScope === this) {\n                if (value && value & 1 && kind & 1) {\n                    currentScope.recordScopeError(145, name);\n                }\n            }\n            if (value &&\n                (value & 256 || (value & 512 && !parser.options.webcompat))) {\n                parser.report(145, name);\n            }\n            currentScope.variableBindings.set(name, kind);\n            currentScope = currentScope.parent;\n        }\n    }\n    hasVariable(name) {\n        return this.variableBindings.has(name);\n    }\n    addBlockName(context, name, kind, origin) {\n        const { parser } = this;\n        const value = this.variableBindings.get(name);\n        if (value && (value & 2) === 0) {\n            if (kind & 1) {\n                this.recordScopeError(145, name);\n            }\n            else if (parser.options.webcompat &&\n                (context & 1) === 0 &&\n                origin & 2 &&\n                value === 64 &&\n                kind === 64) ;\n            else {\n                parser.report(145, name);\n            }\n        }\n        if (this.type & 64 &&\n            this.parent?.hasVariable(name) &&\n            (this.parent.variableBindings.get(name) & 2) === 0) {\n            parser.report(145, name);\n        }\n        if (this.type & 512 && value && (value & 2) === 0) {\n            if (kind & 1) {\n                this.recordScopeError(145, name);\n            }\n        }\n        if (this.type & 32) {\n            if (this.parent.variableBindings.get(name) & 768)\n                parser.report(159, name);\n        }\n        this.variableBindings.set(name, kind);\n    }\n    recordScopeError(type, ...params) {\n        this.scopeError = {\n            type,\n            params,\n            start: this.parser.tokenStart,\n            end: this.parser.currentLocation,\n        };\n    }\n    reportScopeError() {\n        const { scopeError } = this;\n        if (!scopeError) {\n            return;\n        }\n        throw new ParseError(scopeError.start, scopeError.end, scopeError.type, ...scopeError.params);\n    }\n}\nfunction createArrowHeadParsingScope(parser, context, value) {\n    const scope = parser.createScope().createChildScope(512);\n    scope.addBlockName(context, value, 1, 0);\n    return scope;\n}\n\nclass PrivateScope {\n    parser;\n    parent;\n    refs = Object.create(null);\n    privateIdentifiers = new Map();\n    constructor(parser, parent) {\n        this.parser = parser;\n        this.parent = parent;\n    }\n    addPrivateIdentifier(name, kind) {\n        const { privateIdentifiers } = this;\n        let focusKind = kind & (32 | 768);\n        if (!(focusKind & 768))\n            focusKind |= 768;\n        const value = privateIdentifiers.get(name);\n        if (this.hasPrivateIdentifier(name) &&\n            ((value & 32) !== (focusKind & 32) || value & focusKind & 768)) {\n            this.parser.report(146, name);\n        }\n        privateIdentifiers.set(name, this.hasPrivateIdentifier(name) ? value | focusKind : focusKind);\n    }\n    addPrivateIdentifierRef(name) {\n        this.refs[name] ??= [];\n        this.refs[name].push(this.parser.tokenStart);\n    }\n    isPrivateIdentifierDefined(name) {\n        return this.hasPrivateIdentifier(name) || Boolean(this.parent?.isPrivateIdentifierDefined(name));\n    }\n    validatePrivateIdentifierRefs() {\n        for (const name in this.refs) {\n            if (!this.isPrivateIdentifierDefined(name)) {\n                const { index, line, column } = this.refs[name][0];\n                throw new ParseError({ index, line, column }, { index: index + name.length, line, column: column + name.length }, 4, name);\n            }\n        }\n    }\n    hasPrivateIdentifier(name) {\n        return this.privateIdentifiers.has(name);\n    }\n}\n\nclass Parser {\n    source;\n    options;\n    lastOnToken = null;\n    token = 1048576;\n    flags = 0;\n    index = 0;\n    line = 1;\n    column = 0;\n    startIndex = 0;\n    end = 0;\n    tokenIndex = 0;\n    startColumn = 0;\n    tokenColumn = 0;\n    tokenLine = 1;\n    startLine = 1;\n    tokenValue = '';\n    tokenRaw = '';\n    tokenRegExp = void 0;\n    currentChar = 0;\n    exportedNames = new Set();\n    exportedBindings = new Set();\n    assignable = 1;\n    destructible = 0;\n    leadingDecorators = { decorators: [] };\n    constructor(source, options = {}) {\n        this.source = source;\n        this.options = options;\n        this.end = source.length;\n        this.currentChar = source.charCodeAt(0);\n    }\n    getToken() {\n        return this.token;\n    }\n    setToken(value, replaceLast = false) {\n        this.token = value;\n        const { onToken } = this.options;\n        if (onToken) {\n            if (value !== 1048576) {\n                const loc = {\n                    start: {\n                        line: this.tokenLine,\n                        column: this.tokenColumn,\n                    },\n                    end: {\n                        line: this.line,\n                        column: this.column,\n                    },\n                };\n                if (!replaceLast && this.lastOnToken) {\n                    onToken(...this.lastOnToken);\n                }\n                this.lastOnToken = [convertTokenType(value), this.tokenIndex, this.index, loc];\n            }\n            else {\n                if (this.lastOnToken) {\n                    onToken(...this.lastOnToken);\n                    this.lastOnToken = null;\n                }\n            }\n        }\n        return value;\n    }\n    get tokenStart() {\n        return {\n            index: this.tokenIndex,\n            line: this.tokenLine,\n            column: this.tokenColumn,\n        };\n    }\n    get currentLocation() {\n        return { index: this.index, line: this.line, column: this.column };\n    }\n    finishNode(node, start, end) {\n        if (this.options.ranges) {\n            node.start = start.index;\n            const endIndex = end ? end.index : this.startIndex;\n            node.end = endIndex;\n            node.range = [start.index, endIndex];\n        }\n        if (this.options.loc) {\n            node.loc = {\n                start: {\n                    line: start.line,\n                    column: start.column,\n                },\n                end: end ? { line: end.line, column: end.column } : { line: this.startLine, column: this.startColumn },\n            };\n            if (this.options.source) {\n                node.loc.source = this.options.source;\n            }\n        }\n        return node;\n    }\n    addBindingToExports(name) {\n        this.exportedBindings.add(name);\n    }\n    declareUnboundVariable(name) {\n        const { exportedNames } = this;\n        if (exportedNames.has(name)) {\n            this.report(147, name);\n        }\n        exportedNames.add(name);\n    }\n    report(type, ...params) {\n        throw new ParseError(this.tokenStart, this.currentLocation, type, ...params);\n    }\n    createScopeIfLexical(type, parent) {\n        if (this.options.lexical) {\n            return this.createScope(type, parent);\n        }\n        return undefined;\n    }\n    createScope(type, parent) {\n        return new Scope(this, type, parent);\n    }\n    createPrivateScopeIfLexical(parent) {\n        if (this.options.lexical) {\n            return new PrivateScope(this, parent);\n        }\n        return undefined;\n    }\n}\nfunction pushComment(comments, options) {\n    return function (type, value, start, end, loc) {\n        const comment = {\n            type,\n            value,\n        };\n        if (options.ranges) {\n            comment.start = start;\n            comment.end = end;\n            comment.range = [start, end];\n        }\n        if (options.loc) {\n            comment.loc = loc;\n        }\n        comments.push(comment);\n    };\n}\nfunction pushToken(tokens, options) {\n    return function (type, start, end, loc) {\n        const token = {\n            token: type,\n        };\n        if (options.ranges) {\n            token.start = start;\n            token.end = end;\n            token.range = [start, end];\n        }\n        if (options.loc) {\n            token.loc = loc;\n        }\n        tokens.push(token);\n    };\n}\n\nfunction normalizeOptions(rawOptions) {\n    const options = { ...rawOptions };\n    if (options.onComment) {\n        options.onComment = Array.isArray(options.onComment) ? pushComment(options.onComment, options) : options.onComment;\n    }\n    if (options.onToken) {\n        options.onToken = Array.isArray(options.onToken) ? pushToken(options.onToken, options) : options.onToken;\n    }\n    return options;\n}\n\nfunction parseSource(source, rawOptions = {}, context = 0) {\n    const options = normalizeOptions(rawOptions);\n    if (options.module)\n        context |= 2 | 1;\n    if (options.globalReturn)\n        context |= 4096;\n    if (options.impliedStrict)\n        context |= 1;\n    const parser = new Parser(source, options);\n    skipHashBang(parser);\n    const scope = parser.createScopeIfLexical();\n    let body = [];\n    let sourceType = 'script';\n    if (context & 2) {\n        sourceType = 'module';\n        body = parseModuleItemList(parser, context | 8, scope);\n        if (scope) {\n            for (const name of parser.exportedBindings) {\n                if (!scope.hasVariable(name))\n                    parser.report(148, name);\n            }\n        }\n    }\n    else {\n        body = parseStatementList(parser, context | 8, scope);\n    }\n    return parser.finishNode({\n        type: 'Program',\n        sourceType,\n        body,\n    }, { index: 0, line: 1, column: 0 }, parser.currentLocation);\n}\nfunction parseStatementList(parser, context, scope) {\n    nextToken(parser, context | 32 | 262144);\n    const statements = [];\n    while (parser.getToken() === 134283267) {\n        const { index, tokenValue, tokenStart, tokenIndex } = parser;\n        const token = parser.getToken();\n        const expr = parseLiteral(parser, context);\n        if (isValidStrictMode(parser, index, tokenIndex, tokenValue)) {\n            context |= 1;\n            if (parser.flags & 64) {\n                throw new ParseError(parser.tokenStart, parser.currentLocation, 9);\n            }\n            if (parser.flags & 4096) {\n                throw new ParseError(parser.tokenStart, parser.currentLocation, 15);\n            }\n        }\n        statements.push(parseDirective(parser, context, expr, token, tokenStart));\n    }\n    while (parser.getToken() !== 1048576) {\n        statements.push(parseStatementListItem(parser, context, scope, undefined, 4, {}));\n    }\n    return statements;\n}\nfunction parseModuleItemList(parser, context, scope) {\n    nextToken(parser, context | 32);\n    const statements = [];\n    while (parser.getToken() === 134283267) {\n        const { tokenStart } = parser;\n        const token = parser.getToken();\n        statements.push(parseDirective(parser, context, parseLiteral(parser, context), token, tokenStart));\n    }\n    while (parser.getToken() !== 1048576) {\n        statements.push(parseModuleItem(parser, context, scope));\n    }\n    return statements;\n}\nfunction parseModuleItem(parser, context, scope) {\n    if (parser.getToken() === 132) {\n        Object.assign(parser.leadingDecorators, {\n            start: parser.tokenStart,\n            decorators: parseDecorators(parser, context, undefined),\n        });\n    }\n    let moduleItem;\n    switch (parser.getToken()) {\n        case 20564:\n            moduleItem = parseExportDeclaration(parser, context, scope);\n            break;\n        case 86106:\n            moduleItem = parseImportDeclaration(parser, context, scope);\n            break;\n        default:\n            moduleItem = parseStatementListItem(parser, context, scope, undefined, 4, {});\n    }\n    if (parser.leadingDecorators?.decorators.length) {\n        parser.report(170);\n    }\n    return moduleItem;\n}\nfunction parseStatementListItem(parser, context, scope, privateScope, origin, labels) {\n    const start = parser.tokenStart;\n    switch (parser.getToken()) {\n        case 86104:\n            return parseFunctionDeclaration(parser, context, scope, privateScope, origin, 1, 0, 0, start);\n        case 132:\n        case 86094:\n            return parseClassDeclaration(parser, context, scope, privateScope, 0);\n        case 86090:\n            return parseLexicalDeclaration(parser, context, scope, privateScope, 16, 0);\n        case 241737:\n            return parseLetIdentOrVarDeclarationStatement(parser, context, scope, privateScope, origin);\n        case 20564:\n            parser.report(103, 'export');\n        case 86106:\n            nextToken(parser, context);\n            switch (parser.getToken()) {\n                case 67174411:\n                    return parseImportCallDeclaration(parser, context, privateScope, start);\n                case 67108877:\n                    return parseImportMetaDeclaration(parser, context, start);\n                default:\n                    parser.report(103, 'import');\n            }\n        case 209005:\n            return parseAsyncArrowOrAsyncFunctionDeclaration(parser, context, scope, privateScope, origin, labels, 1);\n        default:\n            return parseStatement(parser, context, scope, privateScope, origin, labels, 1);\n    }\n}\nfunction parseStatement(parser, context, scope, privateScope, origin, labels, allowFuncDecl) {\n    switch (parser.getToken()) {\n        case 86088:\n            return parseVariableStatement(parser, context, scope, privateScope, 0);\n        case 20572:\n            return parseReturnStatement(parser, context, privateScope);\n        case 20569:\n            return parseIfStatement(parser, context, scope, privateScope, labels);\n        case 20567:\n            return parseForStatement(parser, context, scope, privateScope, labels);\n        case 20562:\n            return parseDoWhileStatement(parser, context, scope, privateScope, labels);\n        case 20578:\n            return parseWhileStatement(parser, context, scope, privateScope, labels);\n        case 86110:\n            return parseSwitchStatement(parser, context, scope, privateScope, labels);\n        case 1074790417:\n            return parseEmptyStatement(parser, context);\n        case 2162700:\n            return parseBlock(parser, context, scope?.createChildScope(), privateScope, labels, parser.tokenStart);\n        case 86112:\n            return parseThrowStatement(parser, context, privateScope);\n        case 20555:\n            return parseBreakStatement(parser, context, labels);\n        case 20559:\n            return parseContinueStatement(parser, context, labels);\n        case 20577:\n            return parseTryStatement(parser, context, scope, privateScope, labels);\n        case 20579:\n            return parseWithStatement(parser, context, scope, privateScope, labels);\n        case 20560:\n            return parseDebuggerStatement(parser, context);\n        case 209005:\n            return parseAsyncArrowOrAsyncFunctionDeclaration(parser, context, scope, privateScope, origin, labels, 0);\n        case 20557:\n            parser.report(162);\n        case 20566:\n            parser.report(163);\n        case 86104:\n            parser.report(context & 1\n                ? 76\n                : !parser.options.webcompat\n                    ? 78\n                    : 77);\n        case 86094:\n            parser.report(79);\n        default:\n            return parseExpressionOrLabelledStatement(parser, context, scope, privateScope, origin, labels, allowFuncDecl);\n    }\n}\nfunction parseExpressionOrLabelledStatement(parser, context, scope, privateScope, origin, labels, allowFuncDecl) {\n    const { tokenValue, tokenStart } = parser;\n    const token = parser.getToken();\n    let expr;\n    switch (token) {\n        case 241737:\n            expr = parseIdentifier(parser, context);\n            if (context & 1)\n                parser.report(85);\n            if (parser.getToken() === 69271571)\n                parser.report(84);\n            break;\n        default:\n            expr = parsePrimaryExpression(parser, context, privateScope, 2, 0, 1, 0, 1, parser.tokenStart);\n    }\n    if (token & 143360 && parser.getToken() === 21) {\n        return parseLabelledStatement(parser, context, scope, privateScope, origin, labels, tokenValue, expr, token, allowFuncDecl, tokenStart);\n    }\n    expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 0, 0, tokenStart);\n    expr = parseAssignmentExpression(parser, context, privateScope, 0, 0, tokenStart, expr);\n    if (parser.getToken() === 18) {\n        expr = parseSequenceExpression(parser, context, privateScope, 0, tokenStart, expr);\n    }\n    return parseExpressionStatement(parser, context, expr, tokenStart);\n}\nfunction parseBlock(parser, context, scope, privateScope, labels, start = parser.tokenStart, type = 'BlockStatement') {\n    const body = [];\n    consume(parser, context | 32, 2162700);\n    while (parser.getToken() !== 1074790415) {\n        body.push(parseStatementListItem(parser, context, scope, privateScope, 2, { $: labels }));\n    }\n    consume(parser, context | 32, 1074790415);\n    return parser.finishNode({\n        type,\n        body,\n    }, start);\n}\nfunction parseReturnStatement(parser, context, privateScope) {\n    if ((context & 4096) === 0)\n        parser.report(92);\n    const start = parser.tokenStart;\n    nextToken(parser, context | 32);\n    const argument = parser.flags & 1 || parser.getToken() & 1048576\n        ? null\n        : parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    matchOrInsertSemicolon(parser, context | 32);\n    return parser.finishNode({\n        type: 'ReturnStatement',\n        argument,\n    }, start);\n}\nfunction parseExpressionStatement(parser, context, expression, start) {\n    matchOrInsertSemicolon(parser, context | 32);\n    return parser.finishNode({\n        type: 'ExpressionStatement',\n        expression,\n    }, start);\n}\nfunction parseLabelledStatement(parser, context, scope, privateScope, origin, labels, value, expr, token, allowFuncDecl, start) {\n    validateBindingIdentifier(parser, context, 0, token, 1);\n    validateAndDeclareLabel(parser, labels, value);\n    nextToken(parser, context | 32);\n    const body = allowFuncDecl &&\n        (context & 1) === 0 &&\n        parser.options.webcompat &&\n        parser.getToken() === 86104\n        ? parseFunctionDeclaration(parser, context, scope?.createChildScope(), privateScope, origin, 0, 0, 0, parser.tokenStart)\n        : parseStatement(parser, context, scope, privateScope, origin, labels, allowFuncDecl);\n    return parser.finishNode({\n        type: 'LabeledStatement',\n        label: expr,\n        body,\n    }, start);\n}\nfunction parseAsyncArrowOrAsyncFunctionDeclaration(parser, context, scope, privateScope, origin, labels, allowFuncDecl) {\n    const { tokenValue, tokenStart: start } = parser;\n    const token = parser.getToken();\n    let expr = parseIdentifier(parser, context);\n    if (parser.getToken() === 21) {\n        return parseLabelledStatement(parser, context, scope, privateScope, origin, labels, tokenValue, expr, token, 1, start);\n    }\n    const asyncNewLine = parser.flags & 1;\n    if (!asyncNewLine) {\n        if (parser.getToken() === 86104) {\n            if (!allowFuncDecl)\n                parser.report(123);\n            return parseFunctionDeclaration(parser, context, scope, privateScope, origin, 1, 0, 1, start);\n        }\n        if (isValidIdentifier(context, parser.getToken())) {\n            expr = parseAsyncArrowAfterIdent(parser, context, privateScope, 1, start);\n            if (parser.getToken() === 18)\n                expr = parseSequenceExpression(parser, context, privateScope, 0, start, expr);\n            return parseExpressionStatement(parser, context, expr, start);\n        }\n    }\n    if (parser.getToken() === 67174411) {\n        expr = parseAsyncArrowOrCallExpression(parser, context, privateScope, expr, 1, 1, 0, asyncNewLine, start);\n    }\n    else {\n        if (parser.getToken() === 10) {\n            classifyIdentifier(parser, context, token);\n            if ((token & 36864) === 36864) {\n                parser.flags |= 256;\n            }\n            expr = parseArrowFromIdentifier(parser, context | 2048, privateScope, parser.tokenValue, expr, 0, 1, 0, start);\n        }\n        parser.assignable = 1;\n    }\n    expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 0, 0, start);\n    expr = parseAssignmentExpression(parser, context, privateScope, 0, 0, start, expr);\n    parser.assignable = 1;\n    if (parser.getToken() === 18) {\n        expr = parseSequenceExpression(parser, context, privateScope, 0, start, expr);\n    }\n    return parseExpressionStatement(parser, context, expr, start);\n}\nfunction parseDirective(parser, context, expression, token, start) {\n    const endIndex = parser.startIndex;\n    if (token !== 1074790417) {\n        parser.assignable = 2;\n        expression = parseMemberOrUpdateExpression(parser, context, undefined, expression, 0, 0, start);\n        if (parser.getToken() !== 1074790417) {\n            expression = parseAssignmentExpression(parser, context, undefined, 0, 0, start, expression);\n            if (parser.getToken() === 18) {\n                expression = parseSequenceExpression(parser, context, undefined, 0, start, expression);\n            }\n        }\n        matchOrInsertSemicolon(parser, context | 32);\n    }\n    const node = {\n        type: 'ExpressionStatement',\n        expression,\n    };\n    if (expression.type === 'Literal' && typeof expression.value === 'string') {\n        node.directive = parser.source.slice(start.index + 1, endIndex - 1);\n    }\n    return parser.finishNode(node, start);\n}\nfunction parseEmptyStatement(parser, context) {\n    const start = parser.tokenStart;\n    nextToken(parser, context | 32);\n    return parser.finishNode({\n        type: 'EmptyStatement',\n    }, start);\n}\nfunction parseThrowStatement(parser, context, privateScope) {\n    const start = parser.tokenStart;\n    nextToken(parser, context | 32);\n    if (parser.flags & 1)\n        parser.report(90);\n    const argument = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    matchOrInsertSemicolon(parser, context | 32);\n    return parser.finishNode({\n        type: 'ThrowStatement',\n        argument,\n    }, start);\n}\nfunction parseIfStatement(parser, context, scope, privateScope, labels) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    consume(parser, context | 32, 67174411);\n    parser.assignable = 1;\n    const test = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    consume(parser, context | 32, 16);\n    const consequent = parseConsequentOrAlternative(parser, context, scope, privateScope, labels);\n    let alternate = null;\n    if (parser.getToken() === 20563) {\n        nextToken(parser, context | 32);\n        alternate = parseConsequentOrAlternative(parser, context, scope, privateScope, labels);\n    }\n    return parser.finishNode({\n        type: 'IfStatement',\n        test,\n        consequent,\n        alternate,\n    }, start);\n}\nfunction parseConsequentOrAlternative(parser, context, scope, privateScope, labels) {\n    const { tokenStart } = parser;\n    return context & 1 ||\n        !parser.options.webcompat ||\n        parser.getToken() !== 86104\n        ? parseStatement(parser, context, scope, privateScope, 0, { $: labels }, 0)\n        : parseFunctionDeclaration(parser, context, scope?.createChildScope(), privateScope, 0, 0, 0, 0, tokenStart);\n}\nfunction parseSwitchStatement(parser, context, scope, privateScope, labels) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    consume(parser, context | 32, 67174411);\n    const discriminant = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    consume(parser, context, 16);\n    consume(parser, context, 2162700);\n    const cases = [];\n    let seenDefault = 0;\n    scope = scope?.createChildScope(8);\n    while (parser.getToken() !== 1074790415) {\n        const { tokenStart } = parser;\n        let test = null;\n        const consequent = [];\n        if (consumeOpt(parser, context | 32, 20556)) {\n            test = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n        }\n        else {\n            consume(parser, context | 32, 20561);\n            if (seenDefault)\n                parser.report(89);\n            seenDefault = 1;\n        }\n        consume(parser, context | 32, 21);\n        while (parser.getToken() !== 20556 &&\n            parser.getToken() !== 1074790415 &&\n            parser.getToken() !== 20561) {\n            consequent.push(parseStatementListItem(parser, context | 4, scope, privateScope, 2, {\n                $: labels,\n            }));\n        }\n        cases.push(parser.finishNode({\n            type: 'SwitchCase',\n            test,\n            consequent,\n        }, tokenStart));\n    }\n    consume(parser, context | 32, 1074790415);\n    return parser.finishNode({\n        type: 'SwitchStatement',\n        discriminant,\n        cases,\n    }, start);\n}\nfunction parseWhileStatement(parser, context, scope, privateScope, labels) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    consume(parser, context | 32, 67174411);\n    const test = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    consume(parser, context | 32, 16);\n    const body = parseIterationStatementBody(parser, context, scope, privateScope, labels);\n    return parser.finishNode({\n        type: 'WhileStatement',\n        test,\n        body,\n    }, start);\n}\nfunction parseIterationStatementBody(parser, context, scope, privateScope, labels) {\n    return parseStatement(parser, ((context | 131072) ^ 131072) | 128, scope, privateScope, 0, { loop: 1, $: labels }, 0);\n}\nfunction parseContinueStatement(parser, context, labels) {\n    if ((context & 128) === 0)\n        parser.report(68);\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    let label = null;\n    if ((parser.flags & 1) === 0 && parser.getToken() & 143360) {\n        const { tokenValue } = parser;\n        label = parseIdentifier(parser, context | 32);\n        if (!isValidLabel(parser, labels, tokenValue, 1))\n            parser.report(138, tokenValue);\n    }\n    matchOrInsertSemicolon(parser, context | 32);\n    return parser.finishNode({\n        type: 'ContinueStatement',\n        label,\n    }, start);\n}\nfunction parseBreakStatement(parser, context, labels) {\n    const start = parser.tokenStart;\n    nextToken(parser, context | 32);\n    let label = null;\n    if ((parser.flags & 1) === 0 && parser.getToken() & 143360) {\n        const { tokenValue } = parser;\n        label = parseIdentifier(parser, context | 32);\n        if (!isValidLabel(parser, labels, tokenValue, 0))\n            parser.report(138, tokenValue);\n    }\n    else if ((context & (4 | 128)) === 0) {\n        parser.report(69);\n    }\n    matchOrInsertSemicolon(parser, context | 32);\n    return parser.finishNode({\n        type: 'BreakStatement',\n        label,\n    }, start);\n}\nfunction parseWithStatement(parser, context, scope, privateScope, labels) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    if (context & 1)\n        parser.report(91);\n    consume(parser, context | 32, 67174411);\n    const object = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    consume(parser, context | 32, 16);\n    const body = parseStatement(parser, context, scope, privateScope, 2, labels, 0);\n    return parser.finishNode({\n        type: 'WithStatement',\n        object,\n        body,\n    }, start);\n}\nfunction parseDebuggerStatement(parser, context) {\n    const start = parser.tokenStart;\n    nextToken(parser, context | 32);\n    matchOrInsertSemicolon(parser, context | 32);\n    return parser.finishNode({\n        type: 'DebuggerStatement',\n    }, start);\n}\nfunction parseTryStatement(parser, context, scope, privateScope, labels) {\n    const start = parser.tokenStart;\n    nextToken(parser, context | 32);\n    const firstScope = scope?.createChildScope(16);\n    const block = parseBlock(parser, context, firstScope, privateScope, { $: labels });\n    const { tokenStart } = parser;\n    const handler = consumeOpt(parser, context | 32, 20557)\n        ? parseCatchBlock(parser, context, scope, privateScope, labels, tokenStart)\n        : null;\n    let finalizer = null;\n    if (parser.getToken() === 20566) {\n        nextToken(parser, context | 32);\n        const finalizerScope = scope?.createChildScope(4);\n        const block = parseBlock(parser, context, finalizerScope, privateScope, { $: labels });\n        finalizer = block;\n    }\n    if (!handler && !finalizer) {\n        parser.report(88);\n    }\n    return parser.finishNode({\n        type: 'TryStatement',\n        block,\n        handler,\n        finalizer,\n    }, start);\n}\nfunction parseCatchBlock(parser, context, scope, privateScope, labels, start) {\n    let param = null;\n    let additionalScope = scope;\n    if (consumeOpt(parser, context, 67174411)) {\n        scope = scope?.createChildScope(4);\n        param = parseBindingPattern(parser, context, scope, privateScope, (parser.getToken() & 2097152) === 2097152\n            ? 256\n            : 512, 0);\n        if (parser.getToken() === 18) {\n            parser.report(86);\n        }\n        else if (parser.getToken() === 1077936155) {\n            parser.report(87);\n        }\n        consume(parser, context | 32, 16);\n    }\n    additionalScope = scope?.createChildScope(32);\n    const body = parseBlock(parser, context, additionalScope, privateScope, { $: labels });\n    return parser.finishNode({\n        type: 'CatchClause',\n        param,\n        body,\n    }, start);\n}\nfunction parseStaticBlock(parser, context, scope, privateScope, start) {\n    scope = scope?.createChildScope();\n    const ctorContext = 512 | 4096 | 1024 | 4 | 128;\n    context =\n        ((context | ctorContext) ^ ctorContext) |\n            256 |\n            2048 |\n            524288 |\n            65536;\n    return parseBlock(parser, context, scope, privateScope, {}, start, 'StaticBlock');\n}\nfunction parseDoWhileStatement(parser, context, scope, privateScope, labels) {\n    const start = parser.tokenStart;\n    nextToken(parser, context | 32);\n    const body = parseIterationStatementBody(parser, context, scope, privateScope, labels);\n    consume(parser, context, 20578);\n    consume(parser, context | 32, 67174411);\n    const test = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    consume(parser, context | 32, 16);\n    consumeOpt(parser, context | 32, 1074790417);\n    return parser.finishNode({\n        type: 'DoWhileStatement',\n        body,\n        test,\n    }, start);\n}\nfunction parseLetIdentOrVarDeclarationStatement(parser, context, scope, privateScope, origin) {\n    const { tokenValue, tokenStart } = parser;\n    const token = parser.getToken();\n    let expr = parseIdentifier(parser, context);\n    if (parser.getToken() & (143360 | 2097152)) {\n        const declarations = parseVariableDeclarationList(parser, context, scope, privateScope, 8, 0);\n        matchOrInsertSemicolon(parser, context | 32);\n        return parser.finishNode({\n            type: 'VariableDeclaration',\n            kind: 'let',\n            declarations,\n        }, tokenStart);\n    }\n    parser.assignable = 1;\n    if (context & 1)\n        parser.report(85);\n    if (parser.getToken() === 21) {\n        return parseLabelledStatement(parser, context, scope, privateScope, origin, {}, tokenValue, expr, token, 0, tokenStart);\n    }\n    if (parser.getToken() === 10) {\n        let scope = void 0;\n        if (parser.options.lexical)\n            scope = createArrowHeadParsingScope(parser, context, tokenValue);\n        parser.flags = (parser.flags | 128) ^ 128;\n        expr = parseArrowFunctionExpression(parser, context, scope, privateScope, [expr], 0, tokenStart);\n    }\n    else {\n        expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 0, 0, tokenStart);\n        expr = parseAssignmentExpression(parser, context, privateScope, 0, 0, tokenStart, expr);\n    }\n    if (parser.getToken() === 18) {\n        expr = parseSequenceExpression(parser, context, privateScope, 0, tokenStart, expr);\n    }\n    return parseExpressionStatement(parser, context, expr, tokenStart);\n}\nfunction parseLexicalDeclaration(parser, context, scope, privateScope, kind, origin) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    const declarations = parseVariableDeclarationList(parser, context, scope, privateScope, kind, origin);\n    matchOrInsertSemicolon(parser, context | 32);\n    return parser.finishNode({\n        type: 'VariableDeclaration',\n        kind: kind & 8 ? 'let' : 'const',\n        declarations,\n    }, start);\n}\nfunction parseVariableStatement(parser, context, scope, privateScope, origin) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    const declarations = parseVariableDeclarationList(parser, context, scope, privateScope, 4, origin);\n    matchOrInsertSemicolon(parser, context | 32);\n    return parser.finishNode({\n        type: 'VariableDeclaration',\n        kind: 'var',\n        declarations,\n    }, start);\n}\nfunction parseVariableDeclarationList(parser, context, scope, privateScope, kind, origin) {\n    let bindingCount = 1;\n    const list = [\n        parseVariableDeclaration(parser, context, scope, privateScope, kind, origin),\n    ];\n    while (consumeOpt(parser, context, 18)) {\n        bindingCount++;\n        list.push(parseVariableDeclaration(parser, context, scope, privateScope, kind, origin));\n    }\n    if (bindingCount > 1 && origin & 32 && parser.getToken() & 262144) {\n        parser.report(61, KeywordDescTable[parser.getToken() & 255]);\n    }\n    return list;\n}\nfunction parseVariableDeclaration(parser, context, scope, privateScope, kind, origin) {\n    const { tokenStart } = parser;\n    const token = parser.getToken();\n    let init = null;\n    const id = parseBindingPattern(parser, context, scope, privateScope, kind, origin);\n    if (parser.getToken() === 1077936155) {\n        nextToken(parser, context | 32);\n        init = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n        if (origin & 32 || (token & 2097152) === 0) {\n            if (parser.getToken() === 471156 ||\n                (parser.getToken() === 8673330 &&\n                    (token & 2097152 || (kind & 4) === 0 || context & 1))) {\n                throw new ParseError(tokenStart, parser.currentLocation, 60, parser.getToken() === 471156 ? 'of' : 'in');\n            }\n        }\n    }\n    else if ((kind & 16 || (token & 2097152) > 0) &&\n        (parser.getToken() & 262144) !== 262144) {\n        parser.report(59, kind & 16 ? 'const' : 'destructuring');\n    }\n    return parser.finishNode({\n        type: 'VariableDeclarator',\n        id,\n        init,\n    }, tokenStart);\n}\nfunction parseForStatement(parser, context, scope, privateScope, labels) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    const forAwait = ((context & 2048) > 0 || ((context & 2) > 0 && (context & 8) > 0)) &&\n        consumeOpt(parser, context, 209006);\n    consume(parser, context | 32, 67174411);\n    scope = scope?.createChildScope(1);\n    let test = null;\n    let update = null;\n    let destructible = 0;\n    let init = null;\n    let isVarDecl = parser.getToken() === 86088 ||\n        parser.getToken() === 241737 ||\n        parser.getToken() === 86090;\n    let right;\n    const { tokenStart } = parser;\n    const token = parser.getToken();\n    if (isVarDecl) {\n        if (token === 241737) {\n            init = parseIdentifier(parser, context);\n            if (parser.getToken() & (143360 | 2097152)) {\n                if (parser.getToken() === 8673330) {\n                    if (context & 1)\n                        parser.report(67);\n                }\n                else {\n                    init = parser.finishNode({\n                        type: 'VariableDeclaration',\n                        kind: 'let',\n                        declarations: parseVariableDeclarationList(parser, context | 131072, scope, privateScope, 8, 32),\n                    }, tokenStart);\n                }\n                parser.assignable = 1;\n            }\n            else if (context & 1) {\n                parser.report(67);\n            }\n            else {\n                isVarDecl = false;\n                parser.assignable = 1;\n                init = parseMemberOrUpdateExpression(parser, context, privateScope, init, 0, 0, tokenStart);\n                if (parser.getToken() === 471156)\n                    parser.report(115);\n            }\n        }\n        else {\n            nextToken(parser, context);\n            init = parser.finishNode(token === 86088\n                ? {\n                    type: 'VariableDeclaration',\n                    kind: 'var',\n                    declarations: parseVariableDeclarationList(parser, context | 131072, scope, privateScope, 4, 32),\n                }\n                : {\n                    type: 'VariableDeclaration',\n                    kind: 'const',\n                    declarations: parseVariableDeclarationList(parser, context | 131072, scope, privateScope, 16, 32),\n                }, tokenStart);\n            parser.assignable = 1;\n        }\n    }\n    else if (token === 1074790417) {\n        if (forAwait)\n            parser.report(82);\n    }\n    else if ((token & 2097152) === 2097152) {\n        const patternStart = parser.tokenStart;\n        init =\n            token === 2162700\n                ? parseObjectLiteralOrPattern(parser, context, void 0, privateScope, 1, 0, 0, 2, 32)\n                : parseArrayExpressionOrPattern(parser, context, void 0, privateScope, 1, 0, 0, 2, 32);\n        destructible = parser.destructible;\n        if (destructible & 64) {\n            parser.report(63);\n        }\n        parser.assignable =\n            destructible & 16 ? 2 : 1;\n        init = parseMemberOrUpdateExpression(parser, context | 131072, privateScope, init, 0, 0, patternStart);\n    }\n    else {\n        init = parseLeftHandSideExpression(parser, context | 131072, privateScope, 1, 0, 1);\n    }\n    if ((parser.getToken() & 262144) === 262144) {\n        if (parser.getToken() === 471156) {\n            if (parser.assignable & 2)\n                parser.report(80, forAwait ? 'await' : 'of');\n            reinterpretToPattern(parser, init);\n            nextToken(parser, context | 32);\n            right = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n            consume(parser, context | 32, 16);\n            const body = parseIterationStatementBody(parser, context, scope, privateScope, labels);\n            return parser.finishNode({\n                type: 'ForOfStatement',\n                left: init,\n                right,\n                body,\n                await: forAwait,\n            }, start);\n        }\n        if (parser.assignable & 2)\n            parser.report(80, 'in');\n        reinterpretToPattern(parser, init);\n        nextToken(parser, context | 32);\n        if (forAwait)\n            parser.report(82);\n        right = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n        consume(parser, context | 32, 16);\n        const body = parseIterationStatementBody(parser, context, scope, privateScope, labels);\n        return parser.finishNode({\n            type: 'ForInStatement',\n            body,\n            left: init,\n            right,\n        }, start);\n    }\n    if (forAwait)\n        parser.report(82);\n    if (!isVarDecl) {\n        if (destructible & 8 && parser.getToken() !== 1077936155) {\n            parser.report(80, 'loop');\n        }\n        init = parseAssignmentExpression(parser, context | 131072, privateScope, 0, 0, tokenStart, init);\n    }\n    if (parser.getToken() === 18)\n        init = parseSequenceExpression(parser, context, privateScope, 0, tokenStart, init);\n    consume(parser, context | 32, 1074790417);\n    if (parser.getToken() !== 1074790417)\n        test = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    consume(parser, context | 32, 1074790417);\n    if (parser.getToken() !== 16)\n        update = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    consume(parser, context | 32, 16);\n    const body = parseIterationStatementBody(parser, context, scope, privateScope, labels);\n    return parser.finishNode({\n        type: 'ForStatement',\n        init,\n        test,\n        update,\n        body,\n    }, start);\n}\nfunction parseRestrictedIdentifier(parser, context, scope) {\n    if (!isValidIdentifier(context, parser.getToken()))\n        parser.report(118);\n    if ((parser.getToken() & 537079808) === 537079808)\n        parser.report(119);\n    scope?.addBlockName(context, parser.tokenValue, 8, 0);\n    return parseIdentifier(parser, context);\n}\nfunction parseImportDeclaration(parser, context, scope) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    let source = null;\n    const { tokenStart } = parser;\n    let specifiers = [];\n    if (parser.getToken() === 134283267) {\n        source = parseLiteral(parser, context);\n    }\n    else {\n        if (parser.getToken() & 143360) {\n            const local = parseRestrictedIdentifier(parser, context, scope);\n            specifiers = [\n                parser.finishNode({\n                    type: 'ImportDefaultSpecifier',\n                    local,\n                }, tokenStart),\n            ];\n            if (consumeOpt(parser, context, 18)) {\n                switch (parser.getToken()) {\n                    case 8391476:\n                        specifiers.push(parseImportNamespaceSpecifier(parser, context, scope));\n                        break;\n                    case 2162700:\n                        parseImportSpecifierOrNamedImports(parser, context, scope, specifiers);\n                        break;\n                    default:\n                        parser.report(107);\n                }\n            }\n        }\n        else {\n            switch (parser.getToken()) {\n                case 8391476:\n                    specifiers = [parseImportNamespaceSpecifier(parser, context, scope)];\n                    break;\n                case 2162700:\n                    parseImportSpecifierOrNamedImports(parser, context, scope, specifiers);\n                    break;\n                case 67174411:\n                    return parseImportCallDeclaration(parser, context, undefined, start);\n                case 67108877:\n                    return parseImportMetaDeclaration(parser, context, start);\n                default:\n                    parser.report(30, KeywordDescTable[parser.getToken() & 255]);\n            }\n        }\n        source = parseModuleSpecifier(parser, context);\n    }\n    const attributes = parseImportAttributes(parser, context);\n    const node = {\n        type: 'ImportDeclaration',\n        specifiers,\n        source,\n        attributes,\n    };\n    matchOrInsertSemicolon(parser, context | 32);\n    return parser.finishNode(node, start);\n}\nfunction parseImportNamespaceSpecifier(parser, context, scope) {\n    const { tokenStart } = parser;\n    nextToken(parser, context);\n    consume(parser, context, 77932);\n    if ((parser.getToken() & 134217728) === 134217728) {\n        throw new ParseError(tokenStart, parser.currentLocation, 30, KeywordDescTable[parser.getToken() & 255]);\n    }\n    return parser.finishNode({\n        type: 'ImportNamespaceSpecifier',\n        local: parseRestrictedIdentifier(parser, context, scope),\n    }, tokenStart);\n}\nfunction parseModuleSpecifier(parser, context) {\n    consume(parser, context, 209011);\n    if (parser.getToken() !== 134283267)\n        parser.report(105, 'Import');\n    return parseLiteral(parser, context);\n}\nfunction parseImportSpecifierOrNamedImports(parser, context, scope, specifiers) {\n    nextToken(parser, context);\n    while (parser.getToken() & 143360 || parser.getToken() === 134283267) {\n        let { tokenValue, tokenStart } = parser;\n        const token = parser.getToken();\n        const imported = parseModuleExportName(parser, context);\n        let local;\n        if (consumeOpt(parser, context, 77932)) {\n            if ((parser.getToken() & 134217728) === 134217728 ||\n                parser.getToken() === 18) {\n                parser.report(106);\n            }\n            else {\n                validateBindingIdentifier(parser, context, 16, parser.getToken(), 0);\n            }\n            tokenValue = parser.tokenValue;\n            local = parseIdentifier(parser, context);\n        }\n        else if (imported.type === 'Identifier') {\n            validateBindingIdentifier(parser, context, 16, token, 0);\n            local = imported;\n        }\n        else {\n            parser.report(25, KeywordDescTable[77932 & 255]);\n        }\n        scope?.addBlockName(context, tokenValue, 8, 0);\n        specifiers.push(parser.finishNode({\n            type: 'ImportSpecifier',\n            local,\n            imported,\n        }, tokenStart));\n        if (parser.getToken() !== 1074790415)\n            consume(parser, context, 18);\n    }\n    consume(parser, context, 1074790415);\n    return specifiers;\n}\nfunction parseImportMetaDeclaration(parser, context, start) {\n    let expr = parseImportMetaExpression(parser, context, parser.finishNode({\n        type: 'Identifier',\n        name: 'import',\n    }, start), start);\n    expr = parseMemberOrUpdateExpression(parser, context, undefined, expr, 0, 0, start);\n    expr = parseAssignmentExpression(parser, context, undefined, 0, 0, start, expr);\n    if (parser.getToken() === 18) {\n        expr = parseSequenceExpression(parser, context, undefined, 0, start, expr);\n    }\n    return parseExpressionStatement(parser, context, expr, start);\n}\nfunction parseImportCallDeclaration(parser, context, privateScope, start) {\n    let expr = parseImportExpression(parser, context, privateScope, 0, start);\n    expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 0, 0, start);\n    if (parser.getToken() === 18) {\n        expr = parseSequenceExpression(parser, context, privateScope, 0, start, expr);\n    }\n    return parseExpressionStatement(parser, context, expr, start);\n}\nfunction parseExportDeclaration(parser, context, scope) {\n    const start = parser.leadingDecorators.decorators.length ? parser.leadingDecorators.start : parser.tokenStart;\n    nextToken(parser, context | 32);\n    const specifiers = [];\n    let declaration = null;\n    let source = null;\n    let attributes = [];\n    if (consumeOpt(parser, context | 32, 20561)) {\n        switch (parser.getToken()) {\n            case 86104: {\n                declaration = parseFunctionDeclaration(parser, context, scope, undefined, 4, 1, 1, 0, parser.tokenStart);\n                break;\n            }\n            case 132:\n            case 86094:\n                declaration = parseClassDeclaration(parser, context, scope, undefined, 1);\n                break;\n            case 209005: {\n                const { tokenStart } = parser;\n                declaration = parseIdentifier(parser, context);\n                const { flags } = parser;\n                if ((flags & 1) === 0) {\n                    if (parser.getToken() === 86104) {\n                        declaration = parseFunctionDeclaration(parser, context, scope, undefined, 4, 1, 1, 1, tokenStart);\n                    }\n                    else {\n                        if (parser.getToken() === 67174411) {\n                            declaration = parseAsyncArrowOrCallExpression(parser, context, undefined, declaration, 1, 1, 0, flags, tokenStart);\n                            declaration = parseMemberOrUpdateExpression(parser, context, undefined, declaration, 0, 0, tokenStart);\n                            declaration = parseAssignmentExpression(parser, context, undefined, 0, 0, tokenStart, declaration);\n                        }\n                        else if (parser.getToken() & 143360) {\n                            if (scope)\n                                scope = createArrowHeadParsingScope(parser, context, parser.tokenValue);\n                            declaration = parseIdentifier(parser, context);\n                            declaration = parseArrowFunctionExpression(parser, context, scope, undefined, [declaration], 1, tokenStart);\n                        }\n                    }\n                }\n                break;\n            }\n            default:\n                declaration = parseExpression(parser, context, undefined, 1, 0, parser.tokenStart);\n                matchOrInsertSemicolon(parser, context | 32);\n        }\n        if (scope)\n            parser.declareUnboundVariable('default');\n        return parser.finishNode({\n            type: 'ExportDefaultDeclaration',\n            declaration,\n        }, start);\n    }\n    switch (parser.getToken()) {\n        case 8391476: {\n            nextToken(parser, context);\n            let exported = null;\n            const isNamedDeclaration = consumeOpt(parser, context, 77932);\n            if (isNamedDeclaration) {\n                if (scope)\n                    parser.declareUnboundVariable(parser.tokenValue);\n                exported = parseModuleExportName(parser, context);\n            }\n            consume(parser, context, 209011);\n            if (parser.getToken() !== 134283267)\n                parser.report(105, 'Export');\n            source = parseLiteral(parser, context);\n            const attributes = parseImportAttributes(parser, context);\n            const node = {\n                type: 'ExportAllDeclaration',\n                source,\n                exported,\n                attributes,\n            };\n            matchOrInsertSemicolon(parser, context | 32);\n            return parser.finishNode(node, start);\n        }\n        case 2162700: {\n            nextToken(parser, context);\n            const tmpExportedNames = [];\n            const tmpExportedBindings = [];\n            let hasLiteralLocal = 0;\n            while (parser.getToken() & 143360 || parser.getToken() === 134283267) {\n                const { tokenStart, tokenValue } = parser;\n                const local = parseModuleExportName(parser, context);\n                if (local.type === 'Literal') {\n                    hasLiteralLocal = 1;\n                }\n                let exported;\n                if (parser.getToken() === 77932) {\n                    nextToken(parser, context);\n                    if ((parser.getToken() & 143360) === 0 && parser.getToken() !== 134283267) {\n                        parser.report(106);\n                    }\n                    if (scope) {\n                        tmpExportedNames.push(parser.tokenValue);\n                        tmpExportedBindings.push(tokenValue);\n                    }\n                    exported = parseModuleExportName(parser, context);\n                }\n                else {\n                    if (scope) {\n                        tmpExportedNames.push(parser.tokenValue);\n                        tmpExportedBindings.push(parser.tokenValue);\n                    }\n                    exported = local;\n                }\n                specifiers.push(parser.finishNode({\n                    type: 'ExportSpecifier',\n                    local,\n                    exported,\n                }, tokenStart));\n                if (parser.getToken() !== 1074790415)\n                    consume(parser, context, 18);\n            }\n            consume(parser, context, 1074790415);\n            if (consumeOpt(parser, context, 209011)) {\n                if (parser.getToken() !== 134283267)\n                    parser.report(105, 'Export');\n                source = parseLiteral(parser, context);\n                attributes = parseImportAttributes(parser, context);\n                if (scope) {\n                    tmpExportedNames.forEach((n) => parser.declareUnboundVariable(n));\n                }\n            }\n            else {\n                if (hasLiteralLocal) {\n                    parser.report(172);\n                }\n                if (scope) {\n                    tmpExportedNames.forEach((n) => parser.declareUnboundVariable(n));\n                    tmpExportedBindings.forEach((b) => parser.addBindingToExports(b));\n                }\n            }\n            matchOrInsertSemicolon(parser, context | 32);\n            break;\n        }\n        case 132:\n        case 86094:\n            declaration = parseClassDeclaration(parser, context, scope, undefined, 2);\n            break;\n        case 86104:\n            declaration = parseFunctionDeclaration(parser, context, scope, undefined, 4, 1, 2, 0, parser.tokenStart);\n            break;\n        case 241737:\n            declaration = parseLexicalDeclaration(parser, context, scope, undefined, 8, 64);\n            break;\n        case 86090:\n            declaration = parseLexicalDeclaration(parser, context, scope, undefined, 16, 64);\n            break;\n        case 86088:\n            declaration = parseVariableStatement(parser, context, scope, undefined, 64);\n            break;\n        case 209005: {\n            const { tokenStart } = parser;\n            nextToken(parser, context);\n            if ((parser.flags & 1) === 0 && parser.getToken() === 86104) {\n                declaration = parseFunctionDeclaration(parser, context, scope, undefined, 4, 1, 2, 1, tokenStart);\n                break;\n            }\n        }\n        default:\n            parser.report(30, KeywordDescTable[parser.getToken() & 255]);\n    }\n    const node = {\n        type: 'ExportNamedDeclaration',\n        declaration,\n        specifiers,\n        source,\n        attributes: attributes,\n    };\n    return parser.finishNode(node, start);\n}\nfunction parseExpression(parser, context, privateScope, canAssign, inGroup, start) {\n    let expr = parsePrimaryExpression(parser, context, privateScope, 2, 0, canAssign, inGroup, 1, start);\n    expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, inGroup, 0, start);\n    return parseAssignmentExpression(parser, context, privateScope, inGroup, 0, start, expr);\n}\nfunction parseSequenceExpression(parser, context, privateScope, inGroup, start, expr) {\n    const expressions = [expr];\n    while (consumeOpt(parser, context | 32, 18)) {\n        expressions.push(parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart));\n    }\n    return parser.finishNode({\n        type: 'SequenceExpression',\n        expressions,\n    }, start);\n}\nfunction parseExpressions(parser, context, privateScope, inGroup, canAssign, start) {\n    const expr = parseExpression(parser, context, privateScope, canAssign, inGroup, start);\n    return parser.getToken() === 18\n        ? parseSequenceExpression(parser, context, privateScope, inGroup, start, expr)\n        : expr;\n}\nfunction parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, start, left) {\n    const token = parser.getToken();\n    if ((token & 4194304) === 4194304) {\n        if (parser.assignable & 2)\n            parser.report(26);\n        if ((!isPattern && token === 1077936155 && left.type === 'ArrayExpression') ||\n            left.type === 'ObjectExpression') {\n            reinterpretToPattern(parser, left);\n        }\n        nextToken(parser, context | 32);\n        const right = parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart);\n        parser.assignable = 2;\n        return parser.finishNode(isPattern\n            ? {\n                type: 'AssignmentPattern',\n                left,\n                right,\n            }\n            : {\n                type: 'AssignmentExpression',\n                left,\n                operator: KeywordDescTable[token & 255],\n                right,\n            }, start);\n    }\n    if ((token & 8388608) === 8388608) {\n        left = parseBinaryExpression(parser, context, privateScope, inGroup, start, 4, token, left);\n    }\n    if (consumeOpt(parser, context | 32, 22)) {\n        left = parseConditionalExpression(parser, context, privateScope, left, start);\n    }\n    return left;\n}\nfunction parseAssignmentExpressionOrPattern(parser, context, privateScope, inGroup, isPattern, start, left) {\n    const token = parser.getToken();\n    nextToken(parser, context | 32);\n    const right = parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart);\n    left = parser.finishNode(isPattern\n        ? {\n            type: 'AssignmentPattern',\n            left,\n            right,\n        }\n        : {\n            type: 'AssignmentExpression',\n            left,\n            operator: KeywordDescTable[token & 255],\n            right,\n        }, start);\n    parser.assignable = 2;\n    return left;\n}\nfunction parseConditionalExpression(parser, context, privateScope, test, start) {\n    const consequent = parseExpression(parser, (context | 131072) ^ 131072, privateScope, 1, 0, parser.tokenStart);\n    consume(parser, context | 32, 21);\n    parser.assignable = 1;\n    const alternate = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'ConditionalExpression',\n        test,\n        consequent,\n        alternate,\n    }, start);\n}\nfunction parseBinaryExpression(parser, context, privateScope, inGroup, start, minPrecedence, operator, left) {\n    const bit = -((context & 131072) > 0) & 8673330;\n    let t;\n    let precedence;\n    parser.assignable = 2;\n    while (parser.getToken() & 8388608) {\n        t = parser.getToken();\n        precedence = t & 3840;\n        if ((t & 524288 && operator & 268435456) || (operator & 524288 && t & 268435456)) {\n            parser.report(165);\n        }\n        if (precedence + ((t === 8391735) << 8) - ((bit === t) << 12) <= minPrecedence)\n            break;\n        nextToken(parser, context | 32);\n        left = parser.finishNode({\n            type: t & 524288 || t & 268435456 ? 'LogicalExpression' : 'BinaryExpression',\n            left,\n            right: parseBinaryExpression(parser, context, privateScope, inGroup, parser.tokenStart, precedence, t, parseLeftHandSideExpression(parser, context, privateScope, 0, inGroup, 1)),\n            operator: KeywordDescTable[t & 255],\n        }, start);\n    }\n    if (parser.getToken() === 1077936155)\n        parser.report(26);\n    return left;\n}\nfunction parseUnaryExpression(parser, context, privateScope, isLHS, inGroup) {\n    if (!isLHS)\n        parser.report(0);\n    const { tokenStart } = parser;\n    const unaryOperator = parser.getToken();\n    nextToken(parser, context | 32);\n    const arg = parseLeftHandSideExpression(parser, context, privateScope, 0, inGroup, 1);\n    if (parser.getToken() === 8391735)\n        parser.report(33);\n    if (context & 1 && unaryOperator === 16863276) {\n        if (arg.type === 'Identifier') {\n            parser.report(121);\n        }\n        else if (isPropertyWithPrivateFieldKey(arg)) {\n            parser.report(127);\n        }\n    }\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'UnaryExpression',\n        operator: KeywordDescTable[unaryOperator & 255],\n        argument: arg,\n        prefix: true,\n    }, tokenStart);\n}\nfunction parseAsyncExpression(parser, context, privateScope, inGroup, isLHS, canAssign, inNew, start) {\n    const token = parser.getToken();\n    const expr = parseIdentifier(parser, context);\n    const { flags } = parser;\n    if ((flags & 1) === 0) {\n        if (parser.getToken() === 86104) {\n            return parseFunctionExpression(parser, context, privateScope, 1, inGroup, start);\n        }\n        if (isValidIdentifier(context, parser.getToken())) {\n            if (!isLHS)\n                parser.report(0);\n            if ((parser.getToken() & 36864) === 36864) {\n                parser.flags |= 256;\n            }\n            return parseAsyncArrowAfterIdent(parser, context, privateScope, canAssign, start);\n        }\n    }\n    if (!inNew && parser.getToken() === 67174411) {\n        return parseAsyncArrowOrCallExpression(parser, context, privateScope, expr, canAssign, 1, 0, flags, start);\n    }\n    if (parser.getToken() === 10) {\n        classifyIdentifier(parser, context, token);\n        if (inNew)\n            parser.report(51);\n        if ((token & 36864) === 36864) {\n            parser.flags |= 256;\n        }\n        return parseArrowFromIdentifier(parser, context, privateScope, parser.tokenValue, expr, inNew, canAssign, 0, start);\n    }\n    parser.assignable = 1;\n    return expr;\n}\nfunction parseYieldExpressionOrIdentifier(parser, context, privateScope, inGroup, canAssign, start) {\n    if (inGroup)\n        parser.destructible |= 256;\n    if (context & 1024) {\n        nextToken(parser, context | 32);\n        if (context & 8192)\n            parser.report(32);\n        if (!canAssign)\n            parser.report(26);\n        if (parser.getToken() === 22)\n            parser.report(124);\n        let argument = null;\n        let delegate = false;\n        if ((parser.flags & 1) === 0) {\n            delegate = consumeOpt(parser, context | 32, 8391476);\n            if (parser.getToken() & (12288 | 65536) || delegate) {\n                argument = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n            }\n        }\n        else if (parser.getToken() === 8391476) {\n            parser.report(30, KeywordDescTable[parser.getToken() & 255]);\n        }\n        parser.assignable = 2;\n        return parser.finishNode({\n            type: 'YieldExpression',\n            argument,\n            delegate,\n        }, start);\n    }\n    if (context & 1)\n        parser.report(97, 'yield');\n    return parseIdentifierOrArrow(parser, context, privateScope);\n}\nfunction parseAwaitExpressionOrIdentifier(parser, context, privateScope, inNew, inGroup, start) {\n    if (inGroup)\n        parser.destructible |= 128;\n    if (context & 524288)\n        parser.report(177);\n    const possibleIdentifierOrArrowFunc = parseIdentifierOrArrow(parser, context, privateScope);\n    const isIdentifier = possibleIdentifierOrArrowFunc.type === 'ArrowFunctionExpression' ||\n        (parser.getToken() & 65536) === 0;\n    if (isIdentifier) {\n        if (context & 2048)\n            throw new ParseError(start, { index: parser.startIndex, line: parser.startLine, column: parser.startColumn }, 176);\n        if (context & 2)\n            throw new ParseError(start, { index: parser.startIndex, line: parser.startLine, column: parser.startColumn }, 110);\n        if (context & 8192 && context & 2048)\n            throw new ParseError(start, { index: parser.startIndex, line: parser.startLine, column: parser.startColumn }, 110);\n        return possibleIdentifierOrArrowFunc;\n    }\n    if (context & 8192) {\n        throw new ParseError(start, { index: parser.startIndex, line: parser.startLine, column: parser.startColumn }, 31);\n    }\n    if (context & 2048 || (context & 2 && context & 8)) {\n        if (inNew)\n            throw new ParseError(start, { index: parser.startIndex, line: parser.startLine, column: parser.startColumn }, 0);\n        const argument = parseLeftHandSideExpression(parser, context, privateScope, 0, 0, 1);\n        if (parser.getToken() === 8391735)\n            parser.report(33);\n        parser.assignable = 2;\n        return parser.finishNode({\n            type: 'AwaitExpression',\n            argument,\n        }, start);\n    }\n    if (context & 2)\n        throw new ParseError(start, { index: parser.startIndex, line: parser.startLine, column: parser.startColumn }, 98);\n    return possibleIdentifierOrArrowFunc;\n}\nfunction parseFunctionBody(parser, context, scope, privateScope, origin, funcNameToken, functionScope) {\n    const { tokenStart } = parser;\n    consume(parser, context | 32, 2162700);\n    const body = [];\n    if (parser.getToken() !== 1074790415) {\n        while (parser.getToken() === 134283267) {\n            const { index, tokenStart, tokenIndex, tokenValue } = parser;\n            const token = parser.getToken();\n            const expr = parseLiteral(parser, context);\n            if (isValidStrictMode(parser, index, tokenIndex, tokenValue)) {\n                context |= 1;\n                if (parser.flags & 128) {\n                    throw new ParseError(tokenStart, parser.currentLocation, 66);\n                }\n                if (parser.flags & 64) {\n                    throw new ParseError(tokenStart, parser.currentLocation, 9);\n                }\n                if (parser.flags & 4096) {\n                    throw new ParseError(tokenStart, parser.currentLocation, 15);\n                }\n                functionScope?.reportScopeError();\n            }\n            body.push(parseDirective(parser, context, expr, token, tokenStart));\n        }\n        if (context & 1) {\n            if (funcNameToken) {\n                if ((funcNameToken & 537079808) === 537079808) {\n                    parser.report(119);\n                }\n                if ((funcNameToken & 36864) === 36864) {\n                    parser.report(40);\n                }\n            }\n            if (parser.flags & 512)\n                parser.report(119);\n            if (parser.flags & 256)\n                parser.report(118);\n        }\n    }\n    parser.flags =\n        (parser.flags | 512 | 256 | 64 | 4096) ^\n            (512 | 256 | 64 | 4096);\n    parser.destructible = (parser.destructible | 256) ^ 256;\n    while (parser.getToken() !== 1074790415) {\n        body.push(parseStatementListItem(parser, context, scope, privateScope, 4, {}));\n    }\n    consume(parser, origin & (16 | 8) ? context | 32 : context, 1074790415);\n    parser.flags &= -4289;\n    if (parser.getToken() === 1077936155)\n        parser.report(26);\n    return parser.finishNode({\n        type: 'BlockStatement',\n        body,\n    }, tokenStart);\n}\nfunction parseSuperExpression(parser, context) {\n    const { tokenStart } = parser;\n    nextToken(parser, context);\n    switch (parser.getToken()) {\n        case 67108990:\n            parser.report(167);\n        case 67174411: {\n            if ((context & 512) === 0)\n                parser.report(28);\n            parser.assignable = 2;\n            break;\n        }\n        case 69271571:\n        case 67108877: {\n            if ((context & 256) === 0)\n                parser.report(29);\n            parser.assignable = 1;\n            break;\n        }\n        default:\n            parser.report(30, 'super');\n    }\n    return parser.finishNode({ type: 'Super' }, tokenStart);\n}\nfunction parseLeftHandSideExpression(parser, context, privateScope, canAssign, inGroup, isLHS) {\n    const start = parser.tokenStart;\n    const expression = parsePrimaryExpression(parser, context, privateScope, 2, 0, canAssign, inGroup, isLHS, start);\n    return parseMemberOrUpdateExpression(parser, context, privateScope, expression, inGroup, 0, start);\n}\nfunction parseUpdateExpression(parser, context, expr, start) {\n    if (parser.assignable & 2)\n        parser.report(55);\n    const token = parser.getToken();\n    nextToken(parser, context);\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'UpdateExpression',\n        argument: expr,\n        operator: KeywordDescTable[token & 255],\n        prefix: false,\n    }, start);\n}\nfunction parseMemberOrUpdateExpression(parser, context, privateScope, expr, inGroup, inChain, start) {\n    if ((parser.getToken() & 33619968) === 33619968 && (parser.flags & 1) === 0) {\n        expr = parseUpdateExpression(parser, context, expr, start);\n    }\n    else if ((parser.getToken() & 67108864) === 67108864) {\n        context = (context | 131072) ^ 131072;\n        switch (parser.getToken()) {\n            case 67108877: {\n                nextToken(parser, (context | 262144 | 8) ^ 8);\n                if (context & 16 && parser.getToken() === 130 && parser.tokenValue === 'super') {\n                    parser.report(173);\n                }\n                parser.assignable = 1;\n                const property = parsePropertyOrPrivatePropertyName(parser, context | 64, privateScope);\n                expr = parser.finishNode({\n                    type: 'MemberExpression',\n                    object: expr,\n                    computed: false,\n                    property,\n                    optional: false,\n                }, start);\n                break;\n            }\n            case 69271571: {\n                let restoreHasOptionalChaining = false;\n                if ((parser.flags & 2048) === 2048) {\n                    restoreHasOptionalChaining = true;\n                    parser.flags = (parser.flags | 2048) ^ 2048;\n                }\n                nextToken(parser, context | 32);\n                const { tokenStart } = parser;\n                const property = parseExpressions(parser, context, privateScope, inGroup, 1, tokenStart);\n                consume(parser, context, 20);\n                parser.assignable = 1;\n                expr = parser.finishNode({\n                    type: 'MemberExpression',\n                    object: expr,\n                    computed: true,\n                    property,\n                    optional: false,\n                }, start);\n                if (restoreHasOptionalChaining) {\n                    parser.flags |= 2048;\n                }\n                break;\n            }\n            case 67174411: {\n                if ((parser.flags & 1024) === 1024) {\n                    parser.flags = (parser.flags | 1024) ^ 1024;\n                    return expr;\n                }\n                let restoreHasOptionalChaining = false;\n                if ((parser.flags & 2048) === 2048) {\n                    restoreHasOptionalChaining = true;\n                    parser.flags = (parser.flags | 2048) ^ 2048;\n                }\n                const args = parseArguments(parser, context, privateScope, inGroup);\n                parser.assignable = 2;\n                expr = parser.finishNode({\n                    type: 'CallExpression',\n                    callee: expr,\n                    arguments: args,\n                    optional: false,\n                }, start);\n                if (restoreHasOptionalChaining) {\n                    parser.flags |= 2048;\n                }\n                break;\n            }\n            case 67108990: {\n                nextToken(parser, (context | 262144 | 8) ^ 8);\n                parser.flags |= 2048;\n                parser.assignable = 2;\n                expr = parseOptionalChain(parser, context, privateScope, expr, start);\n                break;\n            }\n            default:\n                if ((parser.flags & 2048) === 2048) {\n                    parser.report(166);\n                }\n                parser.assignable = 2;\n                expr = parser.finishNode({\n                    type: 'TaggedTemplateExpression',\n                    tag: expr,\n                    quasi: parser.getToken() === 67174408\n                        ? parseTemplate(parser, context | 64, privateScope)\n                        : parseTemplateLiteral(parser, context),\n                }, start);\n        }\n        expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 0, 1, start);\n    }\n    if (inChain === 0 && (parser.flags & 2048) === 2048) {\n        parser.flags = (parser.flags | 2048) ^ 2048;\n        expr = parser.finishNode({\n            type: 'ChainExpression',\n            expression: expr,\n        }, start);\n    }\n    return expr;\n}\nfunction parseOptionalChain(parser, context, privateScope, expr, start) {\n    let restoreHasOptionalChaining = false;\n    let node;\n    if (parser.getToken() === 69271571 || parser.getToken() === 67174411) {\n        if ((parser.flags & 2048) === 2048) {\n            restoreHasOptionalChaining = true;\n            parser.flags = (parser.flags | 2048) ^ 2048;\n        }\n    }\n    if (parser.getToken() === 69271571) {\n        nextToken(parser, context | 32);\n        const { tokenStart } = parser;\n        const property = parseExpressions(parser, context, privateScope, 0, 1, tokenStart);\n        consume(parser, context, 20);\n        parser.assignable = 2;\n        node = parser.finishNode({\n            type: 'MemberExpression',\n            object: expr,\n            computed: true,\n            optional: true,\n            property,\n        }, start);\n    }\n    else if (parser.getToken() === 67174411) {\n        const args = parseArguments(parser, context, privateScope, 0);\n        parser.assignable = 2;\n        node = parser.finishNode({\n            type: 'CallExpression',\n            callee: expr,\n            arguments: args,\n            optional: true,\n        }, start);\n    }\n    else {\n        const property = parsePropertyOrPrivatePropertyName(parser, context, privateScope);\n        parser.assignable = 2;\n        node = parser.finishNode({\n            type: 'MemberExpression',\n            object: expr,\n            computed: false,\n            optional: true,\n            property,\n        }, start);\n    }\n    if (restoreHasOptionalChaining) {\n        parser.flags |= 2048;\n    }\n    return node;\n}\nfunction parsePropertyOrPrivatePropertyName(parser, context, privateScope) {\n    if ((parser.getToken() & 143360) === 0 &&\n        parser.getToken() !== -2147483528 &&\n        parser.getToken() !== -2147483527 &&\n        parser.getToken() !== 130) {\n        parser.report(160);\n    }\n    return parser.getToken() === 130\n        ? parsePrivateIdentifier(parser, context, privateScope, 0)\n        : parseIdentifier(parser, context);\n}\nfunction parseUpdateExpressionPrefixed(parser, context, privateScope, inNew, isLHS, start) {\n    if (inNew)\n        parser.report(56);\n    if (!isLHS)\n        parser.report(0);\n    const token = parser.getToken();\n    nextToken(parser, context | 32);\n    const arg = parseLeftHandSideExpression(parser, context, privateScope, 0, 0, 1);\n    if (parser.assignable & 2) {\n        parser.report(55);\n    }\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'UpdateExpression',\n        argument: arg,\n        operator: KeywordDescTable[token & 255],\n        prefix: true,\n    }, start);\n}\nfunction parsePrimaryExpression(parser, context, privateScope, kind, inNew, canAssign, inGroup, isLHS, start) {\n    if ((parser.getToken() & 143360) === 143360) {\n        switch (parser.getToken()) {\n            case 209006:\n                return parseAwaitExpressionOrIdentifier(parser, context, privateScope, inNew, inGroup, start);\n            case 241771:\n                return parseYieldExpressionOrIdentifier(parser, context, privateScope, inGroup, canAssign, start);\n            case 209005:\n                return parseAsyncExpression(parser, context, privateScope, inGroup, isLHS, canAssign, inNew, start);\n        }\n        const { tokenValue } = parser;\n        const token = parser.getToken();\n        const expr = parseIdentifier(parser, context | 64);\n        if (parser.getToken() === 10) {\n            if (!isLHS)\n                parser.report(0);\n            classifyIdentifier(parser, context, token);\n            if ((token & 36864) === 36864) {\n                parser.flags |= 256;\n            }\n            return parseArrowFromIdentifier(parser, context, privateScope, tokenValue, expr, inNew, canAssign, 0, start);\n        }\n        if (context & 16 &&\n            !(context & 32768) &&\n            !(context & 8192) &&\n            parser.tokenValue === 'arguments')\n            parser.report(130);\n        if ((token & 255) === (241737 & 255)) {\n            if (context & 1)\n                parser.report(113);\n            if (kind & (8 | 16))\n                parser.report(100);\n        }\n        parser.assignable =\n            context & 1 && (token & 537079808) === 537079808\n                ? 2\n                : 1;\n        return expr;\n    }\n    if ((parser.getToken() & 134217728) === 134217728) {\n        return parseLiteral(parser, context);\n    }\n    switch (parser.getToken()) {\n        case 33619993:\n        case 33619994:\n            return parseUpdateExpressionPrefixed(parser, context, privateScope, inNew, isLHS, start);\n        case 16863276:\n        case 16842798:\n        case 16842799:\n        case 25233968:\n        case 25233969:\n        case 16863275:\n        case 16863277:\n            return parseUnaryExpression(parser, context, privateScope, isLHS, inGroup);\n        case 86104:\n            return parseFunctionExpression(parser, context, privateScope, 0, inGroup, start);\n        case 2162700:\n            return parseObjectLiteral(parser, context, privateScope, canAssign ? 0 : 1, inGroup);\n        case 69271571:\n            return parseArrayLiteral(parser, context, privateScope, canAssign ? 0 : 1, inGroup);\n        case 67174411:\n            return parseParenthesizedExpression(parser, context | 64, privateScope, canAssign, 1, 0, start);\n        case 86021:\n        case 86022:\n        case 86023:\n            return parseNullOrTrueOrFalseLiteral(parser, context);\n        case 86111:\n            return parseThisExpression(parser, context);\n        case 65540:\n            return parseRegExpLiteral(parser, context);\n        case 132:\n        case 86094:\n            return parseClassExpression(parser, context, privateScope, inGroup, start);\n        case 86109:\n            return parseSuperExpression(parser, context);\n        case 67174409:\n            return parseTemplateLiteral(parser, context);\n        case 67174408:\n            return parseTemplate(parser, context, privateScope);\n        case 86107:\n            return parseNewExpression(parser, context, privateScope, inGroup);\n        case 134283388:\n            return parseBigIntLiteral(parser, context);\n        case 130:\n            return parsePrivateIdentifier(parser, context, privateScope, 0);\n        case 86106:\n            return parseImportCallOrMetaExpression(parser, context, privateScope, inNew, inGroup, start);\n        case 8456256:\n            if (parser.options.jsx)\n                return parseJSXRootElementOrFragment(parser, context, privateScope, 0, parser.tokenStart);\n        default:\n            if (isValidIdentifier(context, parser.getToken()))\n                return parseIdentifierOrArrow(parser, context, privateScope);\n            parser.report(30, KeywordDescTable[parser.getToken() & 255]);\n    }\n}\nfunction parseImportCallOrMetaExpression(parser, context, privateScope, inNew, inGroup, start) {\n    let expr = parseIdentifier(parser, context);\n    if (parser.getToken() === 67108877) {\n        return parseImportMetaExpression(parser, context, expr, start);\n    }\n    if (inNew)\n        parser.report(142);\n    expr = parseImportExpression(parser, context, privateScope, inGroup, start);\n    parser.assignable = 2;\n    return parseMemberOrUpdateExpression(parser, context, privateScope, expr, inGroup, 0, start);\n}\nfunction parseImportMetaExpression(parser, context, meta, start) {\n    if ((context & 2) === 0)\n        parser.report(169);\n    nextToken(parser, context);\n    const token = parser.getToken();\n    if (token !== 209030 && parser.tokenValue !== 'meta') {\n        parser.report(174);\n    }\n    else if (token & -2147483648) {\n        parser.report(175);\n    }\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'MetaProperty',\n        meta,\n        property: parseIdentifier(parser, context),\n    }, start);\n}\nfunction parseImportExpression(parser, context, privateScope, inGroup, start) {\n    consume(parser, context | 32, 67174411);\n    if (parser.getToken() === 14)\n        parser.report(143);\n    const source = parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart);\n    let options = null;\n    if (parser.getToken() === 18) {\n        consume(parser, context, 18);\n        if (parser.getToken() !== 16) {\n            const expContext = (context | 131072) ^ 131072;\n            options = parseExpression(parser, expContext, privateScope, 1, inGroup, parser.tokenStart);\n        }\n        consumeOpt(parser, context, 18);\n    }\n    const node = {\n        type: 'ImportExpression',\n        source,\n        options,\n    };\n    consume(parser, context, 16);\n    return parser.finishNode(node, start);\n}\nfunction parseImportAttributes(parser, context) {\n    if (!consumeOpt(parser, context, 20579))\n        return [];\n    consume(parser, context, 2162700);\n    const attributes = [];\n    const keysContent = new Set();\n    while (parser.getToken() !== 1074790415) {\n        const start = parser.tokenStart;\n        const key = parseIdentifierOrStringLiteral(parser, context);\n        consume(parser, context, 21);\n        const value = parseStringLiteral(parser, context);\n        const keyContent = key.type === 'Literal' ? key.value : key.name;\n        if (keysContent.has(keyContent)) {\n            parser.report(145, `${keyContent}`);\n        }\n        keysContent.add(keyContent);\n        attributes.push(parser.finishNode({\n            type: 'ImportAttribute',\n            key,\n            value,\n        }, start));\n        if (parser.getToken() !== 1074790415) {\n            consume(parser, context, 18);\n        }\n    }\n    consume(parser, context, 1074790415);\n    return attributes;\n}\nfunction parseStringLiteral(parser, context) {\n    if (parser.getToken() === 134283267) {\n        return parseLiteral(parser, context);\n    }\n    else {\n        parser.report(30, KeywordDescTable[parser.getToken() & 255]);\n    }\n}\nfunction parseIdentifierOrStringLiteral(parser, context) {\n    if (parser.getToken() === 134283267) {\n        return parseLiteral(parser, context);\n    }\n    else if (parser.getToken() & 143360) {\n        return parseIdentifier(parser, context);\n    }\n    else {\n        parser.report(30, KeywordDescTable[parser.getToken() & 255]);\n    }\n}\nfunction validateStringWellFormed(parser, str) {\n    const len = str.length;\n    for (let i = 0; i < len; i++) {\n        const code = str.charCodeAt(i);\n        if ((code & 0xfc00) !== 55296)\n            continue;\n        if (code > 56319 || ++i >= len || (str.charCodeAt(i) & 0xfc00) !== 56320) {\n            parser.report(171, JSON.stringify(str.charAt(i--)));\n        }\n    }\n}\nfunction parseModuleExportName(parser, context) {\n    if (parser.getToken() === 134283267) {\n        validateStringWellFormed(parser, parser.tokenValue);\n        return parseLiteral(parser, context);\n    }\n    else if (parser.getToken() & 143360) {\n        return parseIdentifier(parser, context);\n    }\n    else {\n        parser.report(30, KeywordDescTable[parser.getToken() & 255]);\n    }\n}\nfunction parseBigIntLiteral(parser, context) {\n    const { tokenRaw, tokenValue, tokenStart } = parser;\n    nextToken(parser, context);\n    parser.assignable = 2;\n    const node = {\n        type: 'Literal',\n        value: tokenValue,\n        bigint: String(tokenValue),\n    };\n    if (parser.options.raw) {\n        node.raw = tokenRaw;\n    }\n    return parser.finishNode(node, tokenStart);\n}\nfunction parseTemplateLiteral(parser, context) {\n    parser.assignable = 2;\n    const { tokenValue, tokenRaw, tokenStart } = parser;\n    consume(parser, context, 67174409);\n    const quasis = [parseTemplateElement(parser, tokenValue, tokenRaw, tokenStart, true)];\n    return parser.finishNode({\n        type: 'TemplateLiteral',\n        expressions: [],\n        quasis,\n    }, tokenStart);\n}\nfunction parseTemplate(parser, context, privateScope) {\n    context = (context | 131072) ^ 131072;\n    const { tokenValue, tokenRaw, tokenStart } = parser;\n    consume(parser, (context & -65) | 32, 67174408);\n    const quasis = [parseTemplateElement(parser, tokenValue, tokenRaw, tokenStart, false)];\n    const expressions = [\n        parseExpressions(parser, context & -65, privateScope, 0, 1, parser.tokenStart),\n    ];\n    if (parser.getToken() !== 1074790415)\n        parser.report(83);\n    while (parser.setToken(scanTemplateTail(parser, context), true) !== 67174409) {\n        const { tokenValue, tokenRaw, tokenStart } = parser;\n        consume(parser, (context & -65) | 32, 67174408);\n        quasis.push(parseTemplateElement(parser, tokenValue, tokenRaw, tokenStart, false));\n        expressions.push(parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart));\n        if (parser.getToken() !== 1074790415)\n            parser.report(83);\n    }\n    {\n        const { tokenValue, tokenRaw, tokenStart } = parser;\n        consume(parser, context, 67174409);\n        quasis.push(parseTemplateElement(parser, tokenValue, tokenRaw, tokenStart, true));\n    }\n    return parser.finishNode({\n        type: 'TemplateLiteral',\n        expressions,\n        quasis,\n    }, tokenStart);\n}\nfunction parseTemplateElement(parser, cooked, raw, start, tail) {\n    const node = parser.finishNode({\n        type: 'TemplateElement',\n        value: {\n            cooked,\n            raw,\n        },\n        tail,\n    }, start);\n    const tailSize = tail ? 1 : 2;\n    if (parser.options.ranges) {\n        node.start += 1;\n        node.range[0] += 1;\n        node.end -= tailSize;\n        node.range[1] -= tailSize;\n    }\n    if (parser.options.loc) {\n        node.loc.start.column += 1;\n        node.loc.end.column -= tailSize;\n    }\n    return node;\n}\nfunction parseSpreadElement(parser, context, privateScope) {\n    const start = parser.tokenStart;\n    context = (context | 131072) ^ 131072;\n    consume(parser, context | 32, 14);\n    const argument = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n    parser.assignable = 1;\n    return parser.finishNode({\n        type: 'SpreadElement',\n        argument,\n    }, start);\n}\nfunction parseArguments(parser, context, privateScope, inGroup) {\n    nextToken(parser, context | 32);\n    const args = [];\n    if (parser.getToken() === 16) {\n        nextToken(parser, context | 64);\n        return args;\n    }\n    while (parser.getToken() !== 16) {\n        if (parser.getToken() === 14) {\n            args.push(parseSpreadElement(parser, context, privateScope));\n        }\n        else {\n            args.push(parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart));\n        }\n        if (parser.getToken() !== 18)\n            break;\n        nextToken(parser, context | 32);\n        if (parser.getToken() === 16)\n            break;\n    }\n    consume(parser, context | 64, 16);\n    return args;\n}\nfunction parseIdentifier(parser, context) {\n    const { tokenValue, tokenStart } = parser;\n    const allowRegex = tokenValue === 'await' && (parser.getToken() & -2147483648) === 0;\n    nextToken(parser, context | (allowRegex ? 32 : 0));\n    return parser.finishNode({\n        type: 'Identifier',\n        name: tokenValue,\n    }, tokenStart);\n}\nfunction parseLiteral(parser, context) {\n    const { tokenValue, tokenRaw, tokenStart } = parser;\n    if (parser.getToken() === 134283388) {\n        return parseBigIntLiteral(parser, context);\n    }\n    nextToken(parser, context);\n    parser.assignable = 2;\n    return parser.finishNode(parser.options.raw\n        ? {\n            type: 'Literal',\n            value: tokenValue,\n            raw: tokenRaw,\n        }\n        : {\n            type: 'Literal',\n            value: tokenValue,\n        }, tokenStart);\n}\nfunction parseNullOrTrueOrFalseLiteral(parser, context) {\n    const start = parser.tokenStart;\n    const raw = KeywordDescTable[parser.getToken() & 255];\n    const value = parser.getToken() === 86023 ? null : raw === 'true';\n    nextToken(parser, context);\n    parser.assignable = 2;\n    return parser.finishNode(parser.options.raw\n        ? {\n            type: 'Literal',\n            value,\n            raw,\n        }\n        : {\n            type: 'Literal',\n            value,\n        }, start);\n}\nfunction parseThisExpression(parser, context) {\n    const { tokenStart } = parser;\n    nextToken(parser, context);\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'ThisExpression',\n    }, tokenStart);\n}\nfunction parseFunctionDeclaration(parser, context, scope, privateScope, origin, allowGen, flags, isAsync, start) {\n    nextToken(parser, context | 32);\n    const isGenerator = allowGen ? optionalBit(parser, context, 8391476) : 0;\n    let id = null;\n    let funcNameToken;\n    let functionScope = scope ? parser.createScope() : void 0;\n    if (parser.getToken() === 67174411) {\n        if ((flags & 1) === 0)\n            parser.report(39, 'Function');\n    }\n    else {\n        const kind = origin & 4 && ((context & 8) === 0 || (context & 2) === 0)\n            ? 4\n            : 64 | (isAsync ? 1024 : 0) | (isGenerator ? 1024 : 0);\n        validateFunctionName(parser, context, parser.getToken());\n        if (scope) {\n            if (kind & 4) {\n                scope.addVarName(context, parser.tokenValue, kind);\n            }\n            else {\n                scope.addBlockName(context, parser.tokenValue, kind, origin);\n            }\n            functionScope = functionScope?.createChildScope(128);\n            if (flags) {\n                if (flags & 2) {\n                    parser.declareUnboundVariable(parser.tokenValue);\n                }\n            }\n        }\n        funcNameToken = parser.getToken();\n        if (parser.getToken() & 143360) {\n            id = parseIdentifier(parser, context);\n        }\n        else {\n            parser.report(30, KeywordDescTable[parser.getToken() & 255]);\n        }\n    }\n    {\n        const modifierFlags = 256 |\n            512 |\n            1024 |\n            2048 |\n            8192 |\n            16384;\n        context =\n            ((context | modifierFlags) ^ modifierFlags) |\n                65536 |\n                (isAsync ? 2048 : 0) |\n                (isGenerator ? 1024 : 0) |\n                (isGenerator ? 0 : 262144);\n    }\n    functionScope = functionScope?.createChildScope(256);\n    const params = parseFormalParametersOrFormalList(parser, (context | 8192) & -524289, functionScope, privateScope, 0, 1);\n    const modifierFlags = 8 | 4 | 128 | 524288;\n    const body = parseFunctionBody(parser, ((context | modifierFlags) ^ modifierFlags) | 32768 | 4096, functionScope?.createChildScope(64), privateScope, 8, funcNameToken, functionScope);\n    return parser.finishNode({\n        type: 'FunctionDeclaration',\n        id,\n        params,\n        body,\n        async: isAsync === 1,\n        generator: isGenerator === 1,\n    }, start);\n}\nfunction parseFunctionExpression(parser, context, privateScope, isAsync, inGroup, start) {\n    nextToken(parser, context | 32);\n    const isGenerator = optionalBit(parser, context, 8391476);\n    const generatorAndAsyncFlags = (isAsync ? 2048 : 0) | (isGenerator ? 1024 : 0);\n    let id = null;\n    let funcNameToken;\n    let scope = parser.createScopeIfLexical();\n    const modifierFlags = 256 |\n        512 |\n        1024 |\n        2048 |\n        8192 |\n        16384 |\n        524288;\n    if (parser.getToken() & 143360) {\n        validateFunctionName(parser, ((context | modifierFlags) ^ modifierFlags) | generatorAndAsyncFlags, parser.getToken());\n        scope = scope?.createChildScope(128);\n        funcNameToken = parser.getToken();\n        id = parseIdentifier(parser, context);\n    }\n    context =\n        ((context | modifierFlags) ^ modifierFlags) |\n            65536 |\n            generatorAndAsyncFlags |\n            (isGenerator ? 0 : 262144);\n    scope = scope?.createChildScope(256);\n    const params = parseFormalParametersOrFormalList(parser, (context | 8192) & -524289, scope, privateScope, inGroup, 1);\n    const body = parseFunctionBody(parser, (context & -131229) |\n        32768 |\n        4096, scope?.createChildScope(64), privateScope, 0, funcNameToken, scope);\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'FunctionExpression',\n        id,\n        params,\n        body,\n        async: isAsync === 1,\n        generator: isGenerator === 1,\n    }, start);\n}\nfunction parseArrayLiteral(parser, context, privateScope, skipInitializer, inGroup) {\n    const expr = parseArrayExpressionOrPattern(parser, context, void 0, privateScope, skipInitializer, inGroup, 0, 2, 0);\n    if (parser.destructible & 64) {\n        parser.report(63);\n    }\n    if (parser.destructible & 8) {\n        parser.report(62);\n    }\n    return expr;\n}\nfunction parseArrayExpressionOrPattern(parser, context, scope, privateScope, skipInitializer, inGroup, isPattern, kind, origin) {\n    const { tokenStart: start } = parser;\n    nextToken(parser, context | 32);\n    const elements = [];\n    let destructible = 0;\n    context = (context | 131072) ^ 131072;\n    while (parser.getToken() !== 20) {\n        if (consumeOpt(parser, context | 32, 18)) {\n            elements.push(null);\n        }\n        else {\n            let left;\n            const { tokenStart, tokenValue } = parser;\n            const token = parser.getToken();\n            if (token & 143360) {\n                left = parsePrimaryExpression(parser, context, privateScope, kind, 0, 1, inGroup, 1, tokenStart);\n                if (parser.getToken() === 1077936155) {\n                    if (parser.assignable & 2)\n                        parser.report(26);\n                    nextToken(parser, context | 32);\n                    scope?.addVarOrBlock(context, tokenValue, kind, origin);\n                    const right = parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart);\n                    left = parser.finishNode(isPattern\n                        ? {\n                            type: 'AssignmentPattern',\n                            left,\n                            right,\n                        }\n                        : {\n                            type: 'AssignmentExpression',\n                            operator: '=',\n                            left,\n                            right,\n                        }, tokenStart);\n                    destructible |=\n                        parser.destructible & 256\n                            ? 256\n                            : 0 | (parser.destructible & 128)\n                                ? 128\n                                : 0;\n                }\n                else if (parser.getToken() === 18 || parser.getToken() === 20) {\n                    if (parser.assignable & 2) {\n                        destructible |= 16;\n                    }\n                    else {\n                        scope?.addVarOrBlock(context, tokenValue, kind, origin);\n                    }\n                    destructible |=\n                        parser.destructible & 256\n                            ? 256\n                            : 0 | (parser.destructible & 128)\n                                ? 128\n                                : 0;\n                }\n                else {\n                    destructible |=\n                        kind & 1\n                            ? 32\n                            : (kind & 2) === 0\n                                ? 16\n                                : 0;\n                    left = parseMemberOrUpdateExpression(parser, context, privateScope, left, inGroup, 0, tokenStart);\n                    if (parser.getToken() !== 18 && parser.getToken() !== 20) {\n                        if (parser.getToken() !== 1077936155)\n                            destructible |= 16;\n                        left = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, left);\n                    }\n                    else if (parser.getToken() !== 1077936155) {\n                        destructible |=\n                            parser.assignable & 2\n                                ? 16\n                                : 32;\n                    }\n                }\n            }\n            else if (token & 2097152) {\n                left =\n                    parser.getToken() === 2162700\n                        ? parseObjectLiteralOrPattern(parser, context, scope, privateScope, 0, inGroup, isPattern, kind, origin)\n                        : parseArrayExpressionOrPattern(parser, context, scope, privateScope, 0, inGroup, isPattern, kind, origin);\n                destructible |= parser.destructible;\n                parser.assignable =\n                    parser.destructible & 16\n                        ? 2\n                        : 1;\n                if (parser.getToken() === 18 || parser.getToken() === 20) {\n                    if (parser.assignable & 2) {\n                        destructible |= 16;\n                    }\n                }\n                else if (parser.destructible & 8) {\n                    parser.report(71);\n                }\n                else {\n                    left = parseMemberOrUpdateExpression(parser, context, privateScope, left, inGroup, 0, tokenStart);\n                    destructible = parser.assignable & 2 ? 16 : 0;\n                    if (parser.getToken() !== 18 && parser.getToken() !== 20) {\n                        left = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, left);\n                    }\n                    else if (parser.getToken() !== 1077936155) {\n                        destructible |=\n                            parser.assignable & 2\n                                ? 16\n                                : 32;\n                    }\n                }\n            }\n            else if (token === 14) {\n                left = parseSpreadOrRestElement(parser, context, scope, privateScope, 20, kind, origin, 0, inGroup, isPattern);\n                destructible |= parser.destructible;\n                if (parser.getToken() !== 18 && parser.getToken() !== 20)\n                    parser.report(30, KeywordDescTable[parser.getToken() & 255]);\n            }\n            else {\n                left = parseLeftHandSideExpression(parser, context, privateScope, 1, 0, 1);\n                if (parser.getToken() !== 18 && parser.getToken() !== 20) {\n                    left = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, left);\n                    if ((kind & (2 | 1)) === 0 && token === 67174411)\n                        destructible |= 16;\n                }\n                else if (parser.assignable & 2) {\n                    destructible |= 16;\n                }\n                else if (token === 67174411) {\n                    destructible |=\n                        parser.assignable & 1 && kind & (2 | 1)\n                            ? 32\n                            : 16;\n                }\n            }\n            elements.push(left);\n            if (consumeOpt(parser, context | 32, 18)) {\n                if (parser.getToken() === 20)\n                    break;\n            }\n            else\n                break;\n        }\n    }\n    consume(parser, context, 20);\n    const node = parser.finishNode({\n        type: isPattern ? 'ArrayPattern' : 'ArrayExpression',\n        elements,\n    }, start);\n    if (!skipInitializer && parser.getToken() & 4194304) {\n        return parseArrayOrObjectAssignmentPattern(parser, context, privateScope, destructible, inGroup, isPattern, start, node);\n    }\n    parser.destructible = destructible;\n    return node;\n}\nfunction parseArrayOrObjectAssignmentPattern(parser, context, privateScope, destructible, inGroup, isPattern, start, node) {\n    if (parser.getToken() !== 1077936155)\n        parser.report(26);\n    nextToken(parser, context | 32);\n    if (destructible & 16)\n        parser.report(26);\n    if (!isPattern)\n        reinterpretToPattern(parser, node);\n    const { tokenStart } = parser;\n    const right = parseExpression(parser, context, privateScope, 1, inGroup, tokenStart);\n    parser.destructible =\n        ((destructible | 64 | 8) ^\n            (8 | 64)) |\n            (parser.destructible & 128 ? 128 : 0) |\n            (parser.destructible & 256 ? 256 : 0);\n    return parser.finishNode(isPattern\n        ? {\n            type: 'AssignmentPattern',\n            left: node,\n            right,\n        }\n        : {\n            type: 'AssignmentExpression',\n            left: node,\n            operator: '=',\n            right,\n        }, start);\n}\nfunction parseSpreadOrRestElement(parser, context, scope, privateScope, closingToken, kind, origin, isAsync, inGroup, isPattern) {\n    const { tokenStart: start } = parser;\n    nextToken(parser, context | 32);\n    let argument = null;\n    let destructible = 0;\n    const { tokenValue, tokenStart } = parser;\n    let token = parser.getToken();\n    if (token & 143360) {\n        parser.assignable = 1;\n        argument = parsePrimaryExpression(parser, context, privateScope, kind, 0, 1, inGroup, 1, tokenStart);\n        token = parser.getToken();\n        argument = parseMemberOrUpdateExpression(parser, context, privateScope, argument, inGroup, 0, tokenStart);\n        if (parser.getToken() !== 18 && parser.getToken() !== closingToken) {\n            if (parser.assignable & 2 && parser.getToken() === 1077936155)\n                parser.report(71);\n            destructible |= 16;\n            argument = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, argument);\n        }\n        if (parser.assignable & 2) {\n            destructible |= 16;\n        }\n        else if (token === closingToken || token === 18) {\n            scope?.addVarOrBlock(context, tokenValue, kind, origin);\n        }\n        else {\n            destructible |= 32;\n        }\n        destructible |= parser.destructible & 128 ? 128 : 0;\n    }\n    else if (token === closingToken) {\n        parser.report(41);\n    }\n    else if (token & 2097152) {\n        argument =\n            parser.getToken() === 2162700\n                ? parseObjectLiteralOrPattern(parser, context, scope, privateScope, 1, inGroup, isPattern, kind, origin)\n                : parseArrayExpressionOrPattern(parser, context, scope, privateScope, 1, inGroup, isPattern, kind, origin);\n        token = parser.getToken();\n        if (token !== 1077936155 && token !== closingToken && token !== 18) {\n            if (parser.destructible & 8)\n                parser.report(71);\n            argument = parseMemberOrUpdateExpression(parser, context, privateScope, argument, inGroup, 0, tokenStart);\n            destructible |= parser.assignable & 2 ? 16 : 0;\n            if ((parser.getToken() & 4194304) === 4194304) {\n                if (parser.getToken() !== 1077936155)\n                    destructible |= 16;\n                argument = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, argument);\n            }\n            else {\n                if ((parser.getToken() & 8388608) === 8388608) {\n                    argument = parseBinaryExpression(parser, context, privateScope, 1, tokenStart, 4, token, argument);\n                }\n                if (consumeOpt(parser, context | 32, 22)) {\n                    argument = parseConditionalExpression(parser, context, privateScope, argument, tokenStart);\n                }\n                destructible |=\n                    parser.assignable & 2\n                        ? 16\n                        : 32;\n            }\n        }\n        else {\n            destructible |=\n                closingToken === 1074790415 && token !== 1077936155\n                    ? 16\n                    : parser.destructible;\n        }\n    }\n    else {\n        destructible |= 32;\n        argument = parseLeftHandSideExpression(parser, context, privateScope, 1, inGroup, 1);\n        const { tokenStart } = parser;\n        const token = parser.getToken();\n        if (token === 1077936155) {\n            if (parser.assignable & 2)\n                parser.report(26);\n            argument = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, argument);\n            destructible |= 16;\n        }\n        else {\n            if (token === 18) {\n                destructible |= 16;\n            }\n            else if (token !== closingToken) {\n                argument = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, argument);\n            }\n            destructible |=\n                parser.assignable & 1 ? 32 : 16;\n        }\n        parser.destructible = destructible;\n        if (parser.getToken() !== closingToken && parser.getToken() !== 18)\n            parser.report(161);\n        return parser.finishNode({\n            type: isPattern ? 'RestElement' : 'SpreadElement',\n            argument: argument,\n        }, start);\n    }\n    if (parser.getToken() !== closingToken) {\n        if (kind & 1)\n            destructible |= isAsync ? 16 : 32;\n        if (consumeOpt(parser, context | 32, 1077936155)) {\n            if (destructible & 16)\n                parser.report(26);\n            reinterpretToPattern(parser, argument);\n            const right = parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart);\n            argument = parser.finishNode(isPattern\n                ? {\n                    type: 'AssignmentPattern',\n                    left: argument,\n                    right,\n                }\n                : {\n                    type: 'AssignmentExpression',\n                    left: argument,\n                    operator: '=',\n                    right,\n                }, tokenStart);\n            destructible = 16;\n        }\n        else {\n            destructible |= 16;\n        }\n    }\n    parser.destructible = destructible;\n    return parser.finishNode({\n        type: isPattern ? 'RestElement' : 'SpreadElement',\n        argument: argument,\n    }, start);\n}\nfunction parseMethodDefinition(parser, context, privateScope, kind, inGroup, start) {\n    const modifierFlags = 1024 |\n        2048 |\n        8192 |\n        ((kind & 64) === 0 ? 512 | 16384 : 0);\n    context =\n        ((context | modifierFlags) ^ modifierFlags) |\n            (kind & 8 ? 1024 : 0) |\n            (kind & 16 ? 2048 : 0) |\n            (kind & 64 ? 16384 : 0) |\n            256 |\n            32768 |\n            65536;\n    let scope = parser.createScopeIfLexical(256);\n    const params = parseMethodFormals(parser, (context | 8192) & -524289, scope, privateScope, kind, 1, inGroup);\n    scope = scope?.createChildScope(64);\n    const body = parseFunctionBody(parser, (context & -655373) |\n        32768 |\n        4096, scope, privateScope, 0, void 0, scope?.parent);\n    return parser.finishNode({\n        type: 'FunctionExpression',\n        params,\n        body,\n        async: (kind & 16) > 0,\n        generator: (kind & 8) > 0,\n        id: null,\n    }, start);\n}\nfunction parseObjectLiteral(parser, context, privateScope, skipInitializer, inGroup) {\n    const expr = parseObjectLiteralOrPattern(parser, context, void 0, privateScope, skipInitializer, inGroup, 0, 2, 0);\n    if (parser.destructible & 64) {\n        parser.report(63);\n    }\n    if (parser.destructible & 8) {\n        parser.report(62);\n    }\n    return expr;\n}\nfunction parseObjectLiteralOrPattern(parser, context, scope, privateScope, skipInitializer, inGroup, isPattern, kind, origin) {\n    const { tokenStart: start } = parser;\n    nextToken(parser, context);\n    const properties = [];\n    let destructible = 0;\n    let prototypeCount = 0;\n    context = (context | 131072) ^ 131072;\n    while (parser.getToken() !== 1074790415) {\n        const { tokenValue, tokenStart } = parser;\n        const token = parser.getToken();\n        if (token === 14) {\n            properties.push(parseSpreadOrRestElement(parser, context, scope, privateScope, 1074790415, kind, origin, 0, inGroup, isPattern));\n        }\n        else {\n            let state = 0;\n            let key = null;\n            let value;\n            if (parser.getToken() & 143360 ||\n                parser.getToken() === -2147483528 ||\n                parser.getToken() === -2147483527) {\n                if (parser.getToken() === -2147483527)\n                    destructible |= 16;\n                key = parseIdentifier(parser, context);\n                if (parser.getToken() === 18 ||\n                    parser.getToken() === 1074790415 ||\n                    parser.getToken() === 1077936155) {\n                    state |= 4;\n                    if (context & 1 && (token & 537079808) === 537079808) {\n                        destructible |= 16;\n                    }\n                    else {\n                        validateBindingIdentifier(parser, context, kind, token, 0);\n                    }\n                    scope?.addVarOrBlock(context, tokenValue, kind, origin);\n                    if (consumeOpt(parser, context | 32, 1077936155)) {\n                        destructible |= 8;\n                        const right = parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart);\n                        destructible |=\n                            parser.destructible & 256\n                                ? 256\n                                : 0 | (parser.destructible & 128)\n                                    ? 128\n                                    : 0;\n                        value = parser.finishNode({\n                            type: 'AssignmentPattern',\n                            left: parser.options.uniqueKeyInPattern ? Object.assign({}, key) : key,\n                            right,\n                        }, tokenStart);\n                    }\n                    else {\n                        destructible |=\n                            (token === 209006 ? 128 : 0) |\n                                (token === -2147483528 ? 16 : 0);\n                        value = parser.options.uniqueKeyInPattern ? Object.assign({}, key) : key;\n                    }\n                }\n                else if (consumeOpt(parser, context | 32, 21)) {\n                    const { tokenStart } = parser;\n                    if (tokenValue === '__proto__')\n                        prototypeCount++;\n                    if (parser.getToken() & 143360) {\n                        const tokenAfterColon = parser.getToken();\n                        const valueAfterColon = parser.tokenValue;\n                        value = parsePrimaryExpression(parser, context, privateScope, kind, 0, 1, inGroup, 1, tokenStart);\n                        const token = parser.getToken();\n                        value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                        if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (token === 1077936155 || token === 1074790415 || token === 18) {\n                                destructible |= parser.destructible & 128 ? 128 : 0;\n                                if (parser.assignable & 2) {\n                                    destructible |= 16;\n                                }\n                                else if ((tokenAfterColon & 143360) === 143360) {\n                                    scope?.addVarOrBlock(context, valueAfterColon, kind, origin);\n                                }\n                            }\n                            else {\n                                destructible |=\n                                    parser.assignable & 1\n                                        ? 32\n                                        : 16;\n                            }\n                        }\n                        else if ((parser.getToken() & 4194304) === 4194304) {\n                            if (parser.assignable & 2) {\n                                destructible |= 16;\n                            }\n                            else if (token !== 1077936155) {\n                                destructible |= 32;\n                            }\n                            else {\n                                scope?.addVarOrBlock(context, valueAfterColon, kind, origin);\n                            }\n                            value = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                        }\n                        else {\n                            destructible |= 16;\n                            if ((parser.getToken() & 8388608) === 8388608) {\n                                value = parseBinaryExpression(parser, context, privateScope, 1, tokenStart, 4, token, value);\n                            }\n                            if (consumeOpt(parser, context | 32, 22)) {\n                                value = parseConditionalExpression(parser, context, privateScope, value, tokenStart);\n                            }\n                        }\n                    }\n                    else if ((parser.getToken() & 2097152) === 2097152) {\n                        value =\n                            parser.getToken() === 69271571\n                                ? parseArrayExpressionOrPattern(parser, context, scope, privateScope, 0, inGroup, isPattern, kind, origin)\n                                : parseObjectLiteralOrPattern(parser, context, scope, privateScope, 0, inGroup, isPattern, kind, origin);\n                        destructible = parser.destructible;\n                        parser.assignable =\n                            destructible & 16 ? 2 : 1;\n                        if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (parser.assignable & 2)\n                                destructible |= 16;\n                        }\n                        else if (parser.destructible & 8) {\n                            parser.report(71);\n                        }\n                        else {\n                            value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                            destructible = parser.assignable & 2 ? 16 : 0;\n                            if ((parser.getToken() & 4194304) === 4194304) {\n                                value = parseAssignmentExpressionOrPattern(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                            }\n                            else {\n                                if ((parser.getToken() & 8388608) === 8388608) {\n                                    value = parseBinaryExpression(parser, context, privateScope, 1, tokenStart, 4, token, value);\n                                }\n                                if (consumeOpt(parser, context | 32, 22)) {\n                                    value = parseConditionalExpression(parser, context, privateScope, value, tokenStart);\n                                }\n                                destructible |=\n                                    parser.assignable & 2\n                                        ? 16\n                                        : 32;\n                            }\n                        }\n                    }\n                    else {\n                        value = parseLeftHandSideExpression(parser, context, privateScope, 1, inGroup, 1);\n                        destructible |=\n                            parser.assignable & 1\n                                ? 32\n                                : 16;\n                        if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (parser.assignable & 2)\n                                destructible |= 16;\n                        }\n                        else {\n                            value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                            destructible = parser.assignable & 2 ? 16 : 0;\n                            if (parser.getToken() !== 18 && token !== 1074790415) {\n                                if (parser.getToken() !== 1077936155)\n                                    destructible |= 16;\n                                value = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                            }\n                        }\n                    }\n                }\n                else if (parser.getToken() === 69271571) {\n                    destructible |= 16;\n                    if (token === 209005)\n                        state |= 16;\n                    state |=\n                        (token === 209008\n                            ? 256\n                            : token === 209009\n                                ? 512\n                                : 1) | 2;\n                    key = parseComputedPropertyName(parser, context, privateScope, inGroup);\n                    destructible |= parser.assignable;\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                }\n                else if (parser.getToken() & 143360) {\n                    destructible |= 16;\n                    if (token === -2147483528)\n                        parser.report(95);\n                    if (token === 209005) {\n                        if (parser.flags & 1)\n                            parser.report(132);\n                        state |= 16 | 1;\n                    }\n                    else if (token === 209008) {\n                        state |= 256;\n                    }\n                    else if (token === 209009) {\n                        state |= 512;\n                    }\n                    else {\n                        parser.report(0);\n                    }\n                    key = parseIdentifier(parser, context);\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                }\n                else if (parser.getToken() === 67174411) {\n                    destructible |= 16;\n                    state |= 1;\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                }\n                else if (parser.getToken() === 8391476) {\n                    destructible |= 16;\n                    if (token === 209008) {\n                        parser.report(42);\n                    }\n                    else if (token === 209009) {\n                        parser.report(43);\n                    }\n                    else if (token !== 209005) {\n                        parser.report(30, KeywordDescTable[8391476 & 255]);\n                    }\n                    nextToken(parser, context);\n                    state |=\n                        8 | 1 | (token === 209005 ? 16 : 0);\n                    if (parser.getToken() & 143360) {\n                        key = parseIdentifier(parser, context);\n                    }\n                    else if ((parser.getToken() & 134217728) === 134217728) {\n                        key = parseLiteral(parser, context);\n                    }\n                    else if (parser.getToken() === 69271571) {\n                        state |= 2;\n                        key = parseComputedPropertyName(parser, context, privateScope, inGroup);\n                        destructible |= parser.assignable;\n                    }\n                    else {\n                        parser.report(30, KeywordDescTable[parser.getToken() & 255]);\n                    }\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                }\n                else if ((parser.getToken() & 134217728) === 134217728) {\n                    if (token === 209005)\n                        state |= 16;\n                    state |=\n                        token === 209008\n                            ? 256\n                            : token === 209009\n                                ? 512\n                                : 1;\n                    destructible |= 16;\n                    key = parseLiteral(parser, context);\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                }\n                else {\n                    parser.report(133);\n                }\n            }\n            else if ((parser.getToken() & 134217728) === 134217728) {\n                key = parseLiteral(parser, context);\n                if (parser.getToken() === 21) {\n                    consume(parser, context | 32, 21);\n                    const { tokenStart } = parser;\n                    if (tokenValue === '__proto__')\n                        prototypeCount++;\n                    if (parser.getToken() & 143360) {\n                        value = parsePrimaryExpression(parser, context, privateScope, kind, 0, 1, inGroup, 1, tokenStart);\n                        const { tokenValue: valueAfterColon } = parser;\n                        const token = parser.getToken();\n                        value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                        if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (token === 1077936155 || token === 1074790415 || token === 18) {\n                                if (parser.assignable & 2) {\n                                    destructible |= 16;\n                                }\n                                else {\n                                    scope?.addVarOrBlock(context, valueAfterColon, kind, origin);\n                                }\n                            }\n                            else {\n                                destructible |=\n                                    parser.assignable & 1\n                                        ? 32\n                                        : 16;\n                            }\n                        }\n                        else if (parser.getToken() === 1077936155) {\n                            if (parser.assignable & 2)\n                                destructible |= 16;\n                            value = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                        }\n                        else {\n                            destructible |= 16;\n                            value = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                        }\n                    }\n                    else if ((parser.getToken() & 2097152) === 2097152) {\n                        value =\n                            parser.getToken() === 69271571\n                                ? parseArrayExpressionOrPattern(parser, context, scope, privateScope, 0, inGroup, isPattern, kind, origin)\n                                : parseObjectLiteralOrPattern(parser, context, scope, privateScope, 0, inGroup, isPattern, kind, origin);\n                        destructible = parser.destructible;\n                        parser.assignable =\n                            destructible & 16 ? 2 : 1;\n                        if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (parser.assignable & 2) {\n                                destructible |= 16;\n                            }\n                        }\n                        else if ((parser.destructible & 8) !== 8) {\n                            value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                            destructible = parser.assignable & 2 ? 16 : 0;\n                            if ((parser.getToken() & 4194304) === 4194304) {\n                                value = parseAssignmentExpressionOrPattern(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                            }\n                            else {\n                                if ((parser.getToken() & 8388608) === 8388608) {\n                                    value = parseBinaryExpression(parser, context, privateScope, 1, tokenStart, 4, token, value);\n                                }\n                                if (consumeOpt(parser, context | 32, 22)) {\n                                    value = parseConditionalExpression(parser, context, privateScope, value, tokenStart);\n                                }\n                                destructible |=\n                                    parser.assignable & 2\n                                        ? 16\n                                        : 32;\n                            }\n                        }\n                    }\n                    else {\n                        value = parseLeftHandSideExpression(parser, context, privateScope, 1, 0, 1);\n                        destructible |=\n                            parser.assignable & 1\n                                ? 32\n                                : 16;\n                        if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (parser.assignable & 2) {\n                                destructible |= 16;\n                            }\n                        }\n                        else {\n                            value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                            destructible = parser.assignable & 1 ? 0 : 16;\n                            if (parser.getToken() !== 18 && parser.getToken() !== 1074790415) {\n                                if (parser.getToken() !== 1077936155)\n                                    destructible |= 16;\n                                value = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                            }\n                        }\n                    }\n                }\n                else if (parser.getToken() === 67174411) {\n                    state |= 1;\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                    destructible = parser.assignable | 16;\n                }\n                else {\n                    parser.report(134);\n                }\n            }\n            else if (parser.getToken() === 69271571) {\n                key = parseComputedPropertyName(parser, context, privateScope, inGroup);\n                destructible |= parser.destructible & 256 ? 256 : 0;\n                state |= 2;\n                if (parser.getToken() === 21) {\n                    nextToken(parser, context | 32);\n                    const { tokenStart, tokenValue } = parser;\n                    const tokenAfterColon = parser.getToken();\n                    if (parser.getToken() & 143360) {\n                        value = parsePrimaryExpression(parser, context, privateScope, kind, 0, 1, inGroup, 1, tokenStart);\n                        const token = parser.getToken();\n                        value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                        if ((parser.getToken() & 4194304) === 4194304) {\n                            destructible |=\n                                parser.assignable & 2\n                                    ? 16\n                                    : token === 1077936155\n                                        ? 0\n                                        : 32;\n                            value = parseAssignmentExpressionOrPattern(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                        }\n                        else if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (token === 1077936155 || token === 1074790415 || token === 18) {\n                                if (parser.assignable & 2) {\n                                    destructible |= 16;\n                                }\n                                else if ((tokenAfterColon & 143360) === 143360) {\n                                    scope?.addVarOrBlock(context, tokenValue, kind, origin);\n                                }\n                            }\n                            else {\n                                destructible |=\n                                    parser.assignable & 1\n                                        ? 32\n                                        : 16;\n                            }\n                        }\n                        else {\n                            destructible |= 16;\n                            value = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                        }\n                    }\n                    else if ((parser.getToken() & 2097152) === 2097152) {\n                        value =\n                            parser.getToken() === 69271571\n                                ? parseArrayExpressionOrPattern(parser, context, scope, privateScope, 0, inGroup, isPattern, kind, origin)\n                                : parseObjectLiteralOrPattern(parser, context, scope, privateScope, 0, inGroup, isPattern, kind, origin);\n                        destructible = parser.destructible;\n                        parser.assignable =\n                            destructible & 16 ? 2 : 1;\n                        if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (parser.assignable & 2)\n                                destructible |= 16;\n                        }\n                        else if (destructible & 8) {\n                            parser.report(62);\n                        }\n                        else {\n                            value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                            destructible =\n                                parser.assignable & 2 ? destructible | 16 : 0;\n                            if ((parser.getToken() & 4194304) === 4194304) {\n                                if (parser.getToken() !== 1077936155)\n                                    destructible |= 16;\n                                value = parseAssignmentExpressionOrPattern(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                            }\n                            else {\n                                if ((parser.getToken() & 8388608) === 8388608) {\n                                    value = parseBinaryExpression(parser, context, privateScope, 1, tokenStart, 4, token, value);\n                                }\n                                if (consumeOpt(parser, context | 32, 22)) {\n                                    value = parseConditionalExpression(parser, context, privateScope, value, tokenStart);\n                                }\n                                destructible |=\n                                    parser.assignable & 2\n                                        ? 16\n                                        : 32;\n                            }\n                        }\n                    }\n                    else {\n                        value = parseLeftHandSideExpression(parser, context, privateScope, 1, 0, 1);\n                        destructible |=\n                            parser.assignable & 1\n                                ? 32\n                                : 16;\n                        if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (parser.assignable & 2)\n                                destructible |= 16;\n                        }\n                        else {\n                            value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                            destructible = parser.assignable & 1 ? 0 : 16;\n                            if (parser.getToken() !== 18 && parser.getToken() !== 1074790415) {\n                                if (parser.getToken() !== 1077936155)\n                                    destructible |= 16;\n                                value = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                            }\n                        }\n                    }\n                }\n                else if (parser.getToken() === 67174411) {\n                    state |= 1;\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                    destructible = 16;\n                }\n                else {\n                    parser.report(44);\n                }\n            }\n            else if (token === 8391476) {\n                consume(parser, context | 32, 8391476);\n                state |= 8;\n                if (parser.getToken() & 143360) {\n                    const token = parser.getToken();\n                    key = parseIdentifier(parser, context);\n                    state |= 1;\n                    if (parser.getToken() === 67174411) {\n                        destructible |= 16;\n                        value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                    }\n                    else {\n                        throw new ParseError(parser.tokenStart, parser.currentLocation, token === 209005\n                            ? 46\n                            : token === 209008 || parser.getToken() === 209009\n                                ? 45\n                                : 47, KeywordDescTable[token & 255]);\n                    }\n                }\n                else if ((parser.getToken() & 134217728) === 134217728) {\n                    destructible |= 16;\n                    key = parseLiteral(parser, context);\n                    state |= 1;\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                }\n                else if (parser.getToken() === 69271571) {\n                    destructible |= 16;\n                    state |= 2 | 1;\n                    key = parseComputedPropertyName(parser, context, privateScope, inGroup);\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                }\n                else {\n                    parser.report(126);\n                }\n            }\n            else {\n                parser.report(30, KeywordDescTable[token & 255]);\n            }\n            destructible |= parser.destructible & 128 ? 128 : 0;\n            parser.destructible = destructible;\n            properties.push(parser.finishNode({\n                type: 'Property',\n                key: key,\n                value,\n                kind: !(state & 768) ? 'init' : state & 512 ? 'set' : 'get',\n                computed: (state & 2) > 0,\n                method: (state & 1) > 0,\n                shorthand: (state & 4) > 0,\n            }, tokenStart));\n        }\n        destructible |= parser.destructible;\n        if (parser.getToken() !== 18)\n            break;\n        nextToken(parser, context);\n    }\n    consume(parser, context, 1074790415);\n    if (prototypeCount > 1)\n        destructible |= 64;\n    const node = parser.finishNode({\n        type: isPattern ? 'ObjectPattern' : 'ObjectExpression',\n        properties,\n    }, start);\n    if (!skipInitializer && parser.getToken() & 4194304) {\n        return parseArrayOrObjectAssignmentPattern(parser, context, privateScope, destructible, inGroup, isPattern, start, node);\n    }\n    parser.destructible = destructible;\n    return node;\n}\nfunction parseMethodFormals(parser, context, scope, privateScope, kind, type, inGroup) {\n    consume(parser, context, 67174411);\n    const params = [];\n    parser.flags = (parser.flags | 128) ^ 128;\n    if (parser.getToken() === 16) {\n        if (kind & 512) {\n            parser.report(37, 'Setter', 'one', '');\n        }\n        nextToken(parser, context);\n        return params;\n    }\n    if (kind & 256) {\n        parser.report(37, 'Getter', 'no', 's');\n    }\n    if (kind & 512 && parser.getToken() === 14) {\n        parser.report(38);\n    }\n    context = (context | 131072) ^ 131072;\n    let setterArgs = 0;\n    let isNonSimpleParameterList = 0;\n    while (parser.getToken() !== 18) {\n        let left = null;\n        const { tokenStart } = parser;\n        if (parser.getToken() & 143360) {\n            if ((context & 1) === 0) {\n                if ((parser.getToken() & 36864) === 36864) {\n                    parser.flags |= 256;\n                }\n                if ((parser.getToken() & 537079808) === 537079808) {\n                    parser.flags |= 512;\n                }\n            }\n            left = parseAndClassifyIdentifier(parser, context, scope, kind | 1, 0);\n        }\n        else {\n            if (parser.getToken() === 2162700) {\n                left = parseObjectLiteralOrPattern(parser, context, scope, privateScope, 1, inGroup, 1, type, 0);\n            }\n            else if (parser.getToken() === 69271571) {\n                left = parseArrayExpressionOrPattern(parser, context, scope, privateScope, 1, inGroup, 1, type, 0);\n            }\n            else if (parser.getToken() === 14) {\n                left = parseSpreadOrRestElement(parser, context, scope, privateScope, 16, type, 0, 0, inGroup, 1);\n            }\n            isNonSimpleParameterList = 1;\n            if (parser.destructible & (32 | 16))\n                parser.report(50);\n        }\n        if (parser.getToken() === 1077936155) {\n            nextToken(parser, context | 32);\n            isNonSimpleParameterList = 1;\n            const right = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n            left = parser.finishNode({\n                type: 'AssignmentPattern',\n                left: left,\n                right,\n            }, tokenStart);\n        }\n        setterArgs++;\n        params.push(left);\n        if (!consumeOpt(parser, context, 18))\n            break;\n        if (parser.getToken() === 16) {\n            break;\n        }\n    }\n    if (kind & 512 && setterArgs !== 1) {\n        parser.report(37, 'Setter', 'one', '');\n    }\n    scope?.reportScopeError();\n    if (isNonSimpleParameterList)\n        parser.flags |= 128;\n    consume(parser, context, 16);\n    return params;\n}\nfunction parseComputedPropertyName(parser, context, privateScope, inGroup) {\n    nextToken(parser, context | 32);\n    const key = parseExpression(parser, (context | 131072) ^ 131072, privateScope, 1, inGroup, parser.tokenStart);\n    consume(parser, context, 20);\n    return key;\n}\nfunction parseParenthesizedExpression(parser, context, privateScope, canAssign, kind, origin, start) {\n    parser.flags = (parser.flags | 128) ^ 128;\n    const parenthesesStart = parser.tokenStart;\n    nextToken(parser, context | 32 | 262144);\n    const scope = parser.createScopeIfLexical()?.createChildScope(512);\n    context = (context | 131072) ^ 131072;\n    if (consumeOpt(parser, context, 16)) {\n        return parseParenthesizedArrow(parser, context, scope, privateScope, [], canAssign, 0, start);\n    }\n    let destructible = 0;\n    parser.destructible &= -385;\n    let expr;\n    let expressions = [];\n    let isSequence = 0;\n    let isNonSimpleParameterList = 0;\n    let hasStrictReserved = 0;\n    const tokenAfterParenthesesStart = parser.tokenStart;\n    parser.assignable = 1;\n    while (parser.getToken() !== 16) {\n        const { tokenStart } = parser;\n        const token = parser.getToken();\n        if (token & 143360) {\n            scope?.addBlockName(context, parser.tokenValue, 1, 0);\n            if ((token & 537079808) === 537079808) {\n                isNonSimpleParameterList = 1;\n            }\n            else if ((token & 36864) === 36864) {\n                hasStrictReserved = 1;\n            }\n            expr = parsePrimaryExpression(parser, context, privateScope, kind, 0, 1, 1, 1, tokenStart);\n            if (parser.getToken() === 16 || parser.getToken() === 18) {\n                if (parser.assignable & 2) {\n                    destructible |= 16;\n                    isNonSimpleParameterList = 1;\n                }\n            }\n            else {\n                if (parser.getToken() === 1077936155) {\n                    isNonSimpleParameterList = 1;\n                }\n                else {\n                    destructible |= 16;\n                }\n                expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 1, 0, tokenStart);\n                if (parser.getToken() !== 16 && parser.getToken() !== 18) {\n                    expr = parseAssignmentExpression(parser, context, privateScope, 1, 0, tokenStart, expr);\n                }\n            }\n        }\n        else if ((token & 2097152) === 2097152) {\n            expr =\n                token === 2162700\n                    ? parseObjectLiteralOrPattern(parser, context | 262144, scope, privateScope, 0, 1, 0, kind, origin)\n                    : parseArrayExpressionOrPattern(parser, context | 262144, scope, privateScope, 0, 1, 0, kind, origin);\n            destructible |= parser.destructible;\n            isNonSimpleParameterList = 1;\n            parser.assignable = 2;\n            if (parser.getToken() !== 16 && parser.getToken() !== 18) {\n                if (destructible & 8)\n                    parser.report(122);\n                expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 0, 0, tokenStart);\n                destructible |= 16;\n                if (parser.getToken() !== 16 && parser.getToken() !== 18) {\n                    expr = parseAssignmentExpression(parser, context, privateScope, 0, 0, tokenStart, expr);\n                }\n            }\n        }\n        else if (token === 14) {\n            expr = parseSpreadOrRestElement(parser, context, scope, privateScope, 16, kind, origin, 0, 1, 0);\n            if (parser.destructible & 16)\n                parser.report(74);\n            isNonSimpleParameterList = 1;\n            if (isSequence && (parser.getToken() === 16 || parser.getToken() === 18)) {\n                expressions.push(expr);\n            }\n            destructible |= 8;\n            break;\n        }\n        else {\n            destructible |= 16;\n            expr = parseExpression(parser, context, privateScope, 1, 1, tokenStart);\n            if (isSequence && (parser.getToken() === 16 || parser.getToken() === 18)) {\n                expressions.push(expr);\n            }\n            if (parser.getToken() === 18) {\n                if (!isSequence) {\n                    isSequence = 1;\n                    expressions = [expr];\n                }\n            }\n            if (isSequence) {\n                while (consumeOpt(parser, context | 32, 18)) {\n                    expressions.push(parseExpression(parser, context, privateScope, 1, 1, parser.tokenStart));\n                }\n                parser.assignable = 2;\n                expr = parser.finishNode({\n                    type: 'SequenceExpression',\n                    expressions,\n                }, tokenAfterParenthesesStart);\n            }\n            consume(parser, context, 16);\n            parser.destructible = destructible;\n            return parser.options.preserveParens\n                ? parser.finishNode({\n                    type: 'ParenthesizedExpression',\n                    expression: expr,\n                }, parenthesesStart)\n                : expr;\n        }\n        if (isSequence && (parser.getToken() === 16 || parser.getToken() === 18)) {\n            expressions.push(expr);\n        }\n        if (!consumeOpt(parser, context | 32, 18))\n            break;\n        if (!isSequence) {\n            isSequence = 1;\n            expressions = [expr];\n        }\n        if (parser.getToken() === 16) {\n            destructible |= 8;\n            break;\n        }\n    }\n    if (isSequence) {\n        parser.assignable = 2;\n        expr = parser.finishNode({\n            type: 'SequenceExpression',\n            expressions,\n        }, tokenAfterParenthesesStart);\n    }\n    consume(parser, context, 16);\n    if (destructible & 16 && destructible & 8)\n        parser.report(151);\n    destructible |=\n        parser.destructible & 256\n            ? 256\n            : 0 | (parser.destructible & 128)\n                ? 128\n                : 0;\n    if (parser.getToken() === 10) {\n        if (destructible & (32 | 16))\n            parser.report(49);\n        if (context & (2048 | 2) && destructible & 128)\n            parser.report(31);\n        if (context & (1 | 1024) && destructible & 256) {\n            parser.report(32);\n        }\n        if (isNonSimpleParameterList)\n            parser.flags |= 128;\n        if (hasStrictReserved)\n            parser.flags |= 256;\n        return parseParenthesizedArrow(parser, context, scope, privateScope, isSequence ? expressions : [expr], canAssign, 0, start);\n    }\n    if (destructible & 64) {\n        parser.report(63);\n    }\n    if (destructible & 8) {\n        parser.report(144);\n    }\n    parser.destructible = ((parser.destructible | 256) ^ 256) | destructible;\n    return parser.options.preserveParens\n        ? parser.finishNode({\n            type: 'ParenthesizedExpression',\n            expression: expr,\n        }, parenthesesStart)\n        : expr;\n}\nfunction parseIdentifierOrArrow(parser, context, privateScope) {\n    const { tokenStart: start } = parser;\n    const { tokenValue } = parser;\n    let isNonSimpleParameterList = 0;\n    let hasStrictReserved = 0;\n    if ((parser.getToken() & 537079808) === 537079808) {\n        isNonSimpleParameterList = 1;\n    }\n    else if ((parser.getToken() & 36864) === 36864) {\n        hasStrictReserved = 1;\n    }\n    const expr = parseIdentifier(parser, context);\n    parser.assignable = 1;\n    if (parser.getToken() === 10) {\n        const scope = parser.options.lexical ? createArrowHeadParsingScope(parser, context, tokenValue) : undefined;\n        if (isNonSimpleParameterList)\n            parser.flags |= 128;\n        if (hasStrictReserved)\n            parser.flags |= 256;\n        return parseArrowFunctionExpression(parser, context, scope, privateScope, [expr], 0, start);\n    }\n    return expr;\n}\nfunction parseArrowFromIdentifier(parser, context, privateScope, value, expr, inNew, canAssign, isAsync, start) {\n    if (!canAssign)\n        parser.report(57);\n    if (inNew)\n        parser.report(51);\n    parser.flags &= -129;\n    const scope = parser.options.lexical ? createArrowHeadParsingScope(parser, context, value) : void 0;\n    return parseArrowFunctionExpression(parser, context, scope, privateScope, [expr], isAsync, start);\n}\nfunction parseParenthesizedArrow(parser, context, scope, privateScope, params, canAssign, isAsync, start) {\n    if (!canAssign)\n        parser.report(57);\n    for (let i = 0; i < params.length; ++i)\n        reinterpretToPattern(parser, params[i]);\n    return parseArrowFunctionExpression(parser, context, scope, privateScope, params, isAsync, start);\n}\nfunction parseArrowFunctionExpression(parser, context, scope, privateScope, params, isAsync, start) {\n    if (parser.flags & 1)\n        parser.report(48);\n    consume(parser, context | 32, 10);\n    const modifierFlags = 1024 | 2048 | 8192 | 524288;\n    context = ((context | modifierFlags) ^ modifierFlags) | (isAsync ? 2048 : 0);\n    const expression = parser.getToken() !== 2162700;\n    let body;\n    scope?.reportScopeError();\n    if (expression) {\n        parser.flags =\n            (parser.flags | 512 | 256 | 64 | 4096) ^\n                (512 | 256 | 64 | 4096);\n        body = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n    }\n    else {\n        scope = scope?.createChildScope(64);\n        const modifierFlags = 4 | 131072 | 8;\n        body = parseFunctionBody(parser, ((context | modifierFlags) ^ modifierFlags) | 4096, scope, privateScope, 16, void 0, void 0);\n        switch (parser.getToken()) {\n            case 69271571:\n                if ((parser.flags & 1) === 0) {\n                    parser.report(116);\n                }\n                break;\n            case 67108877:\n            case 67174409:\n            case 22:\n                parser.report(117);\n            case 67174411:\n                if ((parser.flags & 1) === 0) {\n                    parser.report(116);\n                }\n                parser.flags |= 1024;\n                break;\n        }\n        if ((parser.getToken() & 8388608) === 8388608 && (parser.flags & 1) === 0)\n            parser.report(30, KeywordDescTable[parser.getToken() & 255]);\n        if ((parser.getToken() & 33619968) === 33619968)\n            parser.report(125);\n    }\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'ArrowFunctionExpression',\n        params,\n        body,\n        async: isAsync === 1,\n        expression,\n        generator: false,\n    }, start);\n}\nfunction parseFormalParametersOrFormalList(parser, context, scope, privateScope, inGroup, kind) {\n    consume(parser, context, 67174411);\n    parser.flags = (parser.flags | 128) ^ 128;\n    const params = [];\n    if (consumeOpt(parser, context, 16))\n        return params;\n    context = (context | 131072) ^ 131072;\n    let isNonSimpleParameterList = 0;\n    while (parser.getToken() !== 18) {\n        let left;\n        const { tokenStart } = parser;\n        const token = parser.getToken();\n        if (token & 143360) {\n            if ((context & 1) === 0) {\n                if ((token & 36864) === 36864) {\n                    parser.flags |= 256;\n                }\n                if ((token & 537079808) === 537079808) {\n                    parser.flags |= 512;\n                }\n            }\n            left = parseAndClassifyIdentifier(parser, context, scope, kind | 1, 0);\n        }\n        else {\n            if (token === 2162700) {\n                left = parseObjectLiteralOrPattern(parser, context, scope, privateScope, 1, inGroup, 1, kind, 0);\n            }\n            else if (token === 69271571) {\n                left = parseArrayExpressionOrPattern(parser, context, scope, privateScope, 1, inGroup, 1, kind, 0);\n            }\n            else if (token === 14) {\n                left = parseSpreadOrRestElement(parser, context, scope, privateScope, 16, kind, 0, 0, inGroup, 1);\n            }\n            else {\n                parser.report(30, KeywordDescTable[token & 255]);\n            }\n            isNonSimpleParameterList = 1;\n            if (parser.destructible & (32 | 16)) {\n                parser.report(50);\n            }\n        }\n        if (parser.getToken() === 1077936155) {\n            nextToken(parser, context | 32);\n            isNonSimpleParameterList = 1;\n            const right = parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart);\n            left = parser.finishNode({\n                type: 'AssignmentPattern',\n                left,\n                right,\n            }, tokenStart);\n        }\n        params.push(left);\n        if (!consumeOpt(parser, context, 18))\n            break;\n        if (parser.getToken() === 16) {\n            break;\n        }\n    }\n    if (isNonSimpleParameterList)\n        parser.flags |= 128;\n    if (isNonSimpleParameterList || context & 1) {\n        scope?.reportScopeError();\n    }\n    consume(parser, context, 16);\n    return params;\n}\nfunction parseMemberExpressionNoCall(parser, context, privateScope, expr, inGroup, start) {\n    const token = parser.getToken();\n    if (token & 67108864) {\n        if (token === 67108877) {\n            nextToken(parser, context | 262144);\n            parser.assignable = 1;\n            const property = parsePropertyOrPrivatePropertyName(parser, context, privateScope);\n            return parseMemberExpressionNoCall(parser, context, privateScope, parser.finishNode({\n                type: 'MemberExpression',\n                object: expr,\n                computed: false,\n                property,\n                optional: false,\n            }, start), 0, start);\n        }\n        else if (token === 69271571) {\n            nextToken(parser, context | 32);\n            const { tokenStart } = parser;\n            const property = parseExpressions(parser, context, privateScope, inGroup, 1, tokenStart);\n            consume(parser, context, 20);\n            parser.assignable = 1;\n            return parseMemberExpressionNoCall(parser, context, privateScope, parser.finishNode({\n                type: 'MemberExpression',\n                object: expr,\n                computed: true,\n                property,\n                optional: false,\n            }, start), 0, start);\n        }\n        else if (token === 67174408 || token === 67174409) {\n            parser.assignable = 2;\n            return parseMemberExpressionNoCall(parser, context, privateScope, parser.finishNode({\n                type: 'TaggedTemplateExpression',\n                tag: expr,\n                quasi: parser.getToken() === 67174408\n                    ? parseTemplate(parser, context | 64, privateScope)\n                    : parseTemplateLiteral(parser, context | 64),\n            }, start), 0, start);\n        }\n    }\n    return expr;\n}\nfunction parseNewExpression(parser, context, privateScope, inGroup) {\n    const { tokenStart: start } = parser;\n    const id = parseIdentifier(parser, context | 32);\n    const { tokenStart } = parser;\n    if (consumeOpt(parser, context, 67108877)) {\n        if (context & 65536 && parser.getToken() === 209029) {\n            parser.assignable = 2;\n            return parseMetaProperty(parser, context, id, start);\n        }\n        parser.report(94);\n    }\n    parser.assignable = 2;\n    if ((parser.getToken() & 16842752) === 16842752) {\n        parser.report(65, KeywordDescTable[parser.getToken() & 255]);\n    }\n    const expr = parsePrimaryExpression(parser, context, privateScope, 2, 1, 0, inGroup, 1, tokenStart);\n    context = (context | 131072) ^ 131072;\n    if (parser.getToken() === 67108990)\n        parser.report(168);\n    const callee = parseMemberExpressionNoCall(parser, context, privateScope, expr, inGroup, tokenStart);\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'NewExpression',\n        callee,\n        arguments: parser.getToken() === 67174411 ? parseArguments(parser, context, privateScope, inGroup) : [],\n    }, start);\n}\nfunction parseMetaProperty(parser, context, meta, start) {\n    const property = parseIdentifier(parser, context);\n    return parser.finishNode({\n        type: 'MetaProperty',\n        meta,\n        property,\n    }, start);\n}\nfunction parseAsyncArrowAfterIdent(parser, context, privateScope, canAssign, start) {\n    if (parser.getToken() === 209006)\n        parser.report(31);\n    if (context & (1 | 1024) && parser.getToken() === 241771) {\n        parser.report(32);\n    }\n    classifyIdentifier(parser, context, parser.getToken());\n    if ((parser.getToken() & 36864) === 36864) {\n        parser.flags |= 256;\n    }\n    return parseArrowFromIdentifier(parser, (context & -524289) | 2048, privateScope, parser.tokenValue, parseIdentifier(parser, context), 0, canAssign, 1, start);\n}\nfunction parseAsyncArrowOrCallExpression(parser, context, privateScope, callee, canAssign, kind, origin, flags, start) {\n    nextToken(parser, context | 32);\n    const scope = parser.createScopeIfLexical()?.createChildScope(512);\n    context = (context | 131072) ^ 131072;\n    if (consumeOpt(parser, context, 16)) {\n        if (parser.getToken() === 10) {\n            if (flags & 1)\n                parser.report(48);\n            return parseParenthesizedArrow(parser, context, scope, privateScope, [], canAssign, 1, start);\n        }\n        return parser.finishNode({\n            type: 'CallExpression',\n            callee,\n            arguments: [],\n            optional: false,\n        }, start);\n    }\n    let destructible = 0;\n    let expr = null;\n    let isNonSimpleParameterList = 0;\n    parser.destructible =\n        (parser.destructible | 256 | 128) ^\n            (256 | 128);\n    const params = [];\n    while (parser.getToken() !== 16) {\n        const { tokenStart } = parser;\n        const token = parser.getToken();\n        if (token & 143360) {\n            scope?.addBlockName(context, parser.tokenValue, kind, 0);\n            if ((token & 537079808) === 537079808) {\n                parser.flags |= 512;\n            }\n            else if ((token & 36864) === 36864) {\n                parser.flags |= 256;\n            }\n            expr = parsePrimaryExpression(parser, context, privateScope, kind, 0, 1, 1, 1, tokenStart);\n            if (parser.getToken() === 16 || parser.getToken() === 18) {\n                if (parser.assignable & 2) {\n                    destructible |= 16;\n                    isNonSimpleParameterList = 1;\n                }\n            }\n            else {\n                if (parser.getToken() === 1077936155) {\n                    isNonSimpleParameterList = 1;\n                }\n                else {\n                    destructible |= 16;\n                }\n                expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 1, 0, tokenStart);\n                if (parser.getToken() !== 16 && parser.getToken() !== 18) {\n                    expr = parseAssignmentExpression(parser, context, privateScope, 1, 0, tokenStart, expr);\n                }\n            }\n        }\n        else if (token & 2097152) {\n            expr =\n                token === 2162700\n                    ? parseObjectLiteralOrPattern(parser, context, scope, privateScope, 0, 1, 0, kind, origin)\n                    : parseArrayExpressionOrPattern(parser, context, scope, privateScope, 0, 1, 0, kind, origin);\n            destructible |= parser.destructible;\n            isNonSimpleParameterList = 1;\n            if (parser.getToken() !== 16 && parser.getToken() !== 18) {\n                if (destructible & 8)\n                    parser.report(122);\n                expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 0, 0, tokenStart);\n                destructible |= 16;\n                if ((parser.getToken() & 8388608) === 8388608) {\n                    expr = parseBinaryExpression(parser, context, privateScope, 1, start, 4, token, expr);\n                }\n                if (consumeOpt(parser, context | 32, 22)) {\n                    expr = parseConditionalExpression(parser, context, privateScope, expr, start);\n                }\n            }\n        }\n        else if (token === 14) {\n            expr = parseSpreadOrRestElement(parser, context, scope, privateScope, 16, kind, origin, 1, 1, 0);\n            destructible |=\n                (parser.getToken() === 16 ? 0 : 16) | parser.destructible;\n            isNonSimpleParameterList = 1;\n        }\n        else {\n            expr = parseExpression(parser, context, privateScope, 1, 0, tokenStart);\n            destructible = parser.assignable;\n            params.push(expr);\n            while (consumeOpt(parser, context | 32, 18)) {\n                params.push(parseExpression(parser, context, privateScope, 1, 0, tokenStart));\n            }\n            destructible |= parser.assignable;\n            consume(parser, context, 16);\n            parser.destructible = destructible | 16;\n            parser.assignable = 2;\n            return parser.finishNode({\n                type: 'CallExpression',\n                callee,\n                arguments: params,\n                optional: false,\n            }, start);\n        }\n        params.push(expr);\n        if (!consumeOpt(parser, context | 32, 18))\n            break;\n    }\n    consume(parser, context, 16);\n    destructible |=\n        parser.destructible & 256\n            ? 256\n            : 0 | (parser.destructible & 128)\n                ? 128\n                : 0;\n    if (parser.getToken() === 10) {\n        if (destructible & (32 | 16))\n            parser.report(27);\n        if (parser.flags & 1 || flags & 1)\n            parser.report(48);\n        if (destructible & 128)\n            parser.report(31);\n        if (context & (1 | 1024) && destructible & 256)\n            parser.report(32);\n        if (isNonSimpleParameterList)\n            parser.flags |= 128;\n        return parseParenthesizedArrow(parser, context | 2048, scope, privateScope, params, canAssign, 1, start);\n    }\n    if (destructible & 64) {\n        parser.report(63);\n    }\n    if (destructible & 8) {\n        parser.report(62);\n    }\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'CallExpression',\n        callee,\n        arguments: params,\n        optional: false,\n    }, start);\n}\nfunction parseRegExpLiteral(parser, context) {\n    const { tokenRaw, tokenRegExp, tokenValue, tokenStart } = parser;\n    nextToken(parser, context);\n    parser.assignable = 2;\n    const node = {\n        type: 'Literal',\n        value: tokenValue,\n        regex: tokenRegExp,\n    };\n    if (parser.options.raw) {\n        node.raw = tokenRaw;\n    }\n    return parser.finishNode(node, tokenStart);\n}\nfunction parseClassDeclaration(parser, context, scope, privateScope, flags) {\n    let start;\n    let decorators;\n    if (parser.leadingDecorators.decorators.length) {\n        if (parser.getToken() === 132) {\n            parser.report(30, '@');\n        }\n        start = parser.leadingDecorators.start;\n        decorators = [...parser.leadingDecorators.decorators];\n        parser.leadingDecorators.decorators.length = 0;\n    }\n    else {\n        start = parser.tokenStart;\n        decorators = parseDecorators(parser, context, privateScope);\n    }\n    context = (context | 16384 | 1) ^ 16384;\n    nextToken(parser, context);\n    let id = null;\n    let superClass = null;\n    const { tokenValue } = parser;\n    if (parser.getToken() & 4096 && parser.getToken() !== 20565) {\n        if (isStrictReservedWord(parser, context, parser.getToken())) {\n            parser.report(118);\n        }\n        if ((parser.getToken() & 537079808) === 537079808) {\n            parser.report(119);\n        }\n        if (scope) {\n            scope.addBlockName(context, tokenValue, 32, 0);\n            if (flags) {\n                if (flags & 2) {\n                    parser.declareUnboundVariable(tokenValue);\n                }\n            }\n        }\n        id = parseIdentifier(parser, context);\n    }\n    else {\n        if ((flags & 1) === 0)\n            parser.report(39, 'Class');\n    }\n    let inheritedContext = context;\n    if (consumeOpt(parser, context | 32, 20565)) {\n        superClass = parseLeftHandSideExpression(parser, context, privateScope, 0, 0, 0);\n        inheritedContext |= 512;\n    }\n    else {\n        inheritedContext = (inheritedContext | 512) ^ 512;\n    }\n    const body = parseClassBody(parser, inheritedContext, context, scope, privateScope, 2, 8, 0);\n    return parser.finishNode({\n        type: 'ClassDeclaration',\n        id,\n        superClass,\n        body,\n        ...(parser.options.next ? { decorators } : null),\n    }, start);\n}\nfunction parseClassExpression(parser, context, privateScope, inGroup, start) {\n    let id = null;\n    let superClass = null;\n    const decorators = parseDecorators(parser, context, privateScope);\n    context = (context | 1 | 16384) ^ 16384;\n    nextToken(parser, context);\n    if (parser.getToken() & 4096 && parser.getToken() !== 20565) {\n        if (isStrictReservedWord(parser, context, parser.getToken()))\n            parser.report(118);\n        if ((parser.getToken() & 537079808) === 537079808) {\n            parser.report(119);\n        }\n        id = parseIdentifier(parser, context);\n    }\n    let inheritedContext = context;\n    if (consumeOpt(parser, context | 32, 20565)) {\n        superClass = parseLeftHandSideExpression(parser, context, privateScope, 0, inGroup, 0);\n        inheritedContext |= 512;\n    }\n    else {\n        inheritedContext = (inheritedContext | 512) ^ 512;\n    }\n    const body = parseClassBody(parser, inheritedContext, context, void 0, privateScope, 2, 0, inGroup);\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'ClassExpression',\n        id,\n        superClass,\n        body,\n        ...(parser.options.next ? { decorators } : null),\n    }, start);\n}\nfunction parseDecorators(parser, context, privateScope) {\n    const list = [];\n    if (parser.options.next) {\n        while (parser.getToken() === 132) {\n            list.push(parseDecoratorList(parser, context, privateScope));\n        }\n    }\n    return list;\n}\nfunction parseDecoratorList(parser, context, privateScope) {\n    const start = parser.tokenStart;\n    nextToken(parser, context | 32);\n    let expression = parsePrimaryExpression(parser, context, privateScope, 2, 0, 1, 0, 1, start);\n    expression = parseMemberOrUpdateExpression(parser, context, privateScope, expression, 0, 0, parser.tokenStart);\n    return parser.finishNode({\n        type: 'Decorator',\n        expression,\n    }, start);\n}\nfunction parseClassBody(parser, context, inheritedContext, scope, parentScope, kind, origin, inGroup) {\n    const { tokenStart } = parser;\n    const privateScope = parser.createPrivateScopeIfLexical(parentScope);\n    consume(parser, context | 32, 2162700);\n    const modifierFlags = 131072 | 524288;\n    context = (context | modifierFlags) ^ modifierFlags;\n    const hasConstr = parser.flags & 32;\n    parser.flags = (parser.flags | 32) ^ 32;\n    const body = [];\n    while (parser.getToken() !== 1074790415) {\n        const decoratorStart = parser.tokenStart;\n        const decorators = parseDecorators(parser, context, privateScope);\n        if (decorators.length > 0 && parser.tokenValue === 'constructor') {\n            parser.report(109);\n        }\n        if (parser.getToken() === 1074790415)\n            parser.report(108);\n        if (consumeOpt(parser, context, 1074790417)) {\n            if (decorators.length > 0)\n                parser.report(120);\n            continue;\n        }\n        body.push(parseClassElementList(parser, context, scope, privateScope, inheritedContext, kind, decorators, 0, inGroup, decorators.length > 0 ? decoratorStart : parser.tokenStart));\n    }\n    consume(parser, origin & 8 ? context | 32 : context, 1074790415);\n    privateScope?.validatePrivateIdentifierRefs();\n    parser.flags = (parser.flags & -33) | hasConstr;\n    return parser.finishNode({\n        type: 'ClassBody',\n        body,\n    }, tokenStart);\n}\nfunction parseClassElementList(parser, context, scope, privateScope, inheritedContext, type, decorators, isStatic, inGroup, start) {\n    let kind = isStatic ? 32 : 0;\n    let key = null;\n    const token = parser.getToken();\n    if (token & (143360 | 36864) || token === -2147483528) {\n        key = parseIdentifier(parser, context);\n        switch (token) {\n            case 36970:\n                if (!isStatic &&\n                    parser.getToken() !== 67174411 &&\n                    (parser.getToken() & 1048576) !== 1048576 &&\n                    parser.getToken() !== 1077936155) {\n                    return parseClassElementList(parser, context, scope, privateScope, inheritedContext, type, decorators, 1, inGroup, start);\n                }\n                break;\n            case 209005:\n                if (parser.getToken() !== 67174411 && (parser.flags & 1) === 0) {\n                    if ((parser.getToken() & 1073741824) === 1073741824) {\n                        return parsePropertyDefinition(parser, context, privateScope, key, kind, decorators, start);\n                    }\n                    kind |= 16 | (optionalBit(parser, context, 8391476) ? 8 : 0);\n                }\n                break;\n            case 209008:\n                if (parser.getToken() !== 67174411) {\n                    if ((parser.getToken() & 1073741824) === 1073741824) {\n                        return parsePropertyDefinition(parser, context, privateScope, key, kind, decorators, start);\n                    }\n                    kind |= 256;\n                }\n                break;\n            case 209009:\n                if (parser.getToken() !== 67174411) {\n                    if ((parser.getToken() & 1073741824) === 1073741824) {\n                        return parsePropertyDefinition(parser, context, privateScope, key, kind, decorators, start);\n                    }\n                    kind |= 512;\n                }\n                break;\n            case 12402:\n                if (parser.getToken() !== 67174411 && (parser.flags & 1) === 0) {\n                    if ((parser.getToken() & 1073741824) === 1073741824) {\n                        return parsePropertyDefinition(parser, context, privateScope, key, kind, decorators, start);\n                    }\n                    if (parser.options.next)\n                        kind |= 1024;\n                }\n                break;\n        }\n    }\n    else if (token === 69271571) {\n        kind |= 2;\n        key = parseComputedPropertyName(parser, inheritedContext, privateScope, inGroup);\n    }\n    else if ((token & 134217728) === 134217728) {\n        key = parseLiteral(parser, context);\n    }\n    else if (token === 8391476) {\n        kind |= 8;\n        nextToken(parser, context);\n    }\n    else if (parser.getToken() === 130) {\n        kind |= 8192;\n        key = parsePrivateIdentifier(parser, context | 16, privateScope, 768);\n    }\n    else if ((parser.getToken() & 1073741824) === 1073741824) {\n        kind |= 128;\n    }\n    else if (isStatic && token === 2162700) {\n        return parseStaticBlock(parser, context | 16, scope, privateScope, start);\n    }\n    else if (token === -2147483527) {\n        key = parseIdentifier(parser, context);\n        if (parser.getToken() !== 67174411)\n            parser.report(30, KeywordDescTable[parser.getToken() & 255]);\n    }\n    else {\n        parser.report(30, KeywordDescTable[parser.getToken() & 255]);\n    }\n    if (kind & (8 | 16 | 768 | 1024)) {\n        if (parser.getToken() & 143360 ||\n            parser.getToken() === -2147483528 ||\n            parser.getToken() === -2147483527) {\n            key = parseIdentifier(parser, context);\n        }\n        else if ((parser.getToken() & 134217728) === 134217728) {\n            key = parseLiteral(parser, context);\n        }\n        else if (parser.getToken() === 69271571) {\n            kind |= 2;\n            key = parseComputedPropertyName(parser, context, privateScope, 0);\n        }\n        else if (parser.getToken() === 130) {\n            kind |= 8192;\n            key = parsePrivateIdentifier(parser, context, privateScope, kind);\n        }\n        else\n            parser.report(135);\n    }\n    if ((kind & 2) === 0) {\n        if (parser.tokenValue === 'constructor') {\n            if ((parser.getToken() & 1073741824) === 1073741824) {\n                parser.report(129);\n            }\n            else if ((kind & 32) === 0 && parser.getToken() === 67174411) {\n                if (kind & (768 | 16 | 128 | 8)) {\n                    parser.report(53, 'accessor');\n                }\n                else if ((context & 512) === 0) {\n                    if (parser.flags & 32)\n                        parser.report(54);\n                    else\n                        parser.flags |= 32;\n                }\n            }\n            kind |= 64;\n        }\n        else if ((kind & 8192) === 0 &&\n            kind & 32 &&\n            parser.tokenValue === 'prototype') {\n            parser.report(52);\n        }\n    }\n    if (kind & 1024 || (parser.getToken() !== 67174411 && (kind & 768) === 0)) {\n        return parsePropertyDefinition(parser, context, privateScope, key, kind, decorators, start);\n    }\n    const value = parseMethodDefinition(parser, context | 16, privateScope, kind, inGroup, parser.tokenStart);\n    return parser.finishNode({\n        type: 'MethodDefinition',\n        kind: (kind & 32) === 0 && kind & 64\n            ? 'constructor'\n            : kind & 256\n                ? 'get'\n                : kind & 512\n                    ? 'set'\n                    : 'method',\n        static: (kind & 32) > 0,\n        computed: (kind & 2) > 0,\n        key,\n        value,\n        ...(parser.options.next ? { decorators } : null),\n    }, start);\n}\nfunction parsePrivateIdentifier(parser, context, privateScope, kind) {\n    const { tokenStart } = parser;\n    nextToken(parser, context);\n    const { tokenValue } = parser;\n    if (tokenValue === 'constructor')\n        parser.report(128);\n    if (parser.options.lexical) {\n        if (!privateScope)\n            parser.report(4, tokenValue);\n        if (kind) {\n            privateScope.addPrivateIdentifier(tokenValue, kind);\n        }\n        else {\n            privateScope.addPrivateIdentifierRef(tokenValue);\n        }\n    }\n    nextToken(parser, context);\n    return parser.finishNode({\n        type: 'PrivateIdentifier',\n        name: tokenValue,\n    }, tokenStart);\n}\nfunction parsePropertyDefinition(parser, context, privateScope, key, state, decorators, start) {\n    let value = null;\n    if (state & 8)\n        parser.report(0);\n    if (parser.getToken() === 1077936155) {\n        nextToken(parser, context | 32);\n        const { tokenStart } = parser;\n        if (parser.getToken() === 537079927)\n            parser.report(119);\n        const modifierFlags = 1024 |\n            2048 |\n            8192 |\n            ((state & 64) === 0 ? 512 | 16384 : 0);\n        context =\n            ((context | modifierFlags) ^ modifierFlags) |\n                (state & 8 ? 1024 : 0) |\n                (state & 16 ? 2048 : 0) |\n                (state & 64 ? 16384 : 0) |\n                256 |\n                65536;\n        value = parsePrimaryExpression(parser, context | 16, privateScope, 2, 0, 1, 0, 1, tokenStart);\n        if ((parser.getToken() & 1073741824) !== 1073741824 ||\n            (parser.getToken() & 4194304) === 4194304) {\n            value = parseMemberOrUpdateExpression(parser, context | 16, privateScope, value, 0, 0, tokenStart);\n            value = parseAssignmentExpression(parser, context | 16, privateScope, 0, 0, tokenStart, value);\n        }\n    }\n    matchOrInsertSemicolon(parser, context);\n    return parser.finishNode({\n        type: state & 1024 ? 'AccessorProperty' : 'PropertyDefinition',\n        key,\n        value,\n        static: (state & 32) > 0,\n        computed: (state & 2) > 0,\n        ...(parser.options.next ? { decorators } : null),\n    }, start);\n}\nfunction parseBindingPattern(parser, context, scope, privateScope, type, origin) {\n    if (parser.getToken() & 143360 ||\n        ((context & 1) === 0 && parser.getToken() === -2147483527))\n        return parseAndClassifyIdentifier(parser, context, scope, type, origin);\n    if ((parser.getToken() & 2097152) !== 2097152)\n        parser.report(30, KeywordDescTable[parser.getToken() & 255]);\n    const left = parser.getToken() === 69271571\n        ? parseArrayExpressionOrPattern(parser, context, scope, privateScope, 1, 0, 1, type, origin)\n        : parseObjectLiteralOrPattern(parser, context, scope, privateScope, 1, 0, 1, type, origin);\n    if (parser.destructible & 16)\n        parser.report(50);\n    if (parser.destructible & 32)\n        parser.report(50);\n    return left;\n}\nfunction parseAndClassifyIdentifier(parser, context, scope, kind, origin) {\n    const token = parser.getToken();\n    if (context & 1) {\n        if ((token & 537079808) === 537079808) {\n            parser.report(119);\n        }\n        else if ((token & 36864) === 36864 || token === -2147483527) {\n            parser.report(118);\n        }\n    }\n    if ((token & 20480) === 20480) {\n        parser.report(102);\n    }\n    if (token === 241771) {\n        if (context & 1024)\n            parser.report(32);\n        if (context & 2)\n            parser.report(111);\n    }\n    if ((token & 255) === (241737 & 255)) {\n        if (kind & (8 | 16))\n            parser.report(100);\n    }\n    if (token === 209006) {\n        if (context & 2048)\n            parser.report(176);\n        if (context & 2)\n            parser.report(110);\n    }\n    const { tokenValue, tokenStart: start } = parser;\n    nextToken(parser, context);\n    scope?.addVarOrBlock(context, tokenValue, kind, origin);\n    return parser.finishNode({\n        type: 'Identifier',\n        name: tokenValue,\n    }, start);\n}\nfunction parseJSXRootElementOrFragment(parser, context, privateScope, inJSXChild, start) {\n    if (!inJSXChild)\n        consume(parser, context, 8456256);\n    if (parser.getToken() === 8390721) {\n        const openingFragment = parseJSXOpeningFragment(parser, start);\n        const [children, closingFragment] = parseJSXChildrenAndClosingFragment(parser, context, privateScope, inJSXChild);\n        return parser.finishNode({\n            type: 'JSXFragment',\n            openingFragment,\n            children,\n            closingFragment,\n        }, start);\n    }\n    if (parser.getToken() === 8457014)\n        parser.report(30, KeywordDescTable[parser.getToken() & 255]);\n    let closingElement = null;\n    let children = [];\n    const openingElement = parseJSXOpeningElementOrSelfCloseElement(parser, context, privateScope, inJSXChild, start);\n    if (!openingElement.selfClosing) {\n        [children, closingElement] = parseJSXChildrenAndClosingElement(parser, context, privateScope, inJSXChild);\n        const close = isEqualTagName(closingElement.name);\n        if (isEqualTagName(openingElement.name) !== close)\n            parser.report(155, close);\n    }\n    return parser.finishNode({\n        type: 'JSXElement',\n        children,\n        openingElement,\n        closingElement,\n    }, start);\n}\nfunction parseJSXOpeningFragment(parser, start) {\n    nextJSXToken(parser);\n    return parser.finishNode({\n        type: 'JSXOpeningFragment',\n    }, start);\n}\nfunction parseJSXClosingElement(parser, context, inJSXChild, start) {\n    consume(parser, context, 8457014);\n    const name = parseJSXElementName(parser, context);\n    if (parser.getToken() !== 8390721) {\n        parser.report(25, KeywordDescTable[8390721 & 255]);\n    }\n    if (inJSXChild) {\n        nextJSXToken(parser);\n    }\n    else {\n        nextToken(parser, context);\n    }\n    return parser.finishNode({\n        type: 'JSXClosingElement',\n        name,\n    }, start);\n}\nfunction parseJSXClosingFragment(parser, context, inJSXChild, start) {\n    consume(parser, context, 8457014);\n    if (parser.getToken() !== 8390721) {\n        parser.report(25, KeywordDescTable[8390721 & 255]);\n    }\n    if (inJSXChild) {\n        nextJSXToken(parser);\n    }\n    else {\n        nextToken(parser, context);\n    }\n    return parser.finishNode({\n        type: 'JSXClosingFragment',\n    }, start);\n}\nfunction parseJSXChildrenAndClosingElement(parser, context, privateScope, inJSXChild) {\n    const children = [];\n    while (true) {\n        const child = parseJSXChildOrClosingElement(parser, context, privateScope, inJSXChild);\n        if (child.type === 'JSXClosingElement') {\n            return [children, child];\n        }\n        children.push(child);\n    }\n}\nfunction parseJSXChildrenAndClosingFragment(parser, context, privateScope, inJSXChild) {\n    const children = [];\n    while (true) {\n        const child = parseJSXChildOrClosingFragment(parser, context, privateScope, inJSXChild);\n        if (child.type === 'JSXClosingFragment') {\n            return [children, child];\n        }\n        children.push(child);\n    }\n}\nfunction parseJSXChildOrClosingElement(parser, context, privateScope, inJSXChild) {\n    if (parser.getToken() === 137)\n        return parseJSXText(parser, context);\n    if (parser.getToken() === 2162700)\n        return parseJSXExpressionContainer(parser, context, privateScope, 1, 0);\n    if (parser.getToken() === 8456256) {\n        const { tokenStart } = parser;\n        nextToken(parser, context);\n        if (parser.getToken() === 8457014)\n            return parseJSXClosingElement(parser, context, inJSXChild, tokenStart);\n        return parseJSXRootElementOrFragment(parser, context, privateScope, 1, tokenStart);\n    }\n    parser.report(0);\n}\nfunction parseJSXChildOrClosingFragment(parser, context, privateScope, inJSXChild) {\n    if (parser.getToken() === 137)\n        return parseJSXText(parser, context);\n    if (parser.getToken() === 2162700)\n        return parseJSXExpressionContainer(parser, context, privateScope, 1, 0);\n    if (parser.getToken() === 8456256) {\n        const { tokenStart } = parser;\n        nextToken(parser, context);\n        if (parser.getToken() === 8457014)\n            return parseJSXClosingFragment(parser, context, inJSXChild, tokenStart);\n        return parseJSXRootElementOrFragment(parser, context, privateScope, 1, tokenStart);\n    }\n    parser.report(0);\n}\nfunction parseJSXText(parser, context) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    const node = {\n        type: 'JSXText',\n        value: parser.tokenValue,\n    };\n    if (parser.options.raw) {\n        node.raw = parser.tokenRaw;\n    }\n    return parser.finishNode(node, start);\n}\nfunction parseJSXOpeningElementOrSelfCloseElement(parser, context, privateScope, inJSXChild, start) {\n    if ((parser.getToken() & 143360) !== 143360 &&\n        (parser.getToken() & 4096) !== 4096)\n        parser.report(0);\n    const tagName = parseJSXElementName(parser, context);\n    const attributes = parseJSXAttributes(parser, context, privateScope);\n    const selfClosing = parser.getToken() === 8457014;\n    if (selfClosing)\n        consume(parser, context, 8457014);\n    if (parser.getToken() !== 8390721) {\n        parser.report(25, KeywordDescTable[8390721 & 255]);\n    }\n    if (inJSXChild || !selfClosing) {\n        nextJSXToken(parser);\n    }\n    else {\n        nextToken(parser, context);\n    }\n    return parser.finishNode({\n        type: 'JSXOpeningElement',\n        name: tagName,\n        attributes,\n        selfClosing,\n    }, start);\n}\nfunction parseJSXElementName(parser, context) {\n    const { tokenStart } = parser;\n    rescanJSXIdentifier(parser);\n    let key = parseJSXIdentifier(parser, context);\n    if (parser.getToken() === 21)\n        return parseJSXNamespacedName(parser, context, key, tokenStart);\n    while (consumeOpt(parser, context, 67108877)) {\n        rescanJSXIdentifier(parser);\n        key = parseJSXMemberExpression(parser, context, key, tokenStart);\n    }\n    return key;\n}\nfunction parseJSXMemberExpression(parser, context, object, start) {\n    const property = parseJSXIdentifier(parser, context);\n    return parser.finishNode({\n        type: 'JSXMemberExpression',\n        object,\n        property,\n    }, start);\n}\nfunction parseJSXAttributes(parser, context, privateScope) {\n    const attributes = [];\n    while (parser.getToken() !== 8457014 &&\n        parser.getToken() !== 8390721 &&\n        parser.getToken() !== 1048576) {\n        attributes.push(parseJsxAttribute(parser, context, privateScope));\n    }\n    return attributes;\n}\nfunction parseJSXSpreadAttribute(parser, context, privateScope) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    consume(parser, context, 14);\n    const expression = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n    consume(parser, context, 1074790415);\n    return parser.finishNode({\n        type: 'JSXSpreadAttribute',\n        argument: expression,\n    }, start);\n}\nfunction parseJsxAttribute(parser, context, privateScope) {\n    const { tokenStart } = parser;\n    if (parser.getToken() === 2162700)\n        return parseJSXSpreadAttribute(parser, context, privateScope);\n    rescanJSXIdentifier(parser);\n    let value = null;\n    let name = parseJSXIdentifier(parser, context);\n    if (parser.getToken() === 21) {\n        name = parseJSXNamespacedName(parser, context, name, tokenStart);\n    }\n    if (parser.getToken() === 1077936155) {\n        const token = scanJSXAttributeValue(parser, context);\n        switch (token) {\n            case 134283267:\n                value = parseLiteral(parser, context);\n                break;\n            case 8456256:\n                value = parseJSXRootElementOrFragment(parser, context, privateScope, 0, parser.tokenStart);\n                break;\n            case 2162700:\n                value = parseJSXExpressionContainer(parser, context, privateScope, 0, 1);\n                break;\n            default:\n                parser.report(154);\n        }\n    }\n    return parser.finishNode({\n        type: 'JSXAttribute',\n        value,\n        name,\n    }, tokenStart);\n}\nfunction parseJSXNamespacedName(parser, context, namespace, start) {\n    consume(parser, context, 21);\n    const name = parseJSXIdentifier(parser, context);\n    return parser.finishNode({\n        type: 'JSXNamespacedName',\n        namespace,\n        name,\n    }, start);\n}\nfunction parseJSXExpressionContainer(parser, context, privateScope, inJSXChild, isAttr) {\n    const { tokenStart: start } = parser;\n    nextToken(parser, context | 32);\n    const { tokenStart } = parser;\n    if (parser.getToken() === 14)\n        return parseJSXSpreadChild(parser, context, privateScope, start);\n    let expression = null;\n    if (parser.getToken() === 1074790415) {\n        if (isAttr)\n            parser.report(157);\n        expression = parseJSXEmptyExpression(parser, {\n            index: parser.startIndex,\n            line: parser.startLine,\n            column: parser.startColumn,\n        });\n    }\n    else {\n        expression = parseExpression(parser, context, privateScope, 1, 0, tokenStart);\n    }\n    if (parser.getToken() !== 1074790415) {\n        parser.report(25, KeywordDescTable[1074790415 & 255]);\n    }\n    if (inJSXChild) {\n        nextJSXToken(parser);\n    }\n    else {\n        nextToken(parser, context);\n    }\n    return parser.finishNode({\n        type: 'JSXExpressionContainer',\n        expression,\n    }, start);\n}\nfunction parseJSXSpreadChild(parser, context, privateScope, start) {\n    consume(parser, context, 14);\n    const expression = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n    consume(parser, context, 1074790415);\n    return parser.finishNode({\n        type: 'JSXSpreadChild',\n        expression,\n    }, start);\n}\nfunction parseJSXEmptyExpression(parser, start) {\n    return parser.finishNode({\n        type: 'JSXEmptyExpression',\n    }, start, parser.tokenStart);\n}\nfunction parseJSXIdentifier(parser, context) {\n    const start = parser.tokenStart;\n    if (!(parser.getToken() & 143360)) {\n        parser.report(30, KeywordDescTable[parser.getToken() & 255]);\n    }\n    const { tokenValue } = parser;\n    nextToken(parser, context);\n    return parser.finishNode({\n        type: 'JSXIdentifier',\n        name: tokenValue,\n    }, start);\n}\n\nvar version$1 = \"6.1.4\";\n\nconst version = version$1;\nfunction parseScript(source, options) {\n    return parseSource(source, options);\n}\nfunction parseModule(source, options) {\n    return parseSource(source, options, 1 | 2);\n}\nfunction parse(source, options) {\n    return parseSource(source, options);\n}\n\nexport { parse, parseModule, parseScript, version };\n", "// Astring is a tiny and fast JavaScript code generator from an ESTree-compliant AST.\n//\n// Astring was written by David Bonnet and released under an MIT license.\n//\n// The Git repository for Astring is available at:\n// https://github.com/davidbonnet/astring.git\n//\n// Please use the GitHub bug tracker to report issues:\n// https://github.com/davidbonnet/astring/issues\n\nconst { stringify } = JSON\n\n/* c8 ignore if */\nif (!String.prototype.repeat) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\n/* c8 ignore if */\nif (!String.prototype.endsWith) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\nconst OPERATOR_PRECEDENCE = {\n  '||': 2,\n  '??': 3,\n  '&&': 4,\n  '|': 5,\n  '^': 6,\n  '&': 7,\n  '==': 8,\n  '!=': 8,\n  '===': 8,\n  '!==': 8,\n  '<': 9,\n  '>': 9,\n  '<=': 9,\n  '>=': 9,\n  in: 9,\n  instanceof: 9,\n  '<<': 10,\n  '>>': 10,\n  '>>>': 10,\n  '+': 11,\n  '-': 11,\n  '*': 12,\n  '%': 12,\n  '/': 12,\n  '**': 13,\n}\n\n// Enables parenthesis regardless of precedence\nexport const NEEDS_PARENTHESES = 17\n\nexport const EXPRESSIONS_PRECEDENCE = {\n  // Definitions\n  ArrayExpression: 20,\n  TaggedTemplateExpression: 20,\n  ThisExpression: 20,\n  Identifier: 20,\n  PrivateIdentifier: 20,\n  Literal: 18,\n  TemplateLiteral: 20,\n  Super: 20,\n  SequenceExpression: 20,\n  // Operations\n  MemberExpression: 19,\n  ChainExpression: 19,\n  CallExpression: 19,\n  NewExpression: 19,\n  // Other definitions\n  ArrowFunctionExpression: NEEDS_PARENTHESES,\n  ClassExpression: NEEDS_PARENTHESES,\n  FunctionExpression: NEEDS_PARENTHESES,\n  ObjectExpression: NEEDS_PARENTHESES,\n  // Other operations\n  UpdateExpression: 16,\n  UnaryExpression: 15,\n  AwaitExpression: 15,\n  BinaryExpression: 14,\n  LogicalExpression: 13,\n  ConditionalExpression: 4,\n  AssignmentExpression: 3,\n  YieldExpression: 2,\n  RestElement: 1,\n}\n\nfunction formatSequence(state, nodes) {\n  /*\n  Writes into `state` a sequence of `nodes`.\n  */\n  const { generator } = state\n  state.write('(')\n  if (nodes != null && nodes.length > 0) {\n    generator[nodes[0].type](nodes[0], state)\n    const { length } = nodes\n    for (let i = 1; i < length; i++) {\n      const param = nodes[i]\n      state.write(', ')\n      generator[param.type](param, state)\n    }\n  }\n  state.write(')')\n}\n\nfunction expressionNeedsParenthesis(state, node, parentNode, isRightHand) {\n  const nodePrecedence = state.expressionsPrecedence[node.type]\n  if (nodePrecedence === NEEDS_PARENTHESES) {\n    return true\n  }\n  const parentNodePrecedence = state.expressionsPrecedence[parentNode.type]\n  if (nodePrecedence !== parentNodePrecedence) {\n    // Different node types\n    return (\n      (!isRightHand &&\n        nodePrecedence === 15 &&\n        parentNodePrecedence === 14 &&\n        parentNode.operator === '**') ||\n      nodePrecedence < parentNodePrecedence\n    )\n  }\n  if (nodePrecedence !== 13 && nodePrecedence !== 14) {\n    // Not a `LogicalExpression` or `BinaryExpression`\n    return false\n  }\n  if (node.operator === '**' && parentNode.operator === '**') {\n    // Exponentiation operator has right-to-left associativity\n    return !isRightHand\n  }\n  if (\n    nodePrecedence === 13 &&\n    parentNodePrecedence === 13 &&\n    (node.operator === '??' || parentNode.operator === '??')\n  ) {\n    // Nullish coalescing and boolean operators cannot be combined\n    return true\n  }\n  if (isRightHand) {\n    // Parenthesis are used if both operators have the same precedence\n    return (\n      OPERATOR_PRECEDENCE[node.operator] <=\n      OPERATOR_PRECEDENCE[parentNode.operator]\n    )\n  }\n  return (\n    OPERATOR_PRECEDENCE[node.operator] <\n    OPERATOR_PRECEDENCE[parentNode.operator]\n  )\n}\n\nfunction formatExpression(state, node, parentNode, isRightHand) {\n  /*\n  Writes into `state` the provided `node`, adding parenthesis around if the provided `parentNode` needs it. If `node` is a right-hand argument, the provided `isRightHand` parameter should be `true`.\n  */\n  const { generator } = state\n  if (expressionNeedsParenthesis(state, node, parentNode, isRightHand)) {\n    state.write('(')\n    generator[node.type](node, state)\n    state.write(')')\n  } else {\n    generator[node.type](node, state)\n  }\n}\n\nfunction reindent(state, text, indent, lineEnd) {\n  /*\n  Writes into `state` the `text` string reindented with the provided `indent`.\n  */\n  const lines = text.split('\\n')\n  const end = lines.length - 1\n  state.write(lines[0].trim())\n  if (end > 0) {\n    state.write(lineEnd)\n    for (let i = 1; i < end; i++) {\n      state.write(indent + lines[i].trim() + lineEnd)\n    }\n    state.write(indent + lines[end].trim())\n  }\n}\n\nfunction formatComments(state, comments, indent, lineEnd) {\n  /*\n  Writes into `state` the provided list of `comments`, with the given `indent` and `lineEnd` strings.\n  Line comments will end with `\"\\n\"` regardless of the value of `lineEnd`.\n  Expects to start on a new unindented line.\n  */\n  const { length } = comments\n  for (let i = 0; i < length; i++) {\n    const comment = comments[i]\n    state.write(indent)\n    if (comment.type[0] === 'L') {\n      // Line comment\n      state.write('// ' + comment.value.trim() + '\\n', comment)\n    } else {\n      // Block comment\n      state.write('/*')\n      reindent(state, comment.value, indent, lineEnd)\n      state.write('*/' + lineEnd)\n    }\n  }\n}\n\nfunction hasCallExpression(node) {\n  /*\n  Returns `true` if the provided `node` contains a call expression and `false` otherwise.\n  */\n  let currentNode = node\n  while (currentNode != null) {\n    const { type } = currentNode\n    if (type[0] === 'C' && type[1] === 'a') {\n      // Is CallExpression\n      return true\n    } else if (type[0] === 'M' && type[1] === 'e' && type[2] === 'm') {\n      // Is MemberExpression\n      currentNode = currentNode.object\n    } else {\n      return false\n    }\n  }\n}\n\nfunction formatVariableDeclaration(state, node) {\n  /*\n  Writes into `state` a variable declaration.\n  */\n  const { generator } = state\n  const { declarations } = node\n  state.write(node.kind + ' ')\n  const { length } = declarations\n  if (length > 0) {\n    generator.VariableDeclarator(declarations[0], state)\n    for (let i = 1; i < length; i++) {\n      state.write(', ')\n      generator.VariableDeclarator(declarations[i], state)\n    }\n  }\n}\n\nlet ForInStatement,\n  FunctionDeclaration,\n  RestElement,\n  BinaryExpression,\n  ArrayExpression,\n  BlockStatement\n\nexport const GENERATOR = {\n  /*\n  Default generator.\n  */\n  Program(node, state) {\n    const indent = state.indent.repeat(state.indentLevel)\n    const { lineEnd, writeComments } = state\n    if (writeComments && node.comments != null) {\n      formatComments(state, node.comments, indent, lineEnd)\n    }\n    const statements = node.body\n    const { length } = statements\n    for (let i = 0; i < length; i++) {\n      const statement = statements[i]\n      if (writeComments && statement.comments != null) {\n        formatComments(state, statement.comments, indent, lineEnd)\n      }\n      state.write(indent)\n      this[statement.type](statement, state)\n      state.write(lineEnd)\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, indent, lineEnd)\n    }\n  },\n  BlockStatement: (BlockStatement = function (node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const statementIndent = indent + state.indent\n    state.write('{')\n    const statements = node.body\n    if (statements != null && statements.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, statementIndent, lineEnd)\n      }\n      const { length } = statements\n      for (let i = 0; i < length; i++) {\n        const statement = statements[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n      state.write(indent)\n    } else {\n      if (writeComments && node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, statementIndent, lineEnd)\n        state.write(indent)\n      }\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, statementIndent, lineEnd)\n    }\n    state.write('}')\n    state.indentLevel--\n  }),\n  ClassBody: BlockStatement,\n  StaticBlock(node, state) {\n    state.write('static ')\n    this.BlockStatement(node, state)\n  },\n  EmptyStatement(node, state) {\n    state.write(';')\n  },\n  ExpressionStatement(node, state) {\n    const precedence = state.expressionsPrecedence[node.expression.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      (precedence === 3 && node.expression.left.type[0] === 'O')\n    ) {\n      // Should always have parentheses or is an AssignmentExpression to an ObjectPattern\n      state.write('(')\n      this[node.expression.type](node.expression, state)\n      state.write(')')\n    } else {\n      this[node.expression.type](node.expression, state)\n    }\n    state.write(';')\n  },\n  IfStatement(node, state) {\n    state.write('if (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.consequent.type](node.consequent, state)\n    if (node.alternate != null) {\n      state.write(' else ')\n      this[node.alternate.type](node.alternate, state)\n    }\n  },\n  LabeledStatement(node, state) {\n    this[node.label.type](node.label, state)\n    state.write(': ')\n    this[node.body.type](node.body, state)\n  },\n  BreakStatement(node, state) {\n    state.write('break')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  ContinueStatement(node, state) {\n    state.write('continue')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  WithStatement(node, state) {\n    state.write('with (')\n    this[node.object.type](node.object, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  SwitchStatement(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    state.indentLevel++\n    const caseIndent = indent + state.indent\n    const statementIndent = caseIndent + state.indent\n    state.write('switch (')\n    this[node.discriminant.type](node.discriminant, state)\n    state.write(') {' + lineEnd)\n    const { cases: occurences } = node\n    const { length: occurencesCount } = occurences\n    for (let i = 0; i < occurencesCount; i++) {\n      const occurence = occurences[i]\n      if (writeComments && occurence.comments != null) {\n        formatComments(state, occurence.comments, caseIndent, lineEnd)\n      }\n      if (occurence.test) {\n        state.write(caseIndent + 'case ')\n        this[occurence.test.type](occurence.test, state)\n        state.write(':' + lineEnd)\n      } else {\n        state.write(caseIndent + 'default:' + lineEnd)\n      }\n      const { consequent } = occurence\n      const { length: consequentCount } = consequent\n      for (let i = 0; i < consequentCount; i++) {\n        const statement = consequent[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n    }\n    state.indentLevel -= 2\n    state.write(indent + '}')\n  },\n  ReturnStatement(node, state) {\n    state.write('return')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n    state.write(';')\n  },\n  ThrowStatement(node, state) {\n    state.write('throw ')\n    this[node.argument.type](node.argument, state)\n    state.write(';')\n  },\n  TryStatement(node, state) {\n    state.write('try ')\n    this[node.block.type](node.block, state)\n    if (node.handler) {\n      const { handler } = node\n      if (handler.param == null) {\n        state.write(' catch ')\n      } else {\n        state.write(' catch (')\n        this[handler.param.type](handler.param, state)\n        state.write(') ')\n      }\n      this[handler.body.type](handler.body, state)\n    }\n    if (node.finalizer) {\n      state.write(' finally ')\n      this[node.finalizer.type](node.finalizer, state)\n    }\n  },\n  WhileStatement(node, state) {\n    state.write('while (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  DoWhileStatement(node, state) {\n    state.write('do ')\n    this[node.body.type](node.body, state)\n    state.write(' while (')\n    this[node.test.type](node.test, state)\n    state.write(');')\n  },\n  ForStatement(node, state) {\n    state.write('for (')\n    if (node.init != null) {\n      const { init } = node\n      if (init.type[0] === 'V') {\n        formatVariableDeclaration(state, init)\n      } else {\n        this[init.type](init, state)\n      }\n    }\n    state.write('; ')\n    if (node.test) {\n      this[node.test.type](node.test, state)\n    }\n    state.write('; ')\n    if (node.update) {\n      this[node.update.type](node.update, state)\n    }\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  ForInStatement: (ForInStatement = function (node, state) {\n    state.write(`for ${node.await ? 'await ' : ''}(`)\n    const { left } = node\n    if (left.type[0] === 'V') {\n      formatVariableDeclaration(state, left)\n    } else {\n      this[left.type](left, state)\n    }\n    // Identifying whether node.type is `ForInStatement` or `ForOfStatement`\n    state.write(node.type[3] === 'I' ? ' in ' : ' of ')\n    this[node.right.type](node.right, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  }),\n  ForOfStatement: ForInStatement,\n  DebuggerStatement(node, state) {\n    state.write('debugger;', node)\n  },\n  FunctionDeclaration: (FunctionDeclaration = function (node, state) {\n    state.write(\n      (node.async ? 'async ' : '') +\n        (node.generator ? 'function* ' : 'function ') +\n        (node.id ? node.id.name : ''),\n      node,\n    )\n    formatSequence(state, node.params)\n    state.write(' ')\n    this[node.body.type](node.body, state)\n  }),\n  FunctionExpression: FunctionDeclaration,\n  VariableDeclaration(node, state) {\n    formatVariableDeclaration(state, node)\n    state.write(';')\n  },\n  VariableDeclarator(node, state) {\n    this[node.id.type](node.id, state)\n    if (node.init != null) {\n      state.write(' = ')\n      this[node.init.type](node.init, state)\n    }\n  },\n  ClassDeclaration(node, state) {\n    state.write('class ' + (node.id ? `${node.id.name} ` : ''), node)\n    if (node.superClass) {\n      state.write('extends ')\n      const { superClass } = node\n      const { type } = superClass\n      const precedence = state.expressionsPrecedence[type]\n      if (\n        (type[0] !== 'C' || type[1] !== 'l' || type[5] !== 'E') &&\n        (precedence === NEEDS_PARENTHESES ||\n          precedence < state.expressionsPrecedence.ClassExpression)\n      ) {\n        // Not a ClassExpression that needs parentheses\n        state.write('(')\n        this[node.superClass.type](superClass, state)\n        state.write(')')\n      } else {\n        this[superClass.type](superClass, state)\n      }\n      state.write(' ')\n    }\n    this.ClassBody(node.body, state)\n  },\n  ImportDeclaration(node, state) {\n    state.write('import ')\n    const { specifiers, attributes } = node\n    const { length } = specifiers\n    // TODO: Once babili is fixed, put this after condition\n    // https://github.com/babel/babili/issues/430\n    let i = 0\n    if (length > 0) {\n      for (; i < length; ) {\n        if (i > 0) {\n          state.write(', ')\n        }\n        const specifier = specifiers[i]\n        const type = specifier.type[6]\n        if (type === 'D') {\n          // ImportDefaultSpecifier\n          state.write(specifier.local.name, specifier)\n          i++\n        } else if (type === 'N') {\n          // ImportNamespaceSpecifier\n          state.write('* as ' + specifier.local.name, specifier)\n          i++\n        } else {\n          // ImportSpecifier\n          break\n        }\n      }\n      if (i < length) {\n        state.write('{')\n        for (;;) {\n          const specifier = specifiers[i]\n          const { name } = specifier.imported\n          state.write(name, specifier)\n          if (name !== specifier.local.name) {\n            state.write(' as ' + specifier.local.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n        state.write('}')\n      }\n      state.write(' from ')\n    }\n    this.Literal(node.source, state)\n\n    if (attributes && attributes.length > 0) {\n      state.write(' with { ')\n      for (let i = 0; i < attributes.length; i++) {\n        this.ImportAttribute(attributes[i], state)\n        if (i < attributes.length - 1) state.write(', ')\n      }\n\n      state.write(' }')\n    }\n    state.write(';')\n  },\n  ImportAttribute(node, state) {\n    this.Identifier(node.key, state)\n    state.write(': ')\n    this.Literal(node.value, state)\n  },\n  ImportExpression(node, state) {\n    state.write('import(')\n    this[node.source.type](node.source, state)\n    state.write(')')\n  },\n  ExportDefaultDeclaration(node, state) {\n    state.write('export default ')\n    this[node.declaration.type](node.declaration, state)\n    if (\n      state.expressionsPrecedence[node.declaration.type] != null &&\n      node.declaration.type[0] !== 'F'\n    ) {\n      // All expression nodes except `FunctionExpression`\n      state.write(';')\n    }\n  },\n  ExportNamedDeclaration(node, state) {\n    state.write('export ')\n    if (node.declaration) {\n      this[node.declaration.type](node.declaration, state)\n    } else {\n      state.write('{')\n      const { specifiers } = node,\n        { length } = specifiers\n      if (length > 0) {\n        for (let i = 0; ; ) {\n          const specifier = specifiers[i]\n          const { name } = specifier.local\n          state.write(name, specifier)\n          if (name !== specifier.exported.name) {\n            state.write(' as ' + specifier.exported.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n      }\n      state.write('}')\n      if (node.source) {\n        state.write(' from ')\n        this.Literal(node.source, state)\n      }\n\n      if (node.attributes && node.attributes.length > 0) {\n        state.write(' with { ')\n        for (let i = 0; i < node.attributes.length; i++) {\n          this.ImportAttribute(node.attributes[i], state)\n          if (i < node.attributes.length - 1) state.write(', ')\n        }\n\n        state.write(' }')\n      }\n\n      state.write(';')\n    }\n  },\n  ExportAllDeclaration(node, state) {\n    if (node.exported != null) {\n      state.write('export * as ' + node.exported.name + ' from ')\n    } else {\n      state.write('export * from ')\n    }\n    this.Literal(node.source, state)\n\n    if (node.attributes && node.attributes.length > 0) {\n      state.write(' with { ')\n      for (let i = 0; i < node.attributes.length; i++) {\n        this.ImportAttribute(node.attributes[i], state)\n        if (i < node.attributes.length - 1) state.write(', ')\n      }\n\n      state.write(' }')\n    }\n\n    state.write(';')\n  },\n  MethodDefinition(node, state) {\n    if (node.static) {\n      state.write('static ')\n    }\n    const kind = node.kind[0]\n    if (kind === 'g' || kind === 's') {\n      // Getter or setter\n      state.write(node.kind + ' ')\n    }\n    if (node.value.async) {\n      state.write('async ')\n    }\n    if (node.value.generator) {\n      state.write('*')\n    }\n    if (node.computed) {\n      state.write('[')\n      this[node.key.type](node.key, state)\n      state.write(']')\n    } else {\n      this[node.key.type](node.key, state)\n    }\n    formatSequence(state, node.value.params)\n    state.write(' ')\n    this[node.value.body.type](node.value.body, state)\n  },\n  ClassExpression(node, state) {\n    this.ClassDeclaration(node, state)\n  },\n  ArrowFunctionExpression(node, state) {\n    state.write(node.async ? 'async ' : '', node)\n    const { params } = node\n    if (params != null) {\n      // Omit parenthesis if only one named parameter\n      if (params.length === 1 && params[0].type[0] === 'I') {\n        // If params[0].type[0] starts with 'I', it can't be `ImportDeclaration` nor `IfStatement` and thus is `Identifier`\n        state.write(params[0].name, params[0])\n      } else {\n        formatSequence(state, node.params)\n      }\n    }\n    state.write(' => ')\n    if (node.body.type[0] === 'O') {\n      // Body is an object expression\n      state.write('(')\n      this.ObjectExpression(node.body, state)\n      state.write(')')\n    } else {\n      this[node.body.type](node.body, state)\n    }\n  },\n  ThisExpression(node, state) {\n    state.write('this', node)\n  },\n  Super(node, state) {\n    state.write('super', node)\n  },\n  RestElement: (RestElement = function (node, state) {\n    state.write('...')\n    this[node.argument.type](node.argument, state)\n  }),\n  SpreadElement: RestElement,\n  YieldExpression(node, state) {\n    state.write(node.delegate ? 'yield*' : 'yield')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n  },\n  AwaitExpression(node, state) {\n    state.write('await ', node)\n    formatExpression(state, node.argument, node)\n  },\n  TemplateLiteral(node, state) {\n    const { quasis, expressions } = node\n    state.write('`')\n    const { length } = expressions\n    for (let i = 0; i < length; i++) {\n      const expression = expressions[i]\n      const quasi = quasis[i]\n      state.write(quasi.value.raw, quasi)\n      state.write('${')\n      this[expression.type](expression, state)\n      state.write('}')\n    }\n    const quasi = quasis[quasis.length - 1]\n    state.write(quasi.value.raw, quasi)\n    state.write('`')\n  },\n  TemplateElement(node, state) {\n    state.write(node.value.raw, node)\n  },\n  TaggedTemplateExpression(node, state) {\n    formatExpression(state, node.tag, node)\n    this[node.quasi.type](node.quasi, state)\n  },\n  ArrayExpression: (ArrayExpression = function (node, state) {\n    state.write('[')\n    if (node.elements.length > 0) {\n      const { elements } = node,\n        { length } = elements\n      for (let i = 0; ; ) {\n        const element = elements[i]\n        if (element != null) {\n          this[element.type](element, state)\n        }\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          if (element == null) {\n            state.write(', ')\n          }\n          break\n        }\n      }\n    }\n    state.write(']')\n  }),\n  ArrayPattern: ArrayExpression,\n  ObjectExpression(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const propertyIndent = indent + state.indent\n    state.write('{')\n    if (node.properties.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n      }\n      const comma = ',' + lineEnd\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        const property = properties[i]\n        if (writeComments && property.comments != null) {\n          formatComments(state, property.comments, propertyIndent, lineEnd)\n        }\n        state.write(propertyIndent)\n        this[property.type](property, state)\n        if (++i < length) {\n          state.write(comma)\n        } else {\n          break\n        }\n      }\n      state.write(lineEnd)\n      if (writeComments && node.trailingComments != null) {\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n      }\n      state.write(indent + '}')\n    } else if (writeComments) {\n      if (node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n        if (node.trailingComments != null) {\n          formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        }\n        state.write(indent + '}')\n      } else if (node.trailingComments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        state.write(indent + '}')\n      } else {\n        state.write('}')\n      }\n    } else {\n      state.write('}')\n    }\n    state.indentLevel--\n  },\n  Property(node, state) {\n    if (node.method || node.kind[0] !== 'i') {\n      // Either a method or of kind `set` or `get` (not `init`)\n      this.MethodDefinition(node, state)\n    } else {\n      if (!node.shorthand) {\n        if (node.computed) {\n          state.write('[')\n          this[node.key.type](node.key, state)\n          state.write(']')\n        } else {\n          this[node.key.type](node.key, state)\n        }\n        state.write(': ')\n      }\n      this[node.value.type](node.value, state)\n    }\n  },\n  PropertyDefinition(node, state) {\n    if (node.static) {\n      state.write('static ')\n    }\n    if (node.computed) {\n      state.write('[')\n    }\n    this[node.key.type](node.key, state)\n    if (node.computed) {\n      state.write(']')\n    }\n    if (node.value == null) {\n      if (node.key.type[0] !== 'F') {\n        state.write(';')\n      }\n      return\n    }\n    state.write(' = ')\n    this[node.value.type](node.value, state)\n    state.write(';')\n  },\n  ObjectPattern(node, state) {\n    state.write('{')\n    if (node.properties.length > 0) {\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        this[properties[i].type](properties[i], state)\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          break\n        }\n      }\n    }\n    state.write('}')\n  },\n  SequenceExpression(node, state) {\n    formatSequence(state, node.expressions)\n  },\n  UnaryExpression(node, state) {\n    if (node.prefix) {\n      const {\n        operator,\n        argument,\n        argument: { type },\n      } = node\n      state.write(operator)\n      const needsParentheses = expressionNeedsParenthesis(state, argument, node)\n      if (\n        !needsParentheses &&\n        (operator.length > 1 ||\n          (type[0] === 'U' &&\n            (type[1] === 'n' || type[1] === 'p') &&\n            argument.prefix &&\n            argument.operator[0] === operator &&\n            (operator === '+' || operator === '-')))\n      ) {\n        // Large operator or argument is UnaryExpression or UpdateExpression node\n        state.write(' ')\n      }\n      if (needsParentheses) {\n        state.write(operator.length > 1 ? ' (' : '(')\n        this[type](argument, state)\n        state.write(')')\n      } else {\n        this[type](argument, state)\n      }\n    } else {\n      // FIXME: This case never occurs\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  UpdateExpression(node, state) {\n    // Always applied to identifiers or members, no parenthesis check needed\n    if (node.prefix) {\n      state.write(node.operator)\n      this[node.argument.type](node.argument, state)\n    } else {\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  AssignmentExpression(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' ' + node.operator + ' ')\n    this[node.right.type](node.right, state)\n  },\n  AssignmentPattern(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' = ')\n    this[node.right.type](node.right, state)\n  },\n  BinaryExpression: (BinaryExpression = function (node, state) {\n    const isIn = node.operator === 'in'\n    if (isIn) {\n      // Avoids confusion in `for` loops initializers\n      state.write('(')\n    }\n    formatExpression(state, node.left, node, false)\n    state.write(' ' + node.operator + ' ')\n    formatExpression(state, node.right, node, true)\n    if (isIn) {\n      state.write(')')\n    }\n  }),\n  LogicalExpression: BinaryExpression,\n  ConditionalExpression(node, state) {\n    const { test } = node\n    const precedence = state.expressionsPrecedence[test.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence <= state.expressionsPrecedence.ConditionalExpression\n    ) {\n      state.write('(')\n      this[test.type](test, state)\n      state.write(')')\n    } else {\n      this[test.type](test, state)\n    }\n    state.write(' ? ')\n    this[node.consequent.type](node.consequent, state)\n    state.write(' : ')\n    this[node.alternate.type](node.alternate, state)\n  },\n  NewExpression(node, state) {\n    state.write('new ')\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression ||\n      hasCallExpression(node.callee)\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    formatSequence(state, node['arguments'])\n  },\n  CallExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    if (node.optional) {\n      state.write('?.')\n    }\n    formatSequence(state, node['arguments'])\n  },\n  ChainExpression(node, state) {\n    this[node.expression.type](node.expression, state)\n  },\n  MemberExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.object.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.MemberExpression\n    ) {\n      state.write('(')\n      this[node.object.type](node.object, state)\n      state.write(')')\n    } else {\n      this[node.object.type](node.object, state)\n    }\n    if (node.computed) {\n      if (node.optional) {\n        state.write('?.')\n      }\n      state.write('[')\n      this[node.property.type](node.property, state)\n      state.write(']')\n    } else {\n      if (node.optional) {\n        state.write('?.')\n      } else {\n        state.write('.')\n      }\n      this[node.property.type](node.property, state)\n    }\n  },\n  MetaProperty(node, state) {\n    state.write(node.meta.name + '.' + node.property.name, node)\n  },\n  Identifier(node, state) {\n    state.write(node.name, node)\n  },\n  PrivateIdentifier(node, state) {\n    state.write(`#${node.name}`, node)\n  },\n  Literal(node, state) {\n    if (node.raw != null) {\n      // Non-standard property\n      state.write(node.raw, node)\n    } else if (node.regex != null) {\n      this.RegExpLiteral(node, state)\n    } else if (node.bigint != null) {\n      state.write(node.bigint + 'n', node)\n    } else {\n      state.write(stringify(node.value), node)\n    }\n  },\n  RegExpLiteral(node, state) {\n    const { regex } = node\n    state.write(`/${regex.pattern}/${regex.flags}`, node)\n  },\n}\n\nconst EMPTY_OBJECT = {}\n\n/*\nDEPRECATED: Alternate export of `GENERATOR`.\n*/\nexport const baseGenerator = GENERATOR\n\nclass State {\n  constructor(options) {\n    const setup = options == null ? EMPTY_OBJECT : options\n    this.output = ''\n    // Functional options\n    if (setup.output != null) {\n      this.output = setup.output\n      this.write = this.writeToStream\n    } else {\n      this.output = ''\n    }\n    this.generator = setup.generator != null ? setup.generator : GENERATOR\n    this.expressionsPrecedence =\n      setup.expressionsPrecedence != null\n        ? setup.expressionsPrecedence\n        : EXPRESSIONS_PRECEDENCE\n    // Formating setup\n    this.indent = setup.indent != null ? setup.indent : '  '\n    this.lineEnd = setup.lineEnd != null ? setup.lineEnd : '\\n'\n    this.indentLevel =\n      setup.startingIndentLevel != null ? setup.startingIndentLevel : 0\n    this.writeComments = setup.comments ? setup.comments : false\n    // Source map\n    if (setup.sourceMap != null) {\n      this.write =\n        setup.output == null ? this.writeAndMap : this.writeToStreamAndMap\n      this.sourceMap = setup.sourceMap\n      this.line = 1\n      this.column = 0\n      this.lineEndSize = this.lineEnd.split('\\n').length - 1\n      this.mapping = {\n        original: null,\n        // Uses the entire state to avoid generating ephemeral objects\n        generated: this,\n        name: undefined,\n        source: setup.sourceMap.file || setup.sourceMap._file,\n      }\n    }\n  }\n\n  write(code) {\n    this.output += code\n  }\n\n  writeToStream(code) {\n    this.output.write(code)\n  }\n\n  writeAndMap(code, node) {\n    this.output += code\n    this.map(code, node)\n  }\n\n  writeToStreamAndMap(code, node) {\n    this.output.write(code)\n    this.map(code, node)\n  }\n\n  map(code, node) {\n    if (node != null) {\n      const { type } = node\n      if (type[0] === 'L' && type[2] === 'n') {\n        // LineComment\n        this.column = 0\n        this.line++\n        return\n      }\n      if (node.loc != null) {\n        const { mapping } = this\n        mapping.original = node.loc.start\n        mapping.name = node.name\n        this.sourceMap.addMapping(mapping)\n      }\n      if (\n        (type[0] === 'T' && type[8] === 'E') ||\n        (type[0] === 'L' && type[1] === 'i' && typeof node.value === 'string')\n      ) {\n        // TemplateElement or Literal string node\n        const { length } = code\n        let { column, line } = this\n        for (let i = 0; i < length; i++) {\n          if (code[i] === '\\n') {\n            column = 0\n            line++\n          } else {\n            column++\n          }\n        }\n        this.column = column\n        this.line = line\n        return\n      }\n    }\n    const { length } = code\n    const { lineEnd } = this\n    if (length > 0) {\n      if (\n        this.lineEndSize > 0 &&\n        (lineEnd.length === 1\n          ? code[length - 1] === lineEnd\n          : code.endsWith(lineEnd))\n      ) {\n        this.line += this.lineEndSize\n        this.column = 0\n      } else {\n        this.column += length\n      }\n    }\n  }\n\n  toString() {\n    return this.output\n  }\n}\n\nexport function generate(node, options) {\n  /*\n  Returns a string representing the rendered code of the provided AST `node`.\n  The `options` are:\n\n  - `indent`: string to use for indentation (defaults to `\u2423\u2423`)\n  - `lineEnd`: string to use for line endings (defaults to `\\n`)\n  - `startingIndentLevel`: indent level to start from (defaults to `0`)\n  - `comments`: generate comments if `true` (defaults to `false`)\n  - `output`: output stream to write the rendered code to (defaults to `null`)\n  - `generator`: custom code generator (defaults to `GENERATOR`)\n  - `expressionsPrecedence`: custom map of node types and their precedence level (defaults to `EXPRESSIONS_PRECEDENCE`)\n  */\n  const state = new State(options)\n  // Travel through the AST node and generate the code\n  state.generator[node.type](node, state)\n  return state.output\n}\n", "import { parseScript } from \"meriyah\";\r\n// import { parse } from 'acorn-hammerhead';\r\nimport { generate } from \"astring\";\r\nimport EventEmitter from \"events\";\r\n\r\nclass JS extends EventEmitter {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t/*\r\n        this.parseOptions = { \r\n            allowReturnOutsideFunction: true, \r\n            allowImportExportEverywhere: true, \r\n            ecmaVersion: 2021, \r\n        };\r\n        */\r\n\t\tthis.parseOptions = {\r\n\t\t\tranges: true,\r\n\t\t\tmodule: true,\r\n\t\t\tglobalReturn: true,\r\n\t\t};\r\n\t\tthis.generationOptions = {\r\n\t\t\tformat: {\r\n\t\t\t\tquotes: \"double\",\r\n\t\t\t\tescapeless: true,\r\n\t\t\t\tcompact: true,\r\n\t\t\t},\r\n\t\t};\r\n\t\tthis.parse = parseScript /*parse*/;\r\n\t\tthis.generate = generate;\r\n\t}\r\n\trewrite(str, data = {}) {\r\n\t\treturn this.recast(str, data, \"rewrite\");\r\n\t}\r\n\tsource(str, data = {}) {\r\n\t\treturn this.recast(str, data, \"source\");\r\n\t}\r\n\trecast(str, data = {}, type = \"\") {\r\n\t\ttry {\r\n\t\t\tconst output = [];\r\n\t\t\tconst ast = this.parse(str, this.parseOptions);\r\n\t\t\tconst meta = {\r\n\t\t\t\tdata,\r\n\t\t\t\tchanges: [],\r\n\t\t\t\tinput: str,\r\n\t\t\t\tast,\r\n\t\t\t\tget slice() {\r\n\t\t\t\t\treturn slice;\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\tlet slice = 0;\r\n\r\n\t\t\tthis.iterate(ast, (node, parent = null) => {\r\n\t\t\t\tif (parent && parent.inTransformer) node.isTransformer = true;\r\n\t\t\t\tnode.parent = parent;\r\n\r\n\t\t\t\tthis.emit(node.type, node, meta, type);\r\n\t\t\t});\r\n\r\n\t\t\tmeta.changes.sort((a, b) => a.start - b.start || a.end - b.end);\r\n\r\n\t\t\tfor (const change of meta.changes) {\r\n\t\t\t\tif (\"start\" in change && typeof change.start === \"number\")\r\n\t\t\t\t\toutput.push(str.slice(slice, change.start));\r\n\t\t\t\tif (change.node)\r\n\t\t\t\t\toutput.push(\r\n\t\t\t\t\t\ttypeof change.node === \"string\"\r\n\t\t\t\t\t\t\t? change.node\r\n\t\t\t\t\t\t\t: generate(change.node, this.generationOptions)\r\n\t\t\t\t\t);\r\n\t\t\t\tif (\"end\" in change && typeof change.end === \"number\")\r\n\t\t\t\t\tslice = change.end;\r\n\t\t\t}\r\n\t\t\toutput.push(str.slice(slice));\r\n\t\t\treturn output.join(\"\");\r\n\t\t} catch (e) {\r\n\t\t\treturn str;\r\n\t\t}\r\n\t}\r\n\titerate(ast, handler) {\r\n\t\tif (typeof ast != \"object\" || !handler) return;\r\n\t\twalk(ast, null, handler);\r\n\t\tfunction walk(node, parent, handler) {\r\n\t\t\tif (typeof node != \"object\" || !handler) return;\r\n\t\t\thandler(node, parent, handler);\r\n\t\t\tfor (const child in node) {\r\n\t\t\t\tif (child === \"parent\") continue;\r\n\t\t\t\tif (Array.isArray(node[child])) {\r\n\t\t\t\t\tnode[child].forEach((entry) => {\r\n\t\t\t\t\t\tif (entry) walk(entry, node, handler);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (node[child]) walk(node[child], node, handler);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (typeof node.iterateEnd === \"function\") node.iterateEnd();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default JS;\r\n", "import HTML from \"./html.js\";\r\nimport CSS from \"./css.js\";\r\nimport JS from \"./js.js\";\r\nimport setCookie from \"set-cookie-parser\";\r\nimport { xor, base64, plain } from \"./codecs.js\";\r\nimport {\r\n\tvalidateCookie,\r\n\tdb,\r\n\tgetCookies,\r\n\tsetCookies,\r\n\tserialize,\r\n} from \"./cookie.js\";\r\nimport {\r\n\tattributes,\r\n\tisUrl,\r\n\tisForbidden,\r\n\tisHtml,\r\n\tisSrcset,\r\n\tisStyle,\r\n\ttext,\r\n\tinjectHead,\r\n\tcreateHtmlInject,\r\n\tcreateJsInject,\r\n} from \"./rewrite.html.js\";\r\n//import { call, destructureDeclaration, dynamicImport, getProperty, importDeclaration, setProperty, sourceMethods, wrapEval, wrapIdentifier } from './rewrite.script.js';\r\nimport {\r\n\tdynamicImport,\r\n\timportMeta,\r\n\tidentifier,\r\n\timportDeclaration,\r\n\tproperty,\r\n\tunwrap,\r\n\twrapEval,\r\n} from \"./rewrite.script.js\";\r\nimport { openDB } from \"idb\";\r\nimport { BareClient } from \"@mercuryworkshop/bare-mux\";\r\nimport EventEmitter from \"events\";\r\n\r\n/**\r\n * @typedef {import('../uv.js').UVConfig} UVConfig\r\n */\r\n\r\nclass Ultraviolet {\r\n\t/**\r\n\t *\r\n\t * @param {UVConfig} [options]\r\n\t */\r\n\tconstructor(options = {}) {\r\n\t\tthis.prefix = options.prefix || \"/service/\";\r\n\t\t//this.urlRegex = /^(#|about:|data:|mailto:|javascript:)/;\r\n\t\tthis.urlRegex = /^(#|about:|data:|mailto:)/;\r\n\t\tthis.rewriteUrl = options.rewriteUrl || this.rewriteUrl;\r\n\t\tthis.rewriteImport = options.rewriteImport || this.rewriteImport;\r\n\t\tthis.sourceUrl = options.sourceUrl || this.sourceUrl;\r\n\t\tthis.encodeUrl = options.encodeUrl || this.encodeUrl;\r\n\t\tthis.decodeUrl = options.decodeUrl || this.decodeUrl;\r\n\t\tthis.vanilla = \"vanilla\" in options ? options.vanilla : false;\r\n\t\tthis.meta = options.meta || {};\r\n\t\tthis.meta.base ||= undefined;\r\n\t\tthis.meta.origin ||= \"\";\r\n\t\tthis.bundleScript = options.bundle || \"/uv.bundle.js\";\r\n\t\tthis.handlerScript = options.handler || \"/uv.handler.js\";\r\n\t\tthis.clientScript =\r\n\t\t\toptions.client ||\r\n\t\t\t(options.bundle &&\r\n\t\t\t\toptions.bundle.includes(\"uv.bundle.js\") &&\r\n\t\t\t\toptions.bundle.replace(\"uv.bundle.js\", \"uv.client.js\")) ||\r\n\t\t\t\"/uv.client.js\";\r\n\t\tthis.configScript = options.config || \"/uv.config.js\";\r\n\t\tthis.meta.url ||= this.meta.base || \"\";\r\n\t\tthis.codec = Ultraviolet.codec;\r\n\t\tthis.html = new HTML(this);\r\n\t\tthis.css = new CSS(this);\r\n\t\tthis.js = new JS(this);\r\n\t\tthis.openDB = this.constructor.openDB;\r\n\t\tthis.master = \"__uv\";\r\n\t\tthis.dataPrefix = \"__uv$\";\r\n\t\tthis.attributePrefix = \"__uv\";\r\n\t\tthis.createHtmlInject = createHtmlInject;\r\n\t\tthis.createJsInject = createJsInject;\r\n\t\tthis.attrs = {\r\n\t\t\tisUrl,\r\n\t\t\tisForbidden,\r\n\t\t\tisHtml,\r\n\t\t\tisSrcset,\r\n\t\t\tisStyle,\r\n\t\t};\r\n\t\tif (!this.vanilla) this.implementUVMiddleware();\r\n\t\tthis.cookie = {\r\n\t\t\tvalidateCookie,\r\n\t\t\tdb: () => {\r\n\t\t\t\treturn db(this.constructor.openDB);\r\n\t\t\t},\r\n\t\t\tgetCookies,\r\n\t\t\tsetCookies,\r\n\t\t\tserialize,\r\n\t\t\tsetCookie,\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t *\r\n\t * @param {string} str Script being imported\r\n\t * @param {string} src Script that is importing\r\n\t * @param {*} meta\r\n\t */\r\n\trewriteImport(str, src, meta = this.meta) {\r\n\t\t// use importiing script as the base\r\n\t\treturn this.rewriteUrl(str, {\r\n\t\t\t...meta,\r\n\t\t\tbase: src,\r\n\t\t});\r\n\t}\r\n\trewriteUrl(str, meta = this.meta) {\r\n\t\tstr = new String(str).trim();\r\n\t\tif (!str || this.urlRegex.test(str)) return str;\r\n\r\n\t\tif (str.startsWith(\"javascript:\")) {\r\n\t\t\treturn \"javascript:\" + this.js.rewrite(str.slice(\"javascript:\".length));\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\treturn (\r\n\t\t\t\tmeta.origin + this.prefix + this.encodeUrl(new URL(str, meta.base).href)\r\n\t\t\t);\r\n\t\t} catch (e) {\r\n\t\t\treturn meta.origin + this.prefix + this.encodeUrl(str);\r\n\t\t}\r\n\t}\r\n\tsourceUrl(str, meta = this.meta) {\r\n\t\tif (!str || this.urlRegex.test(str)) return str;\r\n\t\ttry {\r\n\t\t\treturn new URL(\r\n\t\t\t\tthis.decodeUrl(str.slice(this.prefix.length + meta.origin.length)),\r\n\t\t\t\tmeta.base\r\n\t\t\t).href;\r\n\t\t} catch (e) {\r\n\t\t\treturn this.decodeUrl(str.slice(this.prefix.length + meta.origin.length));\r\n\t\t}\r\n\t}\r\n\tencodeUrl(str) {\r\n\t\treturn encodeURIComponent(str);\r\n\t}\r\n\tdecodeUrl(str) {\r\n\t\treturn decodeURIComponent(str);\r\n\t}\r\n\timplementUVMiddleware() {\r\n\t\t// HTML\r\n\t\tattributes(this);\r\n\t\ttext(this);\r\n\t\tinjectHead(this);\r\n\t\t// JS\r\n\t\timportDeclaration(this);\r\n\t\tdynamicImport(this);\r\n\t\timportMeta(this);\r\n\t\tproperty(this);\r\n\t\twrapEval(this);\r\n\t\tidentifier(this);\r\n\t\tunwrap(this);\r\n\t}\r\n\tget rewriteHtml() {\r\n\t\treturn this.html.rewrite.bind(this.html);\r\n\t}\r\n\tget sourceHtml() {\r\n\t\treturn this.html.source.bind(this.html);\r\n\t}\r\n\tget rewriteCSS() {\r\n\t\treturn this.css.rewrite.bind(this.css);\r\n\t}\r\n\tget sourceCSS() {\r\n\t\treturn this.css.source.bind(this.css);\r\n\t}\r\n\tget rewriteJS() {\r\n\t\treturn this.js.rewrite.bind(this.js);\r\n\t}\r\n\tget sourceJS() {\r\n\t\treturn this.js.source.bind(this.js);\r\n\t}\r\n\tstatic codec = { xor, base64, plain };\r\n\tstatic setCookie = setCookie;\r\n\tstatic openDB = openDB;\r\n\tstatic BareClient = BareClient;\r\n\tstatic EventEmitter = EventEmitter;\r\n}\r\n\r\nexport default Ultraviolet;\r\nif (typeof self === \"object\") self.Ultraviolet = Ultraviolet;\r\n", "// -------------------------------------------------------------\r\n// WARNING: this file is used by both the client and the server.\r\n// Do not use any browser or node-specific API!\r\n// -------------------------------------------------------------\r\nexport const none = {\r\n\tencode: (str) => str,\r\n\tdecode: (str) => str,\r\n};\r\n\r\nexport const plain = {\r\n\tencode(str) {\r\n\t\tif (!str) return str;\r\n\t\treturn encodeURIComponent(str);\r\n\t},\r\n\tdecode(str) {\r\n\t\tif (!str) return str;\r\n\t\treturn decodeURIComponent(str);\r\n\t},\r\n};\r\n\r\nexport const xor = {\r\n\tencode(str) {\r\n\t\tif (!str) return str;\r\n\t        let result = \"\";\r\n\t        let len = str.length;\r\n\t        for (let i = 0; i < len; i++) {\r\n\t            const char = str[i];\r\n\t            result += i % 2 ? String.fromCharCode(char.charCodeAt(0) ^ 2) : char;\r\n\t        }\r\n\t        return encodeURIComponent(result);\r\n\t},\r\n\tdecode(str) {\r\n\t        if (!str) return str;\r\n\t        str = decodeURIComponent(str);\r\n\t        let result = \"\";\r\n\t        let len = str.length;\r\n\t        for (let i = 0; i < len; i++) {\r\n\t            const char = str[i];\r\n\t            result += i % 2 ? String.fromCharCode(char.charCodeAt(0) ^ 2) : char;\r\n\t        }\r\n\t\treturn result;\r\n\t}\r\n};\r\n\r\nexport const base64 = {\r\n\tencode(str) {\r\n\t\tif (!str) return str;\r\n\t\tstr = str.toString();\r\n\r\n\t\treturn btoa(encodeURIComponent(str));\r\n\t},\r\n\tdecode(str) {\r\n\t\tif (!str) return str;\r\n\t\tstr = str.toString();\r\n\r\n\t\treturn decodeURIComponent(atob(str));\r\n\t},\r\n};\r\n", "// -------------------------------------------------------------\r\n// WARNING: this file is used by both the client and the server.\r\n// Do not use any browser or node-specific API!\r\n// -------------------------------------------------------------\r\nimport setCookie from \"set-cookie-parser\";\r\n\r\nfunction validateCookie(cookie, meta, js = false) {\r\n\tif (cookie.httpOnly && !!js) return false;\r\n\r\n\tif (cookie.domain.startsWith(\".\")) {\r\n\t\tif (!meta.url.hostname.endsWith(cookie.domain.slice(1))) return false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (cookie.domain !== meta.url.hostname) return false;\r\n\tif (cookie.secure && meta.url.protocol === \"http:\") return false;\r\n\tif (!meta.url.pathname.startsWith(cookie.path)) return false;\r\n\r\n\treturn true;\r\n}\r\n\r\nasync function db(openDB) {\r\n\tconst db = await openDB(\"__op\", 1, {\r\n\t\tupgrade(db) {\r\n\t\t\tconst store = db.createObjectStore(\"cookies\", {\r\n\t\t\t\tkeyPath: \"id\",\r\n\t\t\t});\r\n\t\t\tstore.createIndex(\"path\", \"path\");\r\n\t\t},\r\n\t});\r\n\tdb.transaction([\"cookies\"], \"readwrite\").store.index(\"path\");\r\n\treturn db;\r\n}\r\n\r\nfunction serialize(cookies = [], meta, js) {\r\n\tlet str = \"\";\r\n\tfor (const cookie of cookies) {\r\n\t\tif (!validateCookie(cookie, meta, js)) continue;\r\n\t\tif (str.length) str += \"; \";\r\n\t\tstr += cookie.name;\r\n\t\tstr += \"=\";\r\n\t\tstr += cookie.value;\r\n\t}\r\n\treturn str;\r\n}\r\n\r\nasync function getCookies(db) {\r\n\tconst now = new Date();\r\n\treturn (await db.getAll(\"cookies\")).filter((cookie) => {\r\n\t\tlet expired = false;\r\n\t\tif (cookie.set) {\r\n\t\t\tif (cookie.maxAge) {\r\n\t\t\t\texpired = cookie.set.getTime() + cookie.maxAge * 1e3 < now;\r\n\t\t\t} else if (cookie.expires) {\r\n\t\t\t\texpired = new Date(cookie.expires.toLocaleString()) < now;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (expired) {\r\n\t\t\tdb.delete(\"cookies\", cookie.id);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t});\r\n}\r\n\r\nfunction setCookies(data, db, meta) {\r\n\tif (!db) return false;\r\n\r\n\tconst cookies = setCookie(data, {\r\n\t\tdecodeValues: false,\r\n\t});\r\n\r\n\tfor (const cookie of cookies) {\r\n\t\tif (!cookie.domain) cookie.domain = \".\" + meta.url.hostname;\r\n\t\tif (!cookie.path) cookie.path = \"/\";\r\n\r\n\t\tif (!cookie.domain.startsWith(\".\")) {\r\n\t\t\tcookie.domain = \".\" + cookie.domain;\r\n\t\t}\r\n\r\n\t\tdb.put(\"cookies\", {\r\n\t\t\t...cookie,\r\n\t\t\tid: `${cookie.domain}@${cookie.path}@${cookie.name}`,\r\n\t\t\tset: new Date(Date.now()),\r\n\t\t});\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nexport { validateCookie, getCookies, setCookies, db, serialize };\r\n", "/**\r\n * @typedef {import('./index').default} Ultraviolet\r\n */\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nexport function attributes(ctx, meta = ctx.meta) {\r\n\tconst { html, js, attributePrefix } = ctx;\r\n\tconst origPrefix = attributePrefix + \"-attr-\";\r\n\r\n\thtml.on(\"attr\", (attr, type) => {\r\n\t\tif (\r\n\t\t\tattr.node.tagName === \"base\" &&\r\n\t\t\tattr.name === \"href\" &&\r\n\t\t\tattr.options.document\r\n\t\t) {\r\n\t\t\tmeta.base = new URL(attr.value, meta.url);\r\n\t\t}\r\n\r\n\t\tif (type === \"rewrite\" && isUrl(attr.name, attr.tagName)) {\r\n\t\t\tattr.node.setAttribute(origPrefix + attr.name, attr.value);\r\n\t\t\tattr.value = ctx.rewriteUrl(attr.value, meta);\r\n\t\t}\r\n\r\n\t\tif (type === \"rewrite\" && isSrcset(attr.name)) {\r\n\t\t\tattr.node.setAttribute(origPrefix + attr.name, attr.value);\r\n\t\t\tattr.value = html.wrapSrcset(attr.value, meta);\r\n\t\t}\r\n\r\n\t\tif (type === \"rewrite\" && isHtml(attr.name)) {\r\n\t\t\tattr.node.setAttribute(origPrefix + attr.name, attr.value);\r\n\t\t\tattr.value = html.rewrite(attr.value, {\r\n\t\t\t\t...meta,\r\n\t\t\t\tdocument: true,\r\n\t\t\t\tinjectHead: attr.options.injectHead || [],\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (type === \"rewrite\" && isStyle(attr.name)) {\r\n\t\t\tattr.node.setAttribute(origPrefix + attr.name, attr.value);\r\n\t\t\tattr.value = ctx.rewriteCSS(attr.value, {\r\n\t\t\t\tcontext: \"declarationList\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (type === \"rewrite\" && isForbidden(attr.name)) {\r\n\t\t\tattr.name = origPrefix + attr.name;\r\n\t\t}\r\n\r\n\t\tif (type === \"rewrite\" && isEvent(attr.name)) {\r\n\t\t\tattr.node.setAttribute(origPrefix + attr.name, attr.value);\r\n\t\t\tattr.value = js.rewrite(attr.value, meta);\r\n\t\t}\r\n\r\n\t\tif (type === \"source\" && attr.name.startsWith(origPrefix)) {\r\n\t\t\tif (attr.node.hasAttribute(attr.name.slice(origPrefix.length)))\r\n\t\t\t\tattr.node.removeAttribute(attr.name.slice(origPrefix.length));\r\n\t\t\tattr.name = attr.name.slice(origPrefix.length);\r\n\t\t}\r\n\r\n\t\t/*\r\n        if (isHtml(attr.name)) {\r\n\r\n        };\r\n\r\n        if (isStyle(attr.name)) {\r\n\r\n        };\r\n\r\n        if (isSrcset(attr.name)) {\r\n\r\n        };\r\n        */\r\n\t});\r\n}\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nexport function text(ctx) {\r\n\tconst { html, js, css } = ctx;\r\n\r\n\thtml.on(\"text\", (text, type) => {\r\n\t\tif (text.element.tagName === \"script\") {\r\n\t\t\ttext.value =\r\n\t\t\t\ttype === \"rewrite\" ? js.rewrite(text.value) : js.source(text.value);\r\n\t\t}\r\n\r\n\t\tif (text.element.tagName === \"style\") {\r\n\t\t\ttext.value =\r\n\t\t\t\ttype === \"rewrite\" ? css.rewrite(text.value) : css.source(text.value);\r\n\t\t}\r\n\t});\r\n\treturn true;\r\n}\r\n\r\nexport function isUrl(name, tag) {\r\n\treturn (\r\n\t\t(tag === \"object\" && name === \"data\") ||\r\n\t\t[\r\n\t\t\t\"src\",\r\n\t\t\t\"href\",\r\n\t\t\t\"ping\",\r\n\t\t\t\"movie\",\r\n\t\t\t\"action\",\r\n\t\t\t\"poster\",\r\n\t\t\t\"profile\",\r\n\t\t\t\"background\",\r\n\t\t].indexOf(name) > -1\r\n\t);\r\n}\r\n\r\nexport function isEvent(name) {\r\n\treturn (\r\n\t\t[\r\n\t\t\t\"onafterprint\",\r\n\t\t\t\"onbeforeprint\",\r\n\t\t\t\"onbeforeunload\",\r\n\t\t\t\"onerror\",\r\n\t\t\t\"onhashchange\",\r\n\t\t\t\"onload\",\r\n\t\t\t\"onmessage\",\r\n\t\t\t\"onoffline\",\r\n\t\t\t\"ononline\",\r\n\t\t\t\"onpagehide\",\r\n\t\t\t\"onpopstate\",\r\n\t\t\t\"onstorage\",\r\n\t\t\t\"onunload\",\r\n\t\t\t\"onblur\",\r\n\t\t\t\"onchange\",\r\n\t\t\t\"oncontextmenu\",\r\n\t\t\t\"onfocus\",\r\n\t\t\t\"oninput\",\r\n\t\t\t\"oninvalid\",\r\n\t\t\t\"onreset\",\r\n\t\t\t\"onsearch\",\r\n\t\t\t\"onselect\",\r\n\t\t\t\"onsubmit\",\r\n\t\t\t\"onkeydown\",\r\n\t\t\t\"onkeypress\",\r\n\t\t\t\"onkeyup\",\r\n\t\t\t\"onclick\",\r\n\t\t\t\"ondblclick\",\r\n\t\t\t\"onmousedown\",\r\n\t\t\t\"onmousemove\",\r\n\t\t\t\"onmouseout\",\r\n\t\t\t\"onmouseover\",\r\n\t\t\t\"onmouseup\",\r\n\t\t\t\"onmousewheel\",\r\n\t\t\t\"onwheel\",\r\n\t\t\t\"ondrag\",\r\n\t\t\t\"ondragend\",\r\n\t\t\t\"ondragenter\",\r\n\t\t\t\"ondragleave\",\r\n\t\t\t\"ondragover\",\r\n\t\t\t\"ondragstart\",\r\n\t\t\t\"ondrop\",\r\n\t\t\t\"onscroll\",\r\n\t\t\t\"oncopy\",\r\n\t\t\t\"oncut\",\r\n\t\t\t\"onpaste\",\r\n\t\t\t\"onabort\",\r\n\t\t\t\"oncanplay\",\r\n\t\t\t\"oncanplaythrough\",\r\n\t\t\t\"oncuechange\",\r\n\t\t\t\"ondurationchange\",\r\n\t\t\t\"onemptied\",\r\n\t\t\t\"onended\",\r\n\t\t\t\"onerror\",\r\n\t\t\t\"onloadeddata\",\r\n\t\t\t\"onloadedmetadata\",\r\n\t\t\t\"onloadstart\",\r\n\t\t\t\"onpause\",\r\n\t\t\t\"onplay\",\r\n\t\t\t\"onplaying\",\r\n\t\t\t\"onprogress\",\r\n\t\t\t\"onratechange\",\r\n\t\t\t\"onseeked\",\r\n\t\t\t\"onseeking\",\r\n\t\t\t\"onstalled\",\r\n\t\t\t\"onsuspend\",\r\n\t\t\t\"ontimeupdate\",\r\n\t\t\t\"onvolumechange\",\r\n\t\t\t\"onwaiting\",\r\n\t\t].indexOf(name) > -1\r\n\t);\r\n}\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nexport function injectHead(ctx) {\r\n\tconst { html } = ctx;\r\n\thtml.on(\"element\", (element, type) => {\r\n\t\tif (type !== \"rewrite\") return false;\r\n\t\tif (element.tagName !== \"head\") return false;\r\n\t\tif (!(\"injectHead\" in element.options)) return false;\r\n\r\n\t\telement.childNodes.unshift(...element.options.injectHead);\r\n\t});\r\n}\r\n\r\nexport function createJsInject(cookies = \"\", referrer = \"\") {\r\n\treturn (\r\n\t\t`self.__uv$cookies = ${JSON.stringify(cookies)};` +\r\n\t\t`self.__uv$referrer = ${JSON.stringify(referrer)};`\r\n\t);\r\n}\r\n\r\nexport function createHtmlInject(\r\n\thandlerScript,\r\n\tbundleScript,\r\n\tclientScript,\r\n\tconfigScript,\r\n\tcookies,\r\n\treferrer\r\n) {\r\n\treturn [\r\n\t\t{\r\n\t\t\ttagName: \"script\",\r\n\t\t\tnodeName: \"script\",\r\n\t\t\tchildNodes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tnodeName: \"#text\",\r\n\t\t\t\t\tvalue: createJsInject(cookies, referrer),\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tattrs: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"__uv-script\",\r\n\t\t\t\t\tvalue: \"1\",\r\n\t\t\t\t\tskip: true,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tskip: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttagName: \"script\",\r\n\t\t\tnodeName: \"script\",\r\n\t\t\tchildNodes: [],\r\n\t\t\tattrs: [\r\n\t\t\t\t{ name: \"src\", value: bundleScript, skip: true },\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"__uv-script\",\r\n\t\t\t\t\tvalue: \"1\",\r\n\t\t\t\t\tskip: true,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttagName: \"script\",\r\n\t\t\tnodeName: \"script\",\r\n\t\t\tchildNodes: [],\r\n\t\t\tattrs: [\r\n\t\t\t\t{ name: \"src\", value: clientScript, skip: true },\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"__uv-script\",\r\n\t\t\t\t\tvalue: \"1\",\r\n\t\t\t\t\tskip: true,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttagName: \"script\",\r\n\t\t\tnodeName: \"script\",\r\n\t\t\tchildNodes: [],\r\n\t\t\tattrs: [\r\n\t\t\t\t{ name: \"src\", value: configScript, skip: true },\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"__uv-script\",\r\n\t\t\t\t\tvalue: \"1\",\r\n\t\t\t\t\tskip: true,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttagName: \"script\",\r\n\t\t\tnodeName: \"script\",\r\n\t\t\tchildNodes: [],\r\n\t\t\tattrs: [\r\n\t\t\t\t{ name: \"src\", value: handlerScript, skip: true },\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"__uv-script\",\r\n\t\t\t\t\tvalue: \"1\",\r\n\t\t\t\t\tskip: true,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n}\r\n\r\nexport function isForbidden(name) {\r\n\treturn (\r\n\t\t[\"http-equiv\", \"integrity\", \"sandbox\", \"nonce\", \"crossorigin\"].indexOf(\r\n\t\t\tname\r\n\t\t) > -1\r\n\t);\r\n}\r\n\r\nexport function isHtml(name) {\r\n\treturn name === \"srcdoc\";\r\n}\r\n\r\nexport function isStyle(name) {\r\n\treturn name === \"style\";\r\n}\r\n\r\nexport function isSrcset(name) {\r\n\treturn name === \"srcSet\" || name === \"srcset\" || name === \"imagesrcset\";\r\n}\r\n", "/**\r\n * @typedef {import('./index').default} Ultraviolet\r\n */\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nfunction property(ctx) {\r\n\tconst { js } = ctx;\r\n\tjs.on(\"MemberExpression\", (node, data, type) => {\r\n\t\tif (node.object.type === \"Super\") return false;\r\n\r\n\t\tif (type === \"rewrite\" && computedProperty(node)) {\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tnode: \"__uv.$wrap((\",\r\n\t\t\t\tstart: node.property.start,\r\n\t\t\t\tend: node.property.start,\r\n\t\t\t});\r\n\t\t\tnode.iterateEnd = function () {\r\n\t\t\t\tdata.changes.push({\r\n\t\t\t\t\tnode: \"))\",\r\n\t\t\t\t\tstart: node.property.end,\r\n\t\t\t\t\tend: node.property.end,\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t(!node.computed &&\r\n\t\t\t\tnode.property.name === \"location\" &&\r\n\t\t\t\ttype === \"rewrite\") ||\r\n\t\t\t(node.property.name === \"__uv$location\" && type === \"source\")\r\n\t\t) {\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tstart: node.property.start,\r\n\t\t\t\tend: node.property.end,\r\n\t\t\t\tnode:\r\n\t\t\t\t\ttype === \"rewrite\"\r\n\t\t\t\t\t\t? \"__uv$setSource(__uv).__uv$location\"\r\n\t\t\t\t\t\t: \"location\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t(!node.computed && node.property.name === \"top\" && type === \"rewrite\") ||\r\n\t\t\t(node.property.name === \"__uv$top\" && type === \"source\")\r\n\t\t) {\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tstart: node.property.start,\r\n\t\t\t\tend: node.property.end,\r\n\t\t\t\tnode: type === \"rewrite\" ? \"__uv$setSource(__uv).__uv$top\" : \"top\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t(!node.computed &&\r\n\t\t\t\tnode.property.name === \"parent\" &&\r\n\t\t\t\ttype === \"rewrite\") ||\r\n\t\t\t(node.property.name === \"__uv$parent\" && type === \"source\")\r\n\t\t) {\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tstart: node.property.start,\r\n\t\t\t\tend: node.property.end,\r\n\t\t\t\tnode:\r\n\t\t\t\t\ttype === \"rewrite\" ? \"__uv$setSource(__uv).__uv$parent\" : \"parent\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!node.computed &&\r\n\t\t\tnode.property.name === \"postMessage\" &&\r\n\t\t\ttype === \"rewrite\"\r\n\t\t) {\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tstart: node.property.start,\r\n\t\t\t\tend: node.property.end,\r\n\t\t\t\tnode: \"__uv$setSource(__uv).postMessage\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t(!node.computed && node.property.name === \"eval\" && type === \"rewrite\") ||\r\n\t\t\t(node.property.name === \"__uv$eval\" && type === \"source\")\r\n\t\t) {\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tstart: node.property.start,\r\n\t\t\t\tend: node.property.end,\r\n\t\t\t\tnode: type === \"rewrite\" ? \"__uv$setSource(__uv).__uv$eval\" : \"eval\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!node.computed &&\r\n\t\t\tnode.property.name === \"__uv$setSource\" &&\r\n\t\t\ttype === \"source\" &&\r\n\t\t\tnode.parent.type === \"CallExpression\"\r\n\t\t) {\r\n\t\t\tconst { parent, property } = node;\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tstart: property.start - 1,\r\n\t\t\t\tend: parent.end,\r\n\t\t\t});\r\n\r\n\t\t\tnode.iterateEnd = function () {\r\n\t\t\t\tdata.changes.push({\r\n\t\t\t\t\tstart: property.start,\r\n\t\t\t\t\tend: parent.end,\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nfunction identifier(ctx) {\r\n\tconst { js } = ctx;\r\n\tjs.on(\"Identifier\", (node, data, type) => {\r\n\t\tif (type !== \"rewrite\") return false;\r\n\t\tconst { parent } = node;\r\n\t\tif (![\"location\", \"eval\", \"parent\", \"top\"].includes(node.name))\r\n\t\t\treturn false;\r\n\t\tif (parent.type === \"VariableDeclarator\" && parent.id === node)\r\n\t\t\treturn false;\r\n\t\tif (\r\n\t\t\t(parent.type === \"AssignmentExpression\" ||\r\n\t\t\t\tparent.type === \"AssignmentPattern\") &&\r\n\t\t\tparent.left === node\r\n\t\t)\r\n\t\t\treturn false;\r\n\t\tif (\r\n\t\t\t(parent.type === \"FunctionExpression\" ||\r\n\t\t\t\tparent.type === \"FunctionDeclaration\") &&\r\n\t\t\tparent.id === node\r\n\t\t)\r\n\t\t\treturn false;\r\n\t\tif (\r\n\t\t\tparent.type === \"MemberExpression\" &&\r\n\t\t\tparent.property === node &&\r\n\t\t\t!parent.computed\r\n\t\t)\r\n\t\t\treturn false;\r\n\t\tif (\r\n\t\t\tnode.name === \"eval\" &&\r\n\t\t\tparent.type === \"CallExpression\" &&\r\n\t\t\tparent.callee === node\r\n\t\t)\r\n\t\t\treturn false;\r\n\t\tif (parent.type === \"Property\" && parent.key === node) return false;\r\n\t\tif (parent.type === \"Property\" && parent.value === node && parent.shorthand)\r\n\t\t\treturn false;\r\n\t\tif (\r\n\t\t\tparent.type === \"UpdateExpression\" &&\r\n\t\t\t(parent.operator === \"++\" || parent.operator === \"--\")\r\n\t\t)\r\n\t\t\treturn false;\r\n\t\tif (\r\n\t\t\t(parent.type === \"FunctionExpression\" ||\r\n\t\t\t\tparent.type === \"FunctionDeclaration\" ||\r\n\t\t\t\tparent.type === \"ArrowFunctionExpression\") &&\r\n\t\t\tparent.params.indexOf(node) !== -1\r\n\t\t)\r\n\t\t\treturn false;\r\n\t\tif (parent.type === \"MethodDefinition\") return false;\r\n\t\tif (parent.type === \"ClassDeclaration\") return false;\r\n\t\tif (parent.type === \"RestElement\") return false;\r\n\t\tif (parent.type === \"ExportSpecifier\") return false;\r\n\t\tif (parent.type === \"ImportSpecifier\") return false;\r\n\r\n\t\tdata.changes.push({\r\n\t\t\tstart: node.start,\r\n\t\t\tend: node.end,\r\n\t\t\tnode: \"__uv.$get(\" + node.name + \")\",\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nfunction wrapEval(ctx) {\r\n\tconst { js } = ctx;\r\n\tjs.on(\"CallExpression\", (node, data, type) => {\r\n\t\tif (type !== \"rewrite\") return false;\r\n\t\tif (!node.arguments.length) return false;\r\n\t\tif (node.callee.type !== \"Identifier\") return false;\r\n\t\tif (node.callee.name !== \"eval\") return false;\r\n\r\n\t\tconst [script] = node.arguments;\r\n\r\n\t\tdata.changes.push({\r\n\t\t\tnode: \"__uv.js.rewrite(\",\r\n\t\t\tstart: script.start,\r\n\t\t\tend: script.start,\r\n\t\t});\r\n\t\tnode.iterateEnd = function () {\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tnode: \")\",\r\n\t\t\t\tstart: script.end,\r\n\t\t\t\tend: script.end,\r\n\t\t\t});\r\n\t\t};\r\n\t});\r\n}\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nfunction importDeclaration(ctx) {\r\n\tconst { js } = ctx;\r\n\tjs.on(\"Literal\", (node, data, type) => {\r\n\t\tif (\r\n\t\t\t!(\r\n\t\t\t\t(node.parent.type === \"ImportDeclaration\" ||\r\n\t\t\t\t\tnode.parent.type === \"ExportAllDeclaration\" ||\r\n\t\t\t\t\tnode.parent.type === \"ExportNamedDeclaration\") &&\r\n\t\t\t\tnode.parent.source === node\r\n\t\t\t)\r\n\t\t)\r\n\t\t\treturn false;\r\n\r\n\t\tdata.changes.push({\r\n\t\t\tstart: node.start + 1,\r\n\t\t\tend: node.end - 1,\r\n\t\t\tnode:\r\n\t\t\t\ttype === \"rewrite\"\r\n\t\t\t\t\t? ctx.rewriteUrl(node.value)\r\n\t\t\t\t\t: ctx.sourceUrl(node.value),\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nfunction dynamicImport(ctx) {\r\n\tconst { js } = ctx;\r\n\tjs.on(\"ImportExpression\", (node, data, type) => {\r\n\t\tif (type !== \"rewrite\") return false;\r\n\t\tdata.changes.push({\r\n\t\t\t// pass script URL to dynamicImport\r\n\t\t\t// import() is always relative to script URL\r\n\t\t\tnode: `__uv.rewriteImport(${JSON.stringify(ctx.meta.url)},`,\r\n\t\t\tstart: node.source.start,\r\n\t\t\tend: node.source.start,\r\n\t\t});\r\n\t\tnode.iterateEnd = function () {\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tnode: \")\",\r\n\t\t\t\tstart: node.source.end,\r\n\t\t\t\tend: node.source.end,\r\n\t\t\t});\r\n\t\t};\r\n\t});\r\n}\r\n\r\n/**\r\n * @param {Ultraviolet} ctx\r\n */\r\nfunction importMeta(ctx) {\r\n\tconst { js } = ctx;\r\n\tjs.on(\"MemberExpression\", (node, data, type) => {\r\n\t\tif (\r\n\t\t\tnode.object.type == \"MetaProperty\" &&\r\n\t\t\tnode.property.type === \"Identifier\" &&\r\n\t\t\tnode.property.name === \"url\"\r\n\t\t) {\r\n\t\t\tif (type === \"rewrite\") {\r\n\t\t\t\tdata.changes.push({\r\n\t\t\t\t\tstart: node.start,\r\n\t\t\t\t\tend: node.end,\r\n\t\t\t\t\tnode: `__uv.sourceUrl(import.meta.url)`,\r\n\t\t\t\t});\r\n\t\t\t} else if (type === \"source\") {\r\n\t\t\t\tdata.changes.push({\r\n\t\t\t\t\tstart: node.start,\r\n\t\t\t\t\tend: node.end,\r\n\t\t\t\t\tnode: `import.meta.url`,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nfunction unwrap(ctx) {\r\n\tconst { js } = ctx;\r\n\tjs.on(\"CallExpression\", (node, data, type) => {\r\n\t\tif (type !== \"source\") return false;\r\n\t\tif (!isWrapped(node.callee)) return false;\r\n\r\n\t\tswitch (node.callee.property.name) {\r\n\t\t\tcase \"$wrap\":\r\n\t\t\t\t{\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!node.arguments ||\r\n\t\t\t\t\t\tnode.parent.type !== \"MemberExpression\" ||\r\n\t\t\t\t\t\tnode.parent.property !== node\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\tconst [property] = node.arguments;\r\n\r\n\t\t\t\t\tdata.changes.push({\r\n\t\t\t\t\t\tstart: node.callee.start,\r\n\t\t\t\t\t\tend: property.start,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tnode.iterateEnd = function () {\r\n\t\t\t\t\t\tdata.changes.push({\r\n\t\t\t\t\t\t\tstart: node.end - 2,\r\n\t\t\t\t\t\t\tend: node.end,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"$get\":\r\n\t\t\tcase \"rewriteUrl\":\r\n\t\t\t\t{\r\n\t\t\t\t\tconst [arg] = node.arguments;\r\n\r\n\t\t\t\t\tdata.changes.push({\r\n\t\t\t\t\t\tstart: node.callee.start,\r\n\t\t\t\t\t\tend: arg.start,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tnode.iterateEnd = function () {\r\n\t\t\t\t\t\tdata.changes.push({\r\n\t\t\t\t\t\t\tstart: node.end - 1,\r\n\t\t\t\t\t\t\tend: node.end,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"rewrite\":\r\n\t\t\t\t{\r\n\t\t\t\t\tconst [script] = node.arguments;\r\n\t\t\t\t\tdata.changes.push({\r\n\t\t\t\t\t\tstart: node.callee.start,\r\n\t\t\t\t\t\tend: script.start,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tnode.iterateEnd = function () {\r\n\t\t\t\t\t\tdata.changes.push({\r\n\t\t\t\t\t\t\tstart: node.end - 1,\r\n\t\t\t\t\t\t\tend: node.end,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction isWrapped(node) {\r\n\tif (node.type !== \"MemberExpression\") return false;\r\n\tif (node.property.name === \"rewrite\" && isWrapped(node.object)) return true;\r\n\tif (node.object.type !== \"Identifier\" || node.object.name !== \"__uv\")\r\n\t\treturn false;\r\n\tif (![\"js\", \"$get\", \"$wrap\", \"rewriteUrl\"].includes(node.property.name))\r\n\t\treturn false;\r\n\treturn true;\r\n}\r\n\r\nfunction computedProperty(parent) {\r\n\tif (!parent.computed) return false;\r\n\tconst { property: node } = parent;\r\n\tif (node.type === \"Literal\" && ![\"location\", \"top\", \"parent\"]) return false;\r\n\treturn true;\r\n}\r\n\r\nexport {\r\n\tproperty,\r\n\twrapEval,\r\n\tdynamicImport,\r\n\timportDeclaration,\r\n\timportMeta,\r\n\tidentifier,\r\n\tunwrap,\r\n};\r\n", "const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n", "const e=20,t=globalThis.fetch,r=globalThis.SharedWorker,a=globalThis.localStorage,s=globalThis.navigator.serviceWorker,o=MessagePort.prototype.postMessage,n={prototype:{send:WebSocket.prototype.send},CLOSED:WebSocket.CLOSED,CLOSING:WebSocket.CLOSING,CONNECTING:WebSocket.CONNECTING,OPEN:WebSocket.OPEN};async function c(){const e=(await self.clients.matchAll({type:\"window\",includeUncontrolled:!0})).map((async e=>{const t=await function(e){let t=new MessageChannel;return new Promise((r=>{e.postMessage({type:\"getPort\",port:t.port2},[t.port2]),t.port1.onmessage=e=>{r(e.data)}}))}(e);return await i(t),t})),t=Promise.race([Promise.any(e),new Promise(((e,t)=>setTimeout(t,1e3,new TypeError(\"timeout\"))))]);try{return await t}catch(e){if(e instanceof AggregateError)throw console.error(\"bare-mux: failed to get a bare-mux SharedWorker MessagePort as all clients returned an invalid MessagePort.\"),new Error(\"All clients returned an invalid MessagePort.\");return console.warn(\"bare-mux: failed to get a bare-mux SharedWorker MessagePort within 1s, retrying\"),await c()}}function i(e){const t=new MessageChannel,r=new Promise(((e,r)=>{t.port1.onmessage=t=>{\"pong\"===t.data.type&&e()},setTimeout(r,1500)}));return o.call(e,{message:{type:\"ping\"},port:t.port2},[t.port2]),r}function l(e,t){const a=new r(e,\"bare-mux-worker\");return t&&s.addEventListener(\"message\",(t=>{if(\"getPort\"===t.data.type&&t.data.port){console.debug(\"bare-mux: recieved request for port from sw\");const a=new r(e,\"bare-mux-worker\");o.call(t.data.port,a.port,[a.port])}})),a.port}let h=null;function d(){if(null===h){const e=new MessageChannel,t=new ReadableStream;let r;try{o.call(e.port1,t,[t]),r=!0}catch(e){r=!1}return h=r,r}return h}class p{constructor(e){this.channel=new BroadcastChannel(\"bare-mux\"),e instanceof MessagePort||e instanceof Promise?this.port=e:this.createChannel(e,!0)}createChannel(e,t){if(self.clients)this.port=c(),this.channel.onmessage=e=>{\"refreshPort\"===e.data.type&&(this.port=c())};else if(e&&SharedWorker){if(!e.startsWith(\"/\")&&!e.includes(\"://\"))throw new Error(\"Invalid URL. Must be absolute or start at the root.\");this.port=l(e,t),console.debug(\"bare-mux: setting localStorage bare-mux-path to\",e),a[\"bare-mux-path\"]=e}else{if(!SharedWorker)throw new Error(\"Unable to get a channel to the SharedWorker.\");{const e=a[\"bare-mux-path\"];if(console.debug(\"bare-mux: got localStorage bare-mux-path:\",e),!e)throw new Error(\"Unable to get bare-mux workerPath from localStorage.\");this.port=l(e,t)}}}async sendMessage(e,t){this.port instanceof Promise&&(this.port=await this.port);try{await i(this.port)}catch{return console.warn(\"bare-mux: Failed to get a ping response from the worker within 1.5s. Assuming port is dead.\"),this.createChannel(),await this.sendMessage(e,t)}const r=new MessageChannel,a=[r.port2,...t||[]],s=new Promise(((e,t)=>{r.port1.onmessage=r=>{const a=r.data;\"error\"===a.type?t(a.error):e(a)}}));return o.call(this.port,{message:e,port:r.port2},a),await s}}class w extends EventTarget{constructor(e,t=[],r,a){super(),this.protocols=t,this.readyState=n.CONNECTING,this.url=e.toString(),this.protocols=t;const s=e=>{this.protocols=e,this.readyState=n.OPEN;const t=new Event(\"open\");this.dispatchEvent(t)},o=async e=>{const t=new MessageEvent(\"message\",{data:e});this.dispatchEvent(t)},c=(e,t)=>{this.readyState=n.CLOSED;const r=new CloseEvent(\"close\",{code:e,reason:t});this.dispatchEvent(r)},i=()=>{this.readyState=n.CLOSED;const e=new Event(\"error\");this.dispatchEvent(e)};this.channel=new MessageChannel,this.channel.port1.onmessage=e=>{\"open\"===e.data.type?s(e.data.args[0]):\"message\"===e.data.type?o(e.data.args[0]):\"close\"===e.data.type?c(e.data.args[0],e.data.args[1]):\"error\"===e.data.type&&i()},r.sendMessage({type:\"websocket\",websocket:{url:e.toString(),protocols:t,requestHeaders:a,channel:this.channel.port2}},[this.channel.port2])}send(...e){if(this.readyState===n.CONNECTING)throw new DOMException(\"Failed to execute 'send' on 'WebSocket': Still in CONNECTING state.\");let t=e[0];t.buffer&&(t=t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)),o.call(this.channel.port1,{type:\"data\",data:t},t instanceof ArrayBuffer?[t]:[])}close(e,t){o.call(this.channel.port1,{type:\"close\",closeCode:e,closeReason:t})}}function u(e,t,r){console.error(`error while processing '${r}': `,t),e.postMessage({type:\"error\",error:t})}function g(e){for(let t=0;t<e.length;t++){const r=e[t];if(!\"!#$%&'*+-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz|~\".includes(r))return!1}return!0}const f=[\"ws:\",\"wss:\"],y=[101,204,205,304],b=[301,302,303,307,308];class m{constructor(e){this.worker=new p(e)}async getTransport(){return(await this.worker.sendMessage({type:\"get\"})).name}async setTransport(e,t,r){await this.setManualTransport(`\\n\\t\\t\\tconst { default: BareTransport } = await import(\"${e}\");\\n\\t\\t\\treturn [BareTransport, \"${e}\"];\\n\\t\\t`,t,r)}async setManualTransport(e,t,r){if(\"bare-mux-remote\"===e)throw new Error(\"Use setRemoteTransport.\");await this.worker.sendMessage({type:\"set\",client:{function:e,args:t}},r)}async setRemoteTransport(e,t){const r=new MessageChannel;r.port1.onmessage=async t=>{const r=t.data.port,a=t.data.message;if(\"fetch\"===a.type)try{e.ready||await e.init(),await async function(e,t,r){const a=await r.request(new URL(e.fetch.remote),e.fetch.method,e.fetch.body,e.fetch.headers,null);if(!d()&&a.body instanceof ReadableStream){const e=new Response(a.body);a.body=await e.arrayBuffer()}a.body instanceof ReadableStream||a.body instanceof ArrayBuffer?o.call(t,{type:\"fetch\",fetch:a},[a.body]):o.call(t,{type:\"fetch\",fetch:a})}(a,r,e)}catch(e){u(r,e,\"fetch\")}else if(\"websocket\"===a.type)try{e.ready||await e.init(),await async function(e,t,r){const[a,s]=r.connect(new URL(e.websocket.url),e.websocket.protocols,e.websocket.requestHeaders,(t=>{o.call(e.websocket.channel,{type:\"open\",args:[t]})}),(t=>{t instanceof ArrayBuffer?o.call(e.websocket.channel,{type:\"message\",args:[t]},[t]):o.call(e.websocket.channel,{type:\"message\",args:[t]})}),((t,r)=>{o.call(e.websocket.channel,{type:\"close\",args:[t,r]})}),(t=>{o.call(e.websocket.channel,{type:\"error\",args:[t]})}));e.websocket.channel.onmessage=e=>{\"data\"===e.data.type?a(e.data.data):\"close\"===e.data.type&&s(e.data.closeCode,e.data.closeReason)},o.call(t,{type:\"websocket\"})}(a,r,e)}catch(e){u(r,e,\"websocket\")}},await this.worker.sendMessage({type:\"set\",client:{function:\"bare-mux-remote\",args:[r.port2,t]}},[r.port2])}getInnerPort(){return this.worker.port}}class k{constructor(e){this.worker=new p(e)}createWebSocket(e,t=[],r,a){try{e=new URL(e)}catch(t){throw new DOMException(`Faiiled to construct 'WebSocket': The URL '${e}' is invalid.`)}if(!f.includes(e.protocol))throw new DOMException(`Failed to construct 'WebSocket': The URL's scheme must be either 'ws' or 'wss'. '${e.protocol}' is not allowed.`);Array.isArray(t)||(t=[t]),t=t.map(String);for(const e of t)if(!g(e))throw new DOMException(`Failed to construct 'WebSocket': The subprotocol '${e}' is invalid.`);a=a||{};return new w(e,t,this.worker,a)}async fetch(e,r){const a=new Request(e,r),s=r?.headers||a.headers,o=s instanceof Headers?Object.fromEntries(s):s,n=a.body;let c=new URL(a.url);if(c.protocol.startsWith(\"blob:\")){const e=await t(c),r=new Response(e.body,e);return r.rawHeaders=Object.fromEntries(e.headers),r}for(let e=0;;e++){let t=(await this.worker.sendMessage({type:\"fetch\",fetch:{remote:c.toString(),method:a.method,headers:o,body:n||void 0}},n?[n]:[])).fetch,s=new Response(y.includes(t.status)?void 0:t.body,{headers:new Headers(t.headers),status:t.status,statusText:t.statusText});s.rawHeaders=t.headers,s.rawResponse=t,s.finalURL=c.toString();const i=r?.redirect||a.redirect;if(!b.includes(s.status))return s;switch(i){case\"follow\":{const t=s.headers.get(\"location\");if(20>e&&null!==t){c=new URL(t,c);continue}throw new TypeError(\"Failed to fetch\")}case\"error\":throw new TypeError(\"Failed to fetch\");case\"manual\":return s}}}}console.debug(\"bare-mux: running v2.1.7 (build c56d286)\");export{k as BareClient,m as BareMuxConnection,w as BareWebSocket,n as WebSocketFields,p as WorkerConnection,d as browserSupportsTransferringStreams,k as default,e as maxRedirects,g as validProtocol};\n//# sourceMappingURL=index.mjs.map\n"],
  "mappings": "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,EAAG,EAAG,EAAG,MAAO,EAAG,WAAY,EAAG,WAAY,EAAG,EAAG,EAAG,WAAY,EAAG,OAAQ,EAAG,WAAY,EAAG,WAAY,EAAG,QAAS,EAAG,MAAO,EAAG,EAAG,EAAG,WAAY,EAAG,UAAW,EAAG,MAAO,EAAG,WAAY,EAAG,WAAY,EAAG,WAAY,EAAG,OAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,WAAY,EAAG,WAAY,EAAG,WAAY,EAAG,GAAI,EAAG,WAAY,EAAG,OAAQ,EAAG,EAAG,EAAG,GAAI,EAAG,SAAU,GAAI,EAAG,GAAI,EAAG,WAAY,EAAG,WAAY,GAAI,EAAG,SAAU,EAAG,WAAY,EAAG,GAAI,EAAG,WAAY,EAAG,WAAY,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,OAAQ,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,WAAY,EAAG,GAAI,EAAG,EAAG,EAAG,OAAQ,EAAG,EAAG,EAAG,EAAG,UAAW,EAAG,GAAI,EAAG,SAAU,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,UAAW,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,UAAW,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,WAAY,EAAG,SAAU,EAAG,WAAY,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,QAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,WAAY,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,WAAY,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,MAAO,EAAG,GAAI,EAAG,QAAS,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,OAAQ,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,QAAS,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,WAAY,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,UAAW,EAAG,EAAG,EAAG,EAAG,EAAG,WAAY,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,IAAK,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,WAAY,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,SAAU,EAAG,WAAY,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,SAAU,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,SAAU,EAAG,WAAY,EAAG,EAAG,EAAG,EAAG,UAAW,EAAG,QAAS,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,SAAU,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,WAAY,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,QAAS,EAAG,MAAO,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,UAAW,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,WAAY,EAAG,WAAY,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,WAAY,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,OAAQ,EAAG,GAAI,EAAG,WAAY,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,WAAY,EAAG,EAAG,EAAG,GAAI,EAAG,WAAY,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,QAAS,EAAG,EAAG,EAAG,EAAG,UAAW,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,SAAU,EAAG,GAAI,EAAG,WAAY,EAAG,WAAY,EAAG,QAAS,EAAG,IAAK,EAAG,GAAI,EAAG,QAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,WAAY,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,SAAU,GAAI,EAAG,EAAG,EAAG,WAAY,EAAG,WAAY,GAAI,EAAG,EAAG,EAAG,EAAG,SAAU,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,WAAY,EAAG,IAAK,EAAG,WAAY,EAAG,GAAI,GAAI,EAAG,IAAK,EAAG,WAAY,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,QAAS,GAAI,EAAG,IAAK,EAAG,WAAY,EAAG,GAAI,EAAG,IAAK,EAAG,SAAU,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,WAAY,EAAG,WAAY,EAAG,UAAW,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,KAAM,EAAG,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,WAAY,EAAG,EAAG,EAAG,WAAY,GAAI,EAAG,OAAQ,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,KAAM,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,WAAY,KAAM,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,WAAY,EAAG,KAAM,EAAG,MAAO,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,WAAY,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,QAAS,EAAG,WAAY,EAAG,MAAO,IAAK,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,WAAY,EAAG,WAAY,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,WAAY,EAAG,MAAO,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,QAAS,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,KAAM,EAAG,GAAI,IAAK,EAAG,EAAG,KAAM,GAAI,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,OAAQ,EAAG,EAAG,EAAG,EAAG,GAAI,MAAO,EAAG,EAAG,EAAG,GAAI,EAAG,SAAU,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,WAAY,EAAG,WAAY,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,WAAY,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,KAAM,EAAG,WAAY,EAAG,EAAG,EAAG,EAAG,QAAS,EAAG,WAAY,EAAG,WAAY,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,OAAQ,EAAG,GAAI,EAAG,SAAU,EAAG,SAAU,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,MAAO,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,WAAY,EAAG,WAAY,EAAG,WAAY,EAAG,UAAW,EAAG,WAAY,EAAG,UAAW,EAAG,WAAY,EAAG,SAAU,EAAG,WAAY,EAAG,QAAS,EAAG,WAAY,EAAG,GAAI,EAAG,GAAI,EAAG,SAAU,EAAG,IAAK,EAAG,GAAI,EAAG,WAAY,EAAG,OAAQ,EAAG,WAAY,EAAG,SAAU,EAAG,GAAI,GAAI,EAAG,UAAY,EAAG,UAAW,EAAG,UAAW,EAAG,EAAG,EAAG,WAAY,EAAG,UAAW,EAAG,WAAY,EAAG,OAAQ,EAAG,WAAY,EAAG,UAAW,EAAG,WAAY,EAAG,WAAY,EAAG,WAAY,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,OAAQ,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,UAAW,EAAG,WAAY,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,KAAM,GAAI,EAAG,EAAG,EAAG,WAAY,EAAG,WAAY,EAAG,WAAY,EAAG,MAAO,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,WAAY,EAAG,GAAI,EAAG,EAAG,OAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,UAAW,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,WAAY,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,KAAM,GAAI,EAAG,IAAK,EAAG,WAAY,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,WAAY,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,SAAU,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,OAAQ,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,MAAO,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,UAAW,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,IAAK,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,KAAM,EAAG,EAAG,EAAG,WAAY,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,WAAY,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,WAAY,EAAG,GAAI,EAAG,WAAY,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,EAAG,WAAY,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,WAAY,EAAG,EAAG,EAAG,WAAY,EAAG,UAAW,EAAG,QAAS,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,WAAY,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,WAAY,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,WAAY,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,OAAQ,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,GAAI,EAAG,QAAS,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,WAAY,EAAG,QAAS,EAAG,IAAK,EAAG,GAAI,EAAG,UAAW,GAAI,EAAG,IAAK,EAAG,WAAY,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,WAAY,EAAG,EAAG,EAAG,IAAK,EAAG,SAAU,EAAG,OAAQ,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,WAAY,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,UAAW,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,SAAU,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,WAAY,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,WAAY,EAAG,SAAU,EAAG,WAAY,EAAG,EAAG,EAAG,UAAW,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,SAAU,IAAK,EAAG,GAAI,EAAG,WAAY,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,KAAM,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,MAAO,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,KAAM,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,KAAM,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,WAAY,EAAG,MAAO,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,MAAO,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,KAAM,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG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A,EAAO,OAAS,CAAE,EACjEA,EAAO,QAAU,EACV6H,CACX,CAEA,IAAMK,GAAc,CAChB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,SACA,UACA,IACA,OACA,QACA,QACA,UACA,SACA,GACA,QACA,SACA,GACA,SACA,SACA,QACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,GACA,WACA,QACA,WACA,QACA,GACA,IACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SACA,IACA,GACA,QACA,OACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,KACA,OACA,OACA,KACA,OACA,KACA,OACA,KACA,OACA,KACA,KACA,KACA,OACA,KACA,KACA,OACA,KACA,KACA,QACA,QACA,WACA,SACA,GACJ,EACA,SAAS3C,EAAUvF,EAAQsB,EAAS,CAChCtB,EAAO,OAASA,EAAO,MAAQ,GAAK,EACpCA,EAAO,WAAaA,EAAO,MAC3BA,EAAO,YAAcA,EAAO,OAC5BA,EAAO,UAAYA,EAAO,KAC1BA,EAAO,SAASmI,GAAgBnI,EAAQsB,EAAS,CAAC,CAAC,CACvD,CACA,SAAS6G,GAAgBnI,EAAQsB,EAASjB,EAAO,CAC7C,IAAM+H,EAAgBpI,EAAO,QAAU,EACjC,CAAE,OAAAmB,CAAO,EAAInB,EACfwB,EAAQxB,EAAO,gBACnB,KAAOA,EAAO,MAAQA,EAAO,KAAK,CAC9BA,EAAO,WAAaA,EAAO,MAC3BA,EAAO,YAAcA,EAAO,OAC5BA,EAAO,UAAYA,EAAO,KAC1B,IAAIqC,EAAOrC,EAAO,YAClB,GAAIqC,GAAQ,IAAM,CACd,IAAMqB,EAAQwE,GAAY7F,CAAI,EA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EO,SAASH,GAAQG,EAAM,CAC7B,MACC,CACC,eACA,gBACA,iBACA,UACA,eACA,SACA,YACA,YACA,WACA,aACA,aACA,YACA,WACA,SACA,WACA,gBACA,UACA,UACA,YACA,UACA,WACA,WACA,WACA,YACA,aACA,UACA,UACA,aACA,cACA,cACA,aACA,cACA,YACA,eACA,UACA,SACA,YACA,cACA,cACA,aACA,cACA,SACA,WACA,SACA,QACA,UACA,UACA,YACA,mBACA,cACA,mBACA,YACA,UACA,UACA,eACA,mBACA,cACA,UACA,SACA,YACA,aACA,eACA,WACA,YACA,YACA,YACA,eACA,iBACA,WACD,EAAE,QAAQA,CAAI,EAAI,EAEpB,CAMO,SAASE,GAAWlB,EAAK,CAC/B,GAAM,CAAE,KAAAE,CAAK,EAAIF,EACjBE,EAAK,GAAG,UAAW,CAACiB,EAASZ,IAAS,CAGrC,GAFIA,IAAS,WACTY,EAAQ,UAAY,QACpB,EAAE,eAAgBA,EAAQ,SAAU,MAAO,GAE/CA,EAAQ,WAAW,QAAQ,GAAGA,EAAQ,QAAQ,UAAU,CACzD,CAAC,CACF,CAEO,SAASC,GAAeC,EAAU,GAAIC,EAAW,GAAI,CAC3D,MACC,uBAAuB,KAAK,UAAUD,CAAO,CAAC,yBACtB,KAAK,UAAUC,CAAQ,CAAC,GAElD,CAEO,SAASC,GACfC,EACAC,EACAC,EACAC,EACAN,EACAC,EACC,CACD,MAAO,CACN,CACC,QAAS,SACT,SAAU,SACV,WAAY,CACX,CACC,SAAU,QACV,MAAOF,GAAeC,EAASC,CAAQ,CACxC,CACD,EACA,MAAO,CACN,CACC,KAAM,cACN,MAAO,IACP,KAAM,EACP,CACD,EACA,KAAM,EACP,EACA,CACC,QAAS,SACT,SAAU,SACV,WAAY,CAAC,EACb,MAAO,CACN,CAAE,KAAM,MAAO,MAAOG,EAAc,KAAM,EAAK,EAC/C,CACC,KAAM,cACN,MAAO,IACP,KAAM,EACP,CACD,CACD,EACA,CACC,QAAS,SACT,SAAU,SACV,WAAY,CAAC,EACb,MAAO,CACN,CAAE,KAAM,MAAO,MAAOC,EAAc,KAAM,EAAK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",
  "names": ["require_events", "__commonJSMin", "exports", "module", "R", "ReflectApply", "target", "receiver", "args", "ReflectOwnKeys", "ProcessEmitWarning", "warning", "NumberIsNaN", "value", "EventEmitter", "once", "defaultMaxListeners", "checkListener", "listener", "arg", "n", "_getMaxListeners", "that", "type", "i", "doError", "events", "er", "err", "handler", "len", "listeners", "arrayClone", "_addListener", "prepend", "m", "existing", "w", "onceWrapper", "_onceWrap", "state", "wrapped", "list", "position", "originalListener", "spliceOne", "keys", "key", "_listeners", "unwrap", "evlistener", "unwrapListeners", "emitter", "listenerCount", "arr", "copy", "index", "ret", "name", "resolve", "reject", "errorListener", "resolver", "eventTargetAgnosticAddListener", "addErrorHandlerIfEventEmitter", "flags", "wrapListener", "require_set_cookie", "__commonJSMin", "exports", "module", "defaultParseOptions", "isNonEmptyString", "str", "parseString", "setCookieValue", "options", "parts", "nameValuePairStr", "parsed", "parseNameValuePair", "name", "value", "e", "cookie", "part", "sides", "key", "nameValueArr", "parse", "input", "sch", "cookies", "splitCookiesString", "cookiesString", "cookiesStrings", "pos", "start", "ch", "lastComma", "nextStart", "cookiesSeparatorFound", "skipWhitespace", "notSpecialChar", "import_events", "UNDEFINED_CODE_POINTS", "REPLACEMENT_CHARACTER", "CODE_POINTS", "SEQUENCES", "isSurrogate", "cp", "isSurrogatePair", "getSurrogatePairCodePoint", "cp1", "cp2", "isControlCodePoint", "isUndefinedCodePoint", "ERR", "DEFAULT_BUFFER_WATERLINE", "Preprocessor", "handler", "code", "cpOffset", "line", "col", "offset", "startCol", "startOffset", "cp", "nextCp", "isSurrogatePair", "getSurrogatePairCodePoint", "CODE_POINTS", "ERR", "chunk", "isLastChunk", "pattern", "caseSensitive", "i", "pos", "isSurrogate", "isControlCodePoint", "isUndefinedCodePoint", "count", "TokenType", "getTokenAttr", "token", "attrName", "i", "htmlDecodeTree", "c", "decodeMap", "fromCodePoint", "_a", "codePoint", "output", "replaceCodePoint", "CharCodes", "TO_LOWER_BIT", "BinTrieFlags", "isNumber", "code", "isHexadecimalCharacter", "isAsciiAlphaNumeric", "isEntityInAttributeInvalidEnd", "EntityDecoderState", "DecodingMode", "EntityDecoder", "decodeTree", "emitCodePoint", "errors", "decodeMode", "input", "offset", "start", "end", "base", "digitCount", "startIndex", "char", "lastCp", "expectedLength", "_a", "replaceCodePoint", "current", "valueLength", "determineBranch", "result", "consumed", "determineBranch", "decodeTree", "current", "nodeIndex", "char", "branchCount", "BinTrieFlags", "jumpOffset", "value", "lo", "hi", "mid", "midValue", "NS", "ATTRS", "DOCUMENT_MODE", "TAG_NAMES", "TAG_ID", "TAG_NAME_TO_ID", "getTagID", "tagName", "_a", "$", "SPECIAL_ELEMENTS", "NUMBERED_HEADERS", "UNESCAPED_TEXT", "hasUnescapedText", "tn", "scriptingEnabled", "State", "TokenizerMode", "isAsciiDigit", "cp", "CODE_POINTS", "isAsciiUpper", "isAsciiLower", "isAsciiLetter", "isAsciiAlphaNumeric", "toAsciiLower", "isWhitespace", "isScriptDataDoubleEscapeSequenceEnd", "getErrorForNumericCharacterReference", "code", "ERR", "isSurrogate", "isUndefinedCodePoint", "isControlCodePoint", "Tokenizer", "options", "handler", "Preprocessor", "EntityDecoder", "htmlDecodeTree", "consumed", "error", "cpOffset", "_a", "_b", "offset", "writeCallback", "chunk", "isLastChunk", "count", "i", "pattern", "caseSensitive", "TokenType", "TAG_ID", "initialName", "type", "chars", "attrNameFirstCh", "token", "getTokenAttr", "attrLocations", "ct", "getTagID", "nextLocation", "location", "ch", "DecodingMode", "REPLACEMENT_CHARACTER", "_cp", "SEQUENCES", "length", "IMPLICIT_END_TAG_REQUIRED", "TAG_ID", "IMPLICIT_END_TAG_REQUIRED_THOROUGHLY", "SCOPING_ELEMENTS_HTML", "SCOPING_ELEMENTS_HTML_LIST", "SCOPING_ELEMENTS_HTML_BUTTON", "SCOPING_ELEMENTS_MATHML", "SCOPING_ELEMENTS_SVG", "TABLE_ROW_CONTEXT", "TABLE_BODY_CONTEXT", "TABLE_CONTEXT", "TABLE_CELLS", "OpenElementStack", "document", "treeAdapter", "handler", "element", "NS", "tagID", "popped", "oldElement", "newElement", "idx", "referenceElement", "newElementID", "insertionIdx", "tagName", "targetIdx", "tagNames", "targetNS", "NUMBERED_HEADERS", "namespace", "i", "elementIdx", "htmlScope", "tn", "exclusionId", "EntryType", "MARKER", "FormattingElementList", "treeAdapter", "newElement", "neAttrs", "candidates", "neAttrsLength", "neTagName", "neNamespaceURI", "i", "entry", "element", "elementAttrs", "neAttrsMap", "neAttr", "validCandidates", "candidate", "cAttr", "token", "bookmarkIdx", "entryIndex", "markerIdx", "tagName", "defaultTreeAdapter", "DOCUMENT_MODE", "tagName", "namespaceURI", "attrs", "data", "value", "parentNode", "newNode", "referenceNode", "insertionIdx", "templateElement", "contentElement", "document", "name", "publicId", "systemId", "doctypeNode", "node", "mode", "idx", "text", "prevNode", "recipient", "recipientAttrsMap", "attr", "j", "element", "textNode", "commentNode", "location", "endLocation", "VALID_DOCTYPE_NAME", "VALID_SYSTEM_ID", "QUIRKS_MODE_SYSTEM_ID", "QUIRKS_MODE_PUBLIC_ID_PREFIXES", "QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES", "QUIRKS_MODE_PUBLIC_IDS", "LIMITED_QUIRKS_PUBLIC_ID_PREFIXES", "LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES", "hasPrefix", "publicId", "prefixes", "prefix", "isConforming", "token", "getDocumentMode", "DOCUMENT_MODE", "systemId", "MIME_TYPES", "DEFINITION_URL_ATTR", "ADJUSTED_DEFINITION_URL_ATTR", "SVG_ATTRS_ADJUSTMENT_MAP", "attr", "XML_ATTRS_ADJUSTMENT_MAP", "NS", "SVG_TAG_NAMES_ADJUSTMENT_MAP", "tn", "EXITS_FOREIGN_CONTENT", "TAG_ID", "causesExit", "startTagToken", "name", "ATTRS", "adjustTokenMathMLAttrs", "token", "i", "adjustTokenSVGAttrs", "adjustedAttrName", "adjustTokenXMLAttrs", "adjustedAttrEntry", "adjustTokenSVGTagName", "adjustedTagName", "getTagID", "isMathMLTextIntegrationPoint", "ns", "isHtmlIntegrationPoint", "attrs", "value", "isIntegrationPoint", "foreignNS", "HIDDEN_INPUT_TYPE", "AA_OUTER_LOOP_ITER", "AA_INNER_LOOP_ITER", "InsertionMode", "BASE_LOC", "TABLE_STRUCTURE_TAGS", "TAG_ID", "defaultParserOptions", "defaultTreeAdapter", "Parser", "options", "document", "fragmentContext", "scriptHandler", "Tokenizer", "FormattingElementList", "getTagID", "OpenElementStack", "html", "parser", "opts", "TAG_NAMES", "NS", "documentMock", "rootElement", "fragment", "token", "code", "beforeToken", "_a", "loc", "err", "node", "tid", "isTop", "_b", "current", "currentTagId", "isHTML", "currentToken", "nextTokenizerState", "TokenizerMode", "name", "publicId", "systemId", "docTypeNode", "element", "location", "parent", "namespaceURI", "tagName", "tagID", "tmpl", "content", "commentNode", "beforeElement", "siblings", "textNodeIdx", "textNode", "endLine", "endCol", "endOffset", "donor", "recipient", "child", "closingToken", "ctLoc", "tn", "endLoc", "TokenType", "foreignNS", "ns", "attrs", "isIntegrationPoint", "listLength", "endIndex", "entry", "EntryType", "unopenIdx", "i", "selectIdx", "openElement", "id", "SPECIAL_ELEMENTS", "characterInForeignContent", "tokenInInitialMode", "tokenBeforeHtml", "tokenBeforeHead", "tokenInHead", "tokenInHeadNoScript", "tokenAfterHead", "characterInBody", "characterInTable", "characterInTableText", "tokenInColumnGroup", "tokenAfterBody", "tokenAfterAfterBody", "nullCharacterInForeignContent", "appendComment", "tokenInTableText", "appendCommentToRootHtmlElement", "appendCommentToDocument", "doctypeInInitialMode", "ERR", "startTagInForeignContent", "startTagBeforeHtml", "startTagBeforeHead", "startTagInHead", "startTagInHeadNoScript", "startTagAfterHead", "startTagInBody", "startTagInTable", "startTagInCaption", "startTagInColumnGroup", "startTagInTableBody", "startTagInRow", "startTagInCell", "startTagInSelect", "startTagInSelectInTable", "startTagInTemplate", "startTagAfterBody", "startTagInFrameset", "startTagAfterFrameset", "startTagAfterAfterBody", "startTagAfterAfterFrameset", "endTagInForeignContent", "endTagBeforeHtml", "endTagBeforeHead", "endTagInHead", "endTagInHeadNoScript", "endTagAfterHead", "endTagInBody", "endTagInText", "endTagInTable", "endTagInCaption", "endTagInColumnGroup", "endTagInTableBody", "endTagInRow", "endTagInCell", "endTagInSelect", "endTagInSelectInTable", "endTagInTemplate", "endTagAfterBody", "endTagInFrameset", "endTagAfterFrameset", "eofInBody", "eofInText", "eofInTemplate", "stopParsing", "CODE_POINTS", "whitespaceCharacterInBody", "whitespaceCharacterInTableText", "aaObtainFormattingElementEntry", "p", "formattingElementEntry", "genericEndTagInBody", "aaObtainFurthestBlock", "furthestBlock", "idx", "aaInnerLoop", "formattingElement", "lastElement", "nextElement", "elementEntry", "counterOverflow", "aaRecreateElementFromEntry", "newElement", "aaInsertLastNodeInCommonAncestor", "commonAncestor", "aaReplaceFormattingElement", "callAdoptionAgency", "target", "htmlElement", "htmlLocation", "bodyElement", "bodyLocation", "mode", "DOCUMENT_MODE", "getDocumentMode", "isConforming", "templateEndTagInHead", "errCode", "modeInBody", "htmlStartTagInBody", "bodyStartTagInBody", "framesetStartTagInBody", "addressStartTagInBody", "numberedHeaderStartTagInBody", "NUMBERED_HEADERS", "preStartTagInBody", "formStartTagInBody", "inTemplate", "listItemStartTagInBody", "elementId", "plaintextStartTagInBody", "buttonStartTagInBody", "aStartTagInBody", "activeElementEntry", "bStartTagInBody", "nobrStartTagInBody", "appletStartTagInBody", "tableStartTagInBody", "areaStartTagInBody", "isHiddenInput", "inputType", "getTokenAttr", "ATTRS", "inputStartTagInBody", "paramStartTagInBody", "hrStartTagInBody", "imageStartTagInBody", "textareaStartTagInBody", "xmpStartTagInBody", "iframeStartTagInBody", "rawTextStartTagInBody", "selectStartTagInBody", "optgroupStartTagInBody", "rbStartTagInBody", "rtStartTagInBody", "mathStartTagInBody", "adjustTokenMathMLAttrs", "adjustTokenXMLAttrs", "svgStartTagInBody", "adjustTokenSVGAttrs", "genericStartTagInBody", "bodyEndTagInBody", "htmlEndTagInBody", "addressEndTagInBody", "formEndTagInBody", "formElement", "pEndTagInBody", "liEndTagInBody", "ddEndTagInBody", "numberedHeaderEndTagInBody", "appletEndTagInBody", "brEndTagInBody", "tokenInTable", "captionStartTagInTable", "colgroupStartTagInTable", "colStartTagInTable", "tbodyStartTagInTable", "tdStartTagInTable", "tableStartTagInTable", "inputStartTagInTable", "formStartTagInTable", "savedFosterParentingState", "TABLE_VOID_ELEMENTS", "REPLACEMENT_CHARACTER", "popUntilHtmlOrIntegrationPoint", "causesExit", "currentNs", "adjustTokenSVGTagName", "getCodePoint", "c", "index", "input", "getEscaper", "regex", "map", "data", "match", "lastIndex", "result", "escapeAttribute", "getEscaper", "escapeText", "VOID_ELEMENTS", "TAG_NAMES", "isVoidElement", "node", "options", "NS", "defaultOpts", "defaultTreeAdapter", "serialize", "opts", "serializeChildNodes", "serializeChildNodes", "parentNode", "options", "html", "container", "TAG_NAMES", "NS", "childNodes", "currentNode", "serializeNode", "node", "serializeElement", "serializeTextNode", "serializeCommentNode", "serializeDocumentTypeNode", "tn", "serializeAttributes", "isVoidElement", "treeAdapter", "attr", "escapeAttribute", "content", "parent", "parentTn", "hasUnescapedText", "escapeText", "parse", "html", "options", "Parser", "parseFragment", "fragmentContext", "parser", "HTML", "EventEmitter", "ctx", "str", "options", "node", "fn", "ast", "parse", "parseFragment", "serialize", "fnOptions", "element", "P5Element", "attr", "AttributeEvent", "child", "TextEvent", "meta", "src", "parts", "_P5Element", "stream", "name", "value", "i", "val", "html_default", "import_events", "CSS", "EventEmitter", "ctx", "str", "options", "type", "urlRegex", "Atruleregex", "match", "url", "encodedUrl", "importStatement", "firstQuote", "endQuote", "css_default", "unicodeLookup", "compressed", "lookup", "result", "index", "subIndex", "inst", "code", "isIDContinue", "isIDStart", "advanceChar", "parser", "consumePossibleSurrogatePair", "hi", "lo", "consumeLineFeed", "state", "scanNewLine", "isExoticECMAScriptWhitespace", "ch", "toHex", "convertTokenType", "t", "CharTypes", "isIdStart", "isIdPart", "isIdentifierStart", "isIdentifierPart", "CommentTypes", "skipHashBang", "source", "skipSingleLineComment", "skipSingleHTMLComment", "context", "type", "start", "isCR", "loc", "skipMultiLineComment", "skippedOneAsterisk", "RegexState", "RegexFlags", "scanRegularExpression", "bodyStart", "preparseState", "loop", "bodyEnd", "mask", "char", "flagStart", "flags", "pattern", "validate", "scanString", "quote", "ret", "marker", "parseEscape", "handleStringError", "first", "isTemplate", "nextChar", "column", "next", "ch1", "ch2", "ch3", "ch4", "scanTemplate", "token", "line", "scanBadTemplate", "scanTemplateTail", "errorMessages", "ParseError", "end", "params", "description", "_", "i", "message", "scanNumber", "kind", "value", "digit", "atStart", "digits", "allowSeparator", "scanDecimalDigitsOrSeparator", "isBigInt", "KeywordDescTable", "descKeywordTable", "matchOrInsertSemicolon", "consumeOpt", "isValidStrictMode", "tokenIndex", "tokenValue", "optionalBit", "nextToken", "consume", "reinterpretToPattern", "node", "elements", "n", "element", "properties", "validateBindingIdentifier", "skipEvalArgCheck", "validateFunctionName", "isStrictReservedWord", "isPropertyWithPrivateFieldKey", "expr", "isValidLabel", "labels", "name", "isIterationStatement", "validateAndDeclareLabel", "set", "isEqualTagName", "elementName", "isValidIdentifier", "classifyIdentifier", "getOwnProperty", "object", "key", "scanIdentifier", "isValidAsKeyword", "scanIdentifierSlowCase", "scanUnicodeIdentifier", "cookedChar", "scanIdentifierUnicodeEscape", "hasEscape", "merged", "length", "scanPrivateIdentifier", "scanUnicodeEscape", "codePoint", "begin", "char2", "char3", "char4", "TokenLookup", "scanSingleToken", "isStartOfLine", "entities", "decodeMap", "decodeHTMLStrict", "text", "secondChar", "decodeCodePoint", "scanJSXAttributeValue", "scanJSXString", "nextJSXToken", "raw", "rescanJSXIdentifier", "Scope", "_Scope", "parent", "origin", "currentScope", "variableBindings", "scopeError", "createArrowHeadParsingScope", "scope", "PrivateScope", "privateIdentifiers", "focusKind", "Parser", "options", "replaceLast", "onToken", "endIndex", "exportedNames", "pushComment", "comments", "comment", "pushToken", "tokens", "normalizeOptions", "rawOptions", "parseSource", "body", "sourceType", "parseModuleItemList", "parseStatementList", "statements", "tokenStart", "parseLiteral", "parseDirective", "parseStatementListItem", "parseModuleItem", "parseDecorators", "moduleItem", "parseExportDeclaration", "parseImportDeclaration", "privateScope", "parseFunctionDeclaration", "parseClassDeclaration", "parseLexicalDeclaration", "parseLetIdentOrVarDeclarationStatement", "parseImportCallDeclaration", "parseImportMetaDeclaration", "parseAsyncArrowOrAsyncFunctionDeclaration", "parseStatement", "allowFuncDecl", "parseVariableStatement", "parseReturnStatement", "parseIfStatement", "parseForStatement", "parseDoWhileStatement", "parseWhileStatement", "parseSwitchStatement", "parseEmptyStatement", "parseBlock", "parseThrowStatement", "parseBreakStatement", "parseContinueStatement", "parseTryStatement", "parseWithStatement", "parseDebuggerStatement", "parseExpressionOrLabelledStatement", "parseIdentifier", "parsePrimaryExpression", "parseLabelledStatement", "parseMemberOrUpdateExpression", "parseAssignmentExpression", "parseSequenceExpression", "parseExpressionStatement", "argument", "parseExpressions", "expression", "asyncNewLine", "parseAsyncArrowAfterIdent", "parseAsyncArrowOrCallExpression", "parseArrowFromIdentifier", "test", "consequent", "parseConsequentOrAlternative", "alternate", "discriminant", "cases", "seenDefault", "parseIterationStatementBody", "label", "firstScope", "block", "handler", "parseCatchBlock", "finalizer", "finalizerScope", "param", "additionalScope", "parseBindingPattern", "parseStaticBlock", "ctorContext", "declarations", "parseVariableDeclarationList", "parseArrowFunctionExpression", "bindingCount", "list", "parseVariableDeclaration", "init", "id", "parseExpression", "forAwait", "update", "destructible", "isVarDecl", "right", "patternStart", "parseObjectLiteralOrPattern", "parseArrayExpressionOrPattern", "parseLeftHandSideExpression", "parseRestrictedIdentifier", "specifiers", "local", "parseImportNamespaceSpecifier", "parseImportSpecifierOrNamedImports", "parseModuleSpecifier", "attributes", "parseImportAttributes", "imported", "parseModuleExportName", "parseImportMetaExpression", "parseImportExpression", "declaration", "exported", "tmpExportedNames", "tmpExportedBindings", "hasLiteralLocal", "b", "canAssign", "inGroup", "expressions", "isPattern", "left", "parseBinaryExpression", "parseConditionalExpression", "parseAssignmentExpressionOrPattern", "minPrecedence", "operator", "bit", "precedence", "parseUnaryExpression", "isLHS", "unaryOperator", "arg", "parseAsyncExpression", "inNew", "parseFunctionExpression", "parseYieldExpressionOrIdentifier", "delegate", "parseIdentifierOrArrow", "parseAwaitExpressionOrIdentifier", "possibleIdentifierOrArrowFunc", "parseFunctionBody", "funcNameToken", "functionScope", "parseSuperExpression", "parseUpdateExpression", "inChain", "property", "parsePropertyOrPrivatePropertyName", "restoreHasOptionalChaining", "args", "parseArguments", "parseOptionalChain", "parseTemplate", "parseTemplateLiteral", "parsePrivateIdentifier", "parseUpdateExpressionPrefixed", "parseObjectLiteral", "parseArrayLiteral", "parseParenthesizedExpression", "parseNullOrTrueOrFalseLiteral", "parseThisExpression", "parseRegExpLiteral", "parseClassExpression", "parseNewExpression", "parseBigIntLiteral", "parseImportCallOrMetaExpression", "parseJSXRootElementOrFragment", "meta", "expContext", "keysContent", "parseIdentifierOrStringLiteral", "parseStringLiteral", "keyContent", "validateStringWellFormed", "str", "len", "tokenRaw", "quasis", "parseTemplateElement", "cooked", "tail", "tailSize", "parseSpreadElement", "allowRegex", "allowGen", "isAsync", "isGenerator", "parseFormalParametersOrFormalList", "modifierFlags", "generatorAndAsyncFlags", "skipInitializer", "parseSpreadOrRestElement", "parseArrayOrObjectAssignmentPattern", "closingToken", "parseMethodDefinition", "parseMethodFormals", "prototypeCount", "tokenAfterColon", "valueAfterColon", "parseComputedPropertyName", "setterArgs", "isNonSimpleParameterList", "parseAndClassifyIdentifier", "parenthesesStart", "parseParenthesizedArrow", "isSequence", "hasStrictReserved", "tokenAfterParenthesesStart", "parseMemberExpressionNoCall", "parseMetaProperty", "callee", "tokenRegExp", "decorators", "superClass", "inheritedContext", "parseClassBody", "parseDecoratorList", "parentScope", "hasConstr", "decoratorStart", "parseClassElementList", "isStatic", "parsePropertyDefinition", "inJSXChild", "openingFragment", "parseJSXOpeningFragment", "children", "closingFragment", "parseJSXChildrenAndClosingFragment", "closingElement", "openingElement", "parseJSXOpeningElementOrSelfCloseElement", "parseJSXChildrenAndClosingElement", "close", "parseJSXClosingElement", "parseJSXElementName", "parseJSXClosingFragment", "child", "parseJSXChildOrClosingElement", "parseJSXChildOrClosingFragment", "parseJSXText", "parseJSXExpressionContainer", "tagName", "parseJSXAttributes", "selfClosing", "parseJSXIdentifier", "parseJSXNamespacedName", "parseJSXMemberExpression", "parseJsxAttribute", "parseJSXSpreadAttribute", "namespace", "isAttr", "parseJSXSpreadChild", "parseJSXEmptyExpression", "parseScript", "source", "options", "parseSource", "stringify", "OPERATOR_PRECEDENCE", "NEEDS_PARENTHESES", "EXPRESSIONS_PRECEDENCE", "formatSequence", "state", "nodes", "generator", "length", "param", "expressionNeedsParenthesis", "node", "parentNode", "isRightHand", "nodePrecedence", "parentNodePrecedence", "formatExpression", "reindent", "text", "indent", "lineEnd", "lines", "end", "i", "formatComments", "comments", "comment", "hasCallExpression", "currentNode", "type", "formatVariableDeclaration", "declarations", "ForInStatement", "FunctionDeclaration", "RestElement", "BinaryExpression", "ArrayExpression", "BlockStatement", "GENERATOR", "writeComments", "statements", "statement", "statementIndent", "precedence", "caseIndent", "occurences", "occurencesCount", "occurence", "consequent", "consequentCount", "handler", "init", "left", "superClass", "specifiers", "attributes", "specifier", "name", "kind", "params", "quasis", "expressions", "expression", "quasi", "elements", "element", "propertyIndent", "comma", "properties", "property", "operator", "argument", "needsParentheses", "isIn", "test", "regex", "EMPTY_OBJECT", "State", "options", "setup", "EMPTY_OBJECT", "GENERATOR", "EXPRESSIONS_PRECEDENCE", "code", "node", "type", "mapping", "length", "column", "line", "i", "lineEnd", "generate", "state", "import_events", "JS", "EventEmitter", "parseScript", "generate", "str", "data", "type", "output", "ast", "meta", "slice", "node", "parent", "a", "b", "change", "handler", "walk", "child", "entry", "js_default", "import_set_cookie_parser", "plain", "str", "xor", "result", "len", "i", "char", "base64", "import_set_cookie_parser", "validateCookie", "cookie", "meta", "js", "db", "openDB", "serialize", "cookies", "str", "getCookies", "now", "expired", "setCookies", "data", "setCookie", "attributes", "ctx", "meta", "html", "js", "attributePrefix", "origPrefix", "attr", "type", "isUrl", "isSrcset", "isHtml", "isStyle", "isForbidden", "isEvent", "text", "css", "name", "tag", "injectHead", "element", "createJsInject", "cookies", "referrer", "createHtmlInject", "handlerScript", "bundleScript", "clientScript", "configScript", "property", "ctx", "js", "node", "data", "type", "computedProperty", "parent", "identifier", "wrapEval", "script", "importDeclaration", "dynamicImport", "importMeta", "unwrap", "isWrapped", "arg", "instanceOfAny", "object", "constructors", "c", "idbProxyableTypes", "cursorAdvanceMethods", "getIdbProxyableTypes", "getCursorAdvanceMethods", "transactionDoneMap", "transformCache", "reverseTransformCache", "promisifyRequest", "request", "promise", "resolve", "reject", "unlisten", "success", "error", "wrap", "cacheDonePromiseForTransaction", "tx", "done", "complete", "idbProxyTraps", "target", "prop", "receiver", "value", "replaceTraps", "callback", "wrapFunction", "func", "args", "unwrap", "transformCachableValue", "newValue", "openDB", "name", "version", "blocked", "upgrade", "blocking", "terminated", "openPromise", "event", "db", "readMethods", "writeMethods", "cachedMethods", "getMethod", "target", "prop", "targetFuncName", "useIndex", "isWrite", "method", "storeName", "args", "tx", "replaceTraps", "oldTraps", "receiver", "advanceMethodProps", "methodMap", "advanceResults", "ittrProxiedCursorToOriginalProxy", "cursorIteratorTraps", "cachedFunc", "iterate", "cursor", "proxiedCursor", "reverseTransformCache", "unwrap", "isIteratorProp", "instanceOfAny", "t", "r", "a", "s", "o", "n", "c", "e", "i", "l", "p", "e", "t", "c", "l", "a", "i", "r", "s", "o", "w", "n", "g", "r", "f", "y", "b", "k", "e", "p", "t", "r", "a", "f", "g", "w", "s", "o", "n", "c", "y", "i", "b", "import_events", "Ultraviolet", "_Ultraviolet", "options", "html_default", "css_default", "js_default", "createHtmlInject", "createJsInject", "isUrl", "isForbidden", "isHtml", "isSrcset", "isStyle", "validateCookie", "db", "getCookies", "setCookies", "serialize", "setCookie", "str", "src", "meta", "attributes", "text", "injectHead", "importDeclaration", "dynamicImport", "importMeta", "property", "wrapEval", "identifier", "unwrap", "xor", "base64", "plain", "openDB", "k", "EventEmitter", "rewrite_default"]
}
